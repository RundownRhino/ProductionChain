{"version":3,"sources":["data/data.js","components/utils/graph.js","components/menus/AboutMenu.js","components/menus/ImportExportMenu.js","components/menus/ClearMenu.js","components/menus/RecipeRow.js","components/menus/RecipeMenu.js","components/menus/CalculatorMenu.js","components/menus/EditMenu.js","components/menus/SettingsMenu.js","components/menus/MenuDialog.js","components/DataTable/DataTable.js","components/DataTable/index.js","components/NavContent.js","components/HeaderContent.js","components/utils/overclock.js","App.js","index.js"],"names":["TierNames","Voltages","Recipes","step","machineName","machineTier","overclock","rft","time","inputs","name","quantity","unit","outputs","targetMachines","DefaultTheme","typography","htmlFontSize","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","type","primary","light","main","dark","contrastText","secondary","GenerateGraph","recipes","directedGraph","DirectedGraph","upgradeToMulti","forEach","recipe","addNode","Number","timeoc","visitedCount","edgeGraph","graph","forEachNode","source","sourceAttributes","output","target","targetAttributes","input","addDirectedEdge","inputQuantity","inputTime","outputQuantity","outputTime","GenerateEdges","adjList","edges","node","forEachEdge","edge","attributes","push","Object","values","FindAdjList","cycles","findCircuits","tmpGraph","cycle","dropEdge","FixGraph","RemoveCycles","reverse","MachineRequirements","machineTotals","machineSteps","length","forEachOutEdge","sort","FindInitialInputs","FindFinalOutputs","tier","machine","recipeRft","rftoc","Math","ceil","SettingsMenu","React","memo","props","DialogTitle","title","DialogContent","DialogContentText","Link","rel","href","DialogActions","Button","onClick","handleClose","color","ImportExportMenu","useState","data","setData","TextField","multiline","fullWidth","size","rowsMax","variant","value","onChange","event","array","split","uint8array","Uint8Array","from","JSON","parse","decompress","handleRecipes","jString","stringify","compressedData","compress","toString","ClearMenu","handleClear","regAnyNumber","RecipeRow","handleQuantity","item","state","setState","handleUpdateItems","id","handleUnit","handleName","unitLabelRef","createRef","unitLabelWidth","this","current","offsetWidth","FormControl","className","classes","formControlSmall","error","test","label","required","InputLabel","ref","Select","labelWidth","placeholder","MenuItem","formControl","Component","withStyles","theme","margin","spacing","minWidth","maxWidth","useStyles","makeStyles","pushDefault","n","newArray","i","slice","RecipeMenu","isEu","setIsEu","setMachineName","setMachineTier","setOverclock","setRft","setTime","numInputs","setNumInputs","numOutputs","setNumOutputs","setInputs","setOutputs","regWholeNumber","tierLabel","useRef","tierLabelWidth","setTierLabelWidth","useEffect","handleUpdateInputs","newInputs","handleUpdateOutputs","newOutputs","map","index","key","FormControlLabel","control","Checkbox","checked","labelPlacement","prevInputs","prevOutputs","Divider","style","Grid","container","direction","justify","alignitems","xs","CalculatorMenu","requirements","setRequirements","setTargetMachines","keys","targetItem","setTargetItem","targetQuantity","setTargetQuantity","targetRatio","setTargetRatio","targetOps","setTargetOps","targetLabelWidth","setTargetLabelWidth","targetLabel","alignItems","handleItem","entries","setNodeAttribute","calculatedGraph","copy","CalculateTarget","sourceNode","calculatorTargetMachines","getNodeAttributes","forEachOutNeighbor","targetNode","edgeAttributes","getEdgeAttributes","getNodeAttribute","inDegree","updateNodeAttribute","Fragment","toFixed","EditMenu","rowData","valid","setValid","indexOf","updatedRecipe","handleUpdate","disabled","themeType","Typography","Switch","handleTheme","MenuDialog","contentType","isOpen","Dialog","disableBackdropClick","fullScreen","open","onClose","AboutMenu","handleEdit","DataTableCell","items","DataTable","handleDialogOpen","editable","dialog","handleDialogClose","columns","field","readonly","width","lookup","assign","customFilterAndSearch","search","toUpperCase","render","editComponent","found","includes","Array","Paper","my","options","actionsColumnIndex","maxBodyHeight","paging","pageSizeOptions","showTitle","sorting","tableLayout","onRowDelete","oldData","Promise","resolve","reject","setTimeout","splice","actions","icon","tooltip","temp","NavContent","setOpen","setTitle","setType","setSize","List","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","noWrap","header","fontWeight","grow","flexGrow","AddOverclock","oc","EUt","tierIndex","duration","resultEUt","resultDuration","multiplier","eut","ticks","Overclock","config","sidebar","anchor","collapsible","collapsedWidth","content","persistentBehavior","position","clipped","offsetHeight","App","toggleDarkTheme","window","localStorage","setItem","handleCollapse","collapsed","newRecipes","getItem","headers","Headers","muiTheme","createMuiTheme","CssBaseline","initialCollapsed","sidebarStyles","Toolbar","headerStyles","leftTrigger","Container","Box","onChangeOC","handleOverclock","onChangeTier","handleTier","document","querySelector"],"mappings":"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","file":"static/js/main.19411a44.chunk.js","sourcesContent":["const TierNames = [\r\n  'N/A',\r\n  'ULV',\r\n  'LV',\r\n  'MV',\r\n  'HV',\r\n  'EV',\r\n  'IV',\r\n  'LuV',\r\n  'ZPMV',\r\n  'UV',\r\n];\r\n\r\nconst Voltages = [8, 32, 128, 512, 2048, 8192, 32768, 131072, 524288];\r\n\r\nconst Colors = [\r\n  '#3B511A',\r\n  '#51301A',\r\n  '#253192',\r\n  '#7B2FBE',\r\n  '#287697',\r\n  '#434343',\r\n  '#D88198',\r\n  '#41CD34',\r\n  '#DECF2A',\r\n  '#6689D3',\r\n  '#C354CD',\r\n  '#EB8844',\r\n  '#1E1B1B',\r\n  '#B3312C',\r\n];\r\nconst Recipes2 = [\r\n  {\r\n    step: 0,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Cobblestone',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 1,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 60,\r\n    time: 1,\r\n    inputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Water',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Electrolyzer',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 400,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 12,\r\n    inputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Numismatic Dynamo',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 10.32,\r\n    inputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'RF/t',\r\n        quantity: 12500,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst Recipes = [\r\n  {\r\n    step: 0,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 3.15,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 1,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 48,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Coal',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 8,\r\n    inputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 12,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 1.3,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 384,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 5.9,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Diamond Furnace',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 1.28,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Pyrolyse Oven',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Wood',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Steam',\r\n        quantity: 4000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1500,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Distillery',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 256,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 20,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 8,\r\n    inputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Air',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 15,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 64,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Iron Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 16,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 17,\r\n    machineName: 'Blast Furnace',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 300,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 32,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Tiny Pile of Gallium Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 18,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 5,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 19,\r\n    machineName: 'Precision Laser Engraver',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 45,\r\n    inputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 1,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 20,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 60,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 90,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 21,\r\n    machineName: 'Fluid Solidifier',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 22,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 23,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 3.15,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 24,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 2000,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Sulfur Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 3000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 25,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 125,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 26,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Soldering Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 27,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 240,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 72,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Refined Circuit',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst DefaultTheme = {\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff5c8d',\r\n      main: '#d81b60',\r\n      dark: '#a00037',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n};\r\n\r\nexport { TierNames, Voltages, Colors, Recipes, DefaultTheme };\r\n","import { DirectedGraph } from 'graphology';\r\nimport { reverse } from 'graphology-operators';\r\nimport findCircuits from 'elementary-circuits-directed-graph';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\n/**\r\n *A directed graph for recipe calculations.\r\n *\r\n * @export\r\n * @param {*} recipes - Input object containing recipes\r\n * @returns\r\n */\r\nfunction GenerateGraph(recipes) {\r\n  let directedGraph = new DirectedGraph();\r\n  directedGraph.upgradeToMulti();\r\n\r\n  recipes.forEach((recipe) => {\r\n    directedGraph.addNode(Number(recipe.step), {\r\n      inputs: recipe.inputs,\r\n      machineName: recipe.machineName,\r\n      machineTier: recipe.machineTier,\r\n      outputs: recipe.outputs,\r\n      targetMachines: 1,\r\n      time: recipe.overclock ? recipe.timeoc : recipe.time,\r\n      visitedCount: 0,\r\n    });\r\n  });\r\n\r\n  let edgeGraph = GenerateEdges(directedGraph);\r\n  let reversedGraph = reverse(edgeGraph);\r\n  let acyclicGraph = RemoveCycles(reversedGraph);\r\n\r\n  return acyclicGraph;\r\n}\r\n\r\nfunction GenerateEdges(graph) {\r\n  let edgeGraph = graph;\r\n\r\n  edgeGraph.forEachNode((source, sourceAttributes) => {\r\n    sourceAttributes.outputs.forEach((output) => {\r\n      edgeGraph.forEachNode((target, targetAttributes) => {\r\n        if (source !== target) {\r\n          targetAttributes.inputs.forEach((input) => {\r\n            if (input.name === output.name) {\r\n              edgeGraph.addDirectedEdge(source, target, {\r\n                name: input.name,\r\n                inputQuantity: input.quantity,\r\n                inputTime: targetAttributes.time,\r\n                outputQuantity: output.quantity,\r\n                outputTime: sourceAttributes.time,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return edgeGraph;\r\n}\r\n\r\nfunction RemoveCycles(graph) {\r\n  let adjList = FindAdjList(graph);\r\n  let cycles = findCircuits(adjList);\r\n\r\n  if (cycles) {\r\n    let acyclicGraph = FixGraph(graph, cycles);\r\n    return acyclicGraph;\r\n  } else {\r\n    return graph;\r\n  }\r\n}\r\n\r\nfunction FindAdjList(graph) {\r\n  let edges = [];\r\n\r\n  graph.forEachNode((node) => {\r\n    edges[node] = [];\r\n  });\r\n\r\n  graph.forEachEdge(\r\n    (edge, attributes, source, target, sourceAttributes, targetAttributes) => {\r\n      edges[source].push(Number(target));\r\n    }\r\n  );\r\n  let adjList = Object.values(edges);\r\n\r\n  return adjList;\r\n}\r\n\r\nfunction FixGraph(graph, cycles) {\r\n  let tmpGraph = graph;\r\n\r\n  for (let cycle of cycles) {\r\n    let source = cycle[0];\r\n    let target = cycle[1];\r\n\r\n    let edges = tmpGraph.edges(source, target);\r\n    edges.forEach((edge) => {\r\n      tmpGraph.dropEdge(edge);\r\n    });\r\n  }\r\n\r\n  return tmpGraph;\r\n}\r\n\r\nfunction MachineRequirements(recipes, graph) {\r\n  let machineTotals = [];\r\n  let machineSteps = [];\r\n  let rft = 0;\r\n  let inputs = [];\r\n  let outputs = [];\r\n\r\n  if (typeof recipes === 'undefined' || recipes.length === 0) {\r\n    return { machineTotals, machineSteps, rft, inputs, outputs };\r\n  }\r\n\r\n  inputs = FindInitialInputs(graph);\r\n  outputs = FindFinalOutputs(graph);\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    let tier = TierNames[attributes.machineTier];\r\n    let prefix = tier !== 'N/A' ? tier + ' ' : '';\r\n    let machineName = attributes.machineName;\r\n    let machine = prefix + machineName;\r\n    let recipe = recipes[node];\r\n    let recipeRft = recipe.overclock ? recipe.rftoc : recipe.rft;\r\n\r\n    if (!(machine in machineTotals)) {\r\n      machineTotals[machine] = Math.ceil(attributes.targetMachines);\r\n    } else {\r\n      machineTotals[machine] =\r\n        machineTotals[machine] + Math.ceil(attributes.targetMachines);\r\n    }\r\n\r\n    machineSteps[node] = machine + ' ' + Math.ceil(attributes.targetMachines);\r\n\r\n    rft = rft + Math.ceil(attributes.targetMachines) * recipeRft;\r\n  });\r\n\r\n  return { machineTotals, machineSteps, rft, inputs, outputs };\r\n}\r\n\r\nfunction FindInitialInputs(graph) {\r\n  let inputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.inputs.forEach((input) => {\r\n      if (!(input.name in inputs)) {\r\n        inputs[input.name] = {\r\n          node: Number(node),\r\n          quantity: input.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in inputs) {\r\n          delete inputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return inputs.sort();\r\n}\r\n\r\nfunction FindFinalOutputs(graph) {\r\n  let outputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.outputs.forEach((output) => {\r\n      if (!(output.name in outputs)) {\r\n        outputs[output.name] = {\r\n          node: Number(node),\r\n          quantity: output.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in outputs) {\r\n          delete outputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return outputs.sort();\r\n}\r\n\r\nfunction CalculateTarget(graph, sourceNode, calculatorTargetMachines) {\r\n  let sourceAttributes = graph.getNodeAttributes(sourceNode);\r\n  if (typeof calculatorTargetMachines !== 'undefined') {\r\n    graph.setNodeAttribute(\r\n      sourceNode,\r\n      'targetMachines',\r\n      calculatorTargetMachines\r\n    );\r\n  }\r\n\r\n  graph.forEachOutNeighbor(sourceNode, (targetNode, targetAttributes) => {\r\n    let edges = graph.edges(sourceNode, targetNode);\r\n\r\n    edges.forEach((edge) => {\r\n      let edgeAttributes = graph.getEdgeAttributes(edge);\r\n      let inBPS =\r\n        (edgeAttributes.inputQuantity / edgeAttributes.inputTime) *\r\n        sourceAttributes.targetMachines;\r\n      let outBPS = edgeAttributes.outputQuantity / edgeAttributes.outputTime;\r\n      let targetMachines = inBPS / outBPS;\r\n\r\n      if (\r\n        graph.getNodeAttribute(targetNode, 'visitedCount') > 0 &&\r\n        graph.inDegree(targetNode) > 1\r\n      ) {\r\n        graph.updateNodeAttribute(\r\n          targetNode,\r\n          'targetMachines',\r\n          (n) => n + targetMachines\r\n        );\r\n        graph.updateNodeAttribute(targetNode, 'visitedCount', (n) => n + 1);\r\n      } else {\r\n        graph.setNodeAttribute(targetNode, 'targetMachines', targetMachines);\r\n        graph.setNodeAttribute(targetNode, 'visitedCount', 1);\r\n      }\r\n    });\r\n\r\n    return CalculateTarget(graph, targetNode);\r\n  });\r\n\r\n  return graph;\r\n}\r\n\r\nexport { GenerateGraph, MachineRequirements, CalculateTarget };\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          A production chain calculator inspired by the{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://kirkmcdonald.github.io/\">\r\n            Kirk McDonald calculator\r\n          </Link>{' '}\r\n          for Factorio. Please ask questions and report bugs at{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://github.com/SimonNguyen/ProductionChain\">\r\n            GitHub\r\n          </Link>\r\n          .\r\n          <br />\r\n          <br />\r\n          Shortcuts: <br />\r\n          <code>ESC</code> closes dialog menus.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { compress, decompress } from 'lzutf8';\r\n\r\nconst ImportExportMenu = React.memo(function ImportExportMenu(props) {\r\n  const [data, setData] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    let array = data.split(',');\r\n    let uint8array = Uint8Array.from(array);\r\n    let recipes = JSON.parse(decompress(uint8array));\r\n    props.handleRecipes(recipes);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    let jString = JSON.stringify(props.recipes);\r\n    let compressedData = compress(jString);\r\n    setData(compressedData.toString());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Paste a recipe string below to import a recipe.\r\n        </DialogContentText>\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          size=\"medium\"\r\n          rowsMax=\"10\"\r\n          variant=\"outlined\"\r\n          value={data}\r\n          onChange={handleChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleImport} color=\"default\">\r\n          Import\r\n        </Button>\r\n        <Button onClick={handleExport} color=\"default\">\r\n          Export\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ImportExportMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ClearMenu = React.memo(function ClearMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => props.handleClear()} color=\"default\">\r\n            Accept\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ClearMenu;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n});\r\n\r\nconst regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\nclass RecipeRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.unitLabelRef = React.createRef();\r\n    this.state = {\r\n      unitLabelWidth: 0,\r\n      item: this.props.item,\r\n    };\r\n  }\r\n\r\n  handleQuantity = (event) => {\r\n    const value = Number(event.target.value);\r\n    let item = this.state.item;\r\n    item.quantity = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleUnit = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.unit = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleName = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.name = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ unitLabelWidth: this.unitLabelRef.current.offsetWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormControl className={this.props.classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.quantity)}\r\n            label=\"Quantity\"\r\n            required\r\n            type=\"number\"\r\n            value={this.state.item.quantity.toString()}\r\n            variant=\"outlined\"\r\n            onChange={this.handleQuantity}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={this.props.classes.formControlSmall}>\r\n          <InputLabel ref={this.unitLabelRef}>Unit</InputLabel>\r\n          <Select\r\n            labelWidth={this.state.unitLabelWidth}\r\n            label=\"Unit\"\r\n            placeholder=\"b\"\r\n            value={this.state.item.unit}\r\n            onChange={this.handleUnit}>\r\n            <MenuItem value=\"b\">b</MenuItem>\r\n            <MenuItem value=\"mb\">mb</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={this.props.classes.formControl}>\r\n          <TextField\r\n            error={this.props.item.name.length === 0}\r\n            label=\"Item Name\"\r\n            required\r\n            type=\"string\"\r\n            value={this.state.item.name}\r\n            variant=\"outlined\"\r\n            onChange={this.handleName}\r\n          />\r\n        </FormControl>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RecipeRow);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nconst RecipeMenu = React.memo(function RecipeMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState('');\r\n  const [machineTier, setMachineTier] = React.useState(0);\r\n  const [overclock, setOverclock] = React.useState(false);\r\n  const [rft, setRft] = React.useState(0);\r\n  const [time, setTime] = React.useState(0);\r\n  const [numInputs, setNumInputs] = React.useState(1);\r\n  const [numOutputs, setNumOutputs] = React.useState(1);\r\n\r\n  const [inputs, setInputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n  const [outputs, setOutputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n  const regWholeNumber = /^\\d+$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n    }\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n    }\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n  };\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = inputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={overclock === true}\r\n              onChange={() => setOverclock(!overclock)}\r\n              value={overclock}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Overclock\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            {inputs.map((input, index) => (\r\n              <RecipeRow\r\n                key={'input' + index}\r\n                id={index}\r\n                item={input}\r\n                handleUpdateItems={handleUpdateInputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {outputs.map((output, index) => (\r\n              <RecipeRow\r\n                key={'output' + index}\r\n                id={index}\r\n                item={output}\r\n                handleUpdateItems={handleUpdateOutputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Add\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RecipeMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MachineRequirements, CalculateTarget } from '../utils/graph';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CalculatorMenu = React.memo(function CalculatorMenu(props) {\r\n  const classes = useStyles();\r\n  const [requirements, setRequirements] = React.useState(\r\n    MachineRequirements(props.recipes, props.graph)\r\n  );\r\n  const [targetMachines, setTargetMachines] = React.useState(1);\r\n  const [targetItem, setTargetItem] = React.useState(\r\n    requirements.outputs.length !== 0 ? Object.keys(requirements.outputs)[0] : 0\r\n  );\r\n  const [targetQuantity, setTargetQuantity] = React.useState(\r\n    requirements.outputs.length !== 0\r\n      ? requirements.outputs[targetItem].quantity\r\n      : 0\r\n  );\r\n  const [targetRatio, setTargetRatio] = React.useState(\r\n    requirements.outputs.length !== 0\r\n      ? targetQuantity / requirements.outputs[targetItem].time\r\n      : 0\r\n  );\r\n  const [targetOps, setTargetOps] = React.useState(targetRatio);\r\n  const [targetLabelWidth, setTargetLabelWidth] = React.useState(0);\r\n\r\n  const targetLabel = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (props.recipes.length !== 0) {\r\n      setTargetLabelWidth(targetLabel.current.offsetWidth);\r\n    }\r\n  }, [props.recipes.length]);\r\n\r\n  const handleOps = (value) => {\r\n    setTargetOps(value);\r\n    setTargetMachines(value / targetRatio);\r\n  };\r\n\r\n  const handleMachines = (value) => {\r\n    setTargetMachines(value);\r\n    setTargetOps(value * targetRatio);\r\n  };\r\n\r\n  const handleItem = (value) => {\r\n    let quantity = requirements.outputs[value].quantity;\r\n    setTargetItem(value);\r\n    setTargetQuantity(quantity);\r\n    setTargetRatio(quantity / requirements.outputs[value].time);\r\n  };\r\n\r\n  const handleTarget = () => {\r\n    props.graph.setNodeAttribute(\r\n      requirements.outputs[targetItem].node,\r\n      'targetMachines',\r\n      targetMachines\r\n    );\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    let calculatedGraph = props.graph.copy();\r\n    Object.entries(requirements.outputs)\r\n      .sort()\r\n      .forEach(([key, value]) => CalculateTarget(calculatedGraph, value.node));\r\n\r\n    setRequirements(MachineRequirements(props.recipes, calculatedGraph));\r\n  };\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        {props.recipes.length !== 0 ? (\r\n          <>\r\n            <DialogContentText>\r\n              The default setting for the calculator is a single machine\r\n              producing the final product. If you require more or less product,\r\n              adjust the machines or outputs per second. Once you have set\r\n              custom targets, press the 'calculate' button to redetermine the\r\n              requirements for the recipe.\r\n            </DialogContentText>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  error={!regAnyNumber.test(targetOps)}\r\n                  label=\"Output per second\"\r\n                  placeholder=\"1\"\r\n                  required\r\n                  type=\"number\"\r\n                  value={targetOps}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => handleOps(Number(event.target.value))}\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <TextField\r\n                  error={!regAnyNumber.test(targetMachines)}\r\n                  label=\"Number of machines\"\r\n                  placeholder=\"1\"\r\n                  required\r\n                  type=\"number\"\r\n                  value={targetMachines}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) =>\r\n                    handleMachines(Number(event.target.value))\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel ref={targetLabel}>Target Output</InputLabel>\r\n                <Select\r\n                  label=\"Target Output\"\r\n                  labelWidth={targetLabelWidth}\r\n                  value={targetItem}\r\n                  onChange={(event) => handleItem(event.target.value)}>\r\n                  {Object.entries(requirements.outputs)\r\n                    .sort()\r\n                    .map(([key, value]) => (\r\n                      <MenuItem key={'select' + key} value={key}>\r\n                        {key}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <div>\r\n                <Button\r\n                  className={classes.margin}\r\n                  onClick={handleTarget}\r\n                  color=\"default\"\r\n                  variant=\"outlined\">\r\n                  Set Target\r\n                </Button>\r\n                <Button\r\n                  className={classes.margin}\r\n                  onClick={handleCalculate}\r\n                  color=\"default\"\r\n                  variant=\"outlined\">\r\n                  Calculate\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <Divider style={{ margin: '12px 0' }} />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignitems=\"center\">\r\n              <Grid item xs={3}>\r\n                <DialogContentText>Machines per Step</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <DialogContentText>Machine Totals</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Inputs/s</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Outputs/s</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Power Consumed</DialogContentText>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignitems=\"center\">\r\n              <Grid item xs={3}>\r\n                {Object.entries(requirements.machineSteps).map(\r\n                  ([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      Step {key} : {value} <br />\r\n                    </React.Fragment>\r\n                  )\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {Object.entries(requirements.machineTotals)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} : {value} <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {Object.entries(requirements.inputs)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} :{' '}\r\n                      {(\r\n                        (value.quantity / value.time) *\r\n                        value.targetMachines\r\n                      ).toFixed(2)}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {Object.entries(requirements.outputs)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} :{' '}\r\n                      {(\r\n                        (value.quantity / value.time) *\r\n                        value.targetMachines\r\n                      ).toFixed(2)}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                RF/t: {requirements.rft} <br />\r\n                EU/t: {requirements.rft / 4}\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <DialogContentText>No recipe information.</DialogContentText>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CalculatorMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nfunction updatedRecipe(\r\n  isEu,\r\n  step,\r\n  machineName,\r\n  machineTier,\r\n  overclock,\r\n  rft,\r\n  time,\r\n  inputs,\r\n  outputs\r\n) {\r\n  let recipe = {\r\n    step: step,\r\n    machineName: machineName,\r\n    machineTier: machineTier,\r\n    overclock: overclock,\r\n    rft: isEu ? rft * 4 : rft,\r\n    time: time,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    targetMachines: 1,\r\n  };\r\n\r\n  return recipe;\r\n}\r\n\r\nconst EditMenu = React.memo(function EditMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState(\r\n    props.rowData.machineName\r\n  );\r\n  const [machineTier, setMachineTier] = React.useState(\r\n    props.rowData.machineTier\r\n  );\r\n  const [overclock, setOverclock] = React.useState(props.rowData.overclock);\r\n  const [rft, setRft] = React.useState(props.rowData.rft);\r\n  const [time, setTime] = React.useState(props.rowData.time);\r\n  const [numInputs, setNumInputs] = React.useState(props.rowData.inputs.length);\r\n  const [numOutputs, setNumOutputs] = React.useState(\r\n    props.rowData.outputs.length\r\n  );\r\n  const [inputs, setInputs] = React.useState(props.rowData.inputs);\r\n  const [outputs, setOutputs] = React.useState(props.rowData.outputs);\r\n  const [valid, setValid] = React.useState(true);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n  const regWholeNumber = /^\\d+$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n    }\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n    }\r\n  };\r\n\r\n  const handleUpdateMachineName = (value) => {\r\n    setMachineName(value);\r\n\r\n    if (value.length === 0) {\r\n      setValid(false);\r\n    } else {\r\n      setValid(true);\r\n    }\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n\r\n    newInputs.forEach((input) => {\r\n      if (input.name.length === 0) {\r\n        setValid(false);\r\n      } else {\r\n        setValid(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = outputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n\r\n    newOutputs.forEach((output) => {\r\n      if (output.name.length === 0) {\r\n        setValid(false);\r\n      } else {\r\n        setValid(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUpdateRecipes = () => {\r\n    let recipes = props.recipes;\r\n    let index = recipes.indexOf(props.rowData);\r\n\r\n    recipes[index] = updatedRecipe(\r\n      isEu,\r\n      props.rowData.step,\r\n      machineName,\r\n      machineTier,\r\n      overclock,\r\n      rft,\r\n      time,\r\n      inputs,\r\n      outputs\r\n    );\r\n\r\n    props.handleUpdate(recipes);\r\n    props.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleUpdateMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={overclock === true}\r\n              onChange={() => setOverclock(!overclock)}\r\n              value={overclock}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Overclock\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            {inputs.map((input, index) => (\r\n              <RecipeRow\r\n                key={'input' + index}\r\n                id={index}\r\n                item={input}\r\n                handleUpdateItems={handleUpdateInputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {outputs.map((output, index) => (\r\n              <RecipeRow\r\n                key={'output' + index}\r\n                id={index}\r\n                item={output}\r\n                handleUpdateItems={handleUpdateOutputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleUpdateRecipes} color=\"default\" disabled={!valid}>\r\n          Save\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EditMenu;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    checked: props.themeType === 'dark' ? true : false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    props.handleTheme();\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\">\r\n          <Typography color={'textPrimary'} variant=\"subtitle1\">\r\n            Dark Theme\r\n          </Typography>\r\n          <Switch checked={state.checked} onChange={handleChange('checked')} />\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport AboutMenu from './AboutMenu';\r\nimport ImportExportMenu from './ImportExportMenu';\r\nimport ClearMenu from './ClearMenu';\r\nimport RecipeMenu from './RecipeMenu';\r\nimport CalculatorMenu from './CalculatorMenu';\r\nimport EditMenu from './EditMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nconst MenuDialog = ({\r\n  contentType,\r\n  graph,\r\n  isOpen,\r\n  recipes,\r\n  rowData,\r\n  size,\r\n  themeType,\r\n  title,\r\n  handleClose,\r\n  handleClear,\r\n  handleRecipes,\r\n  handleTheme,\r\n  handleUpdate,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick={\r\n        contentType === 'add' || contentType === 'calculator'\r\n      }\r\n      fullScreen={contentType === 'chart'}\r\n      fullWidth\r\n      maxWidth={size}\r\n      open={isOpen}\r\n      onClose={handleClose}>\r\n      {contentType === 'about' ? (\r\n        <AboutMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'import' ? (\r\n        <ImportExportMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleRecipes={handleRecipes}\r\n          recipes={recipes}\r\n        />\r\n      ) : contentType === 'clear' ? (\r\n        <ClearMenu\r\n          title={title}\r\n          handleClear={handleClear}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : contentType === 'add' ? (\r\n        <RecipeMenu title={title} recipes={recipes} handleClose={handleClose} />\r\n      ) : contentType === 'settings' ? (\r\n        <SettingsMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleTheme={handleTheme}\r\n          themeType={themeType}\r\n        />\r\n      ) : contentType === 'calculator' ? (\r\n        <CalculatorMenu\r\n          title={title}\r\n          graph={graph}\r\n          recipes={recipes}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : contentType === 'edit' ? (\r\n        <EditMenu\r\n          title={title}\r\n          recipes={recipes}\r\n          rowData={rowData}\r\n          handleEdit={handleClose}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : (\r\n        <DialogContentText>No valid content type selected.</DialogContentText>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MenuDialog;\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialTable from 'material-table';\r\nimport { TierNames } from '../../data';\r\nimport MenuDialog from '../menus/MenuDialog';\r\n\r\nfunction DataTableCell(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.items.map((item) => (\r\n        <div key={'_' + props.type + item.name + props.step}>\r\n          {item.quantity + item.unit + ' ' + item.name}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: 'Step',\r\n          field: 'step',\r\n          readonly: true,\r\n          editable: 'never',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Machine Name',\r\n          field: 'machineName',\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Machine Tier',\r\n          field: 'machineTier',\r\n          lookup: Object.assign({}, TierNames),\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Overclock',\r\n          field: 'overclock',\r\n          type: 'boolean',\r\n          customFilterAndSearch: (search, rowData) => {\r\n            return (\r\n              rowData.overclock.toString().toUpperCase() ===\r\n              search.toUpperCase()\r\n            );\r\n          },\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'RF/t',\r\n          field: 'rft',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Time (s)',\r\n          field: 'time',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Base Inputs',\r\n          field: 'inputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.inputs}\r\n              step={rowData.step}\r\n              type={'input'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.inputs.forEach((input) => {\r\n              let values = Object.values(input);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n        {\r\n          title: 'Base Outputs',\r\n          field: 'outputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.outputs}\r\n              step={rowData.step}\r\n              type={'output'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.outputs.forEach((output) => {\r\n              let values = Object.values(output);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n      ],\r\n      recipes: Array.from(this.props.recipes),\r\n      dialog: false,\r\n      editable: [],\r\n    };\r\n  }\r\n\r\n  handleDialogOpen = (rowData) => {\r\n    this.setState({ editable: rowData });\r\n    this.setState({ dialog: true });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ dialog: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" my={2}>\r\n        <MaterialTable\r\n          columns={this.state.columns}\r\n          data={Array.from(this.props.recipes)}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: '77vh',\r\n            paging: true,\r\n            pageSizeOptions: [5, 10, 15, 20],\r\n            showTitle: false,\r\n            sorting: false,\r\n            tableLayout: 'auto',\r\n          }}\r\n          editable={{\r\n            // onRowUpdate: (newData, oldData) =>\r\n            //   new Promise((resolve, reject) => {\r\n            //     setTimeout(() => {\r\n            //       {\r\n            //         let recipes = this.state.recipes;\r\n            //         let index = recipes.indexOf(oldData);\r\n            //         recipes[index] = newData;\r\n            //         this.setState({ recipes }, () => resolve());\r\n            //         this.props.handleUpdate(recipes);\r\n            //       }\r\n            //       resolve();\r\n            //     }, 1000);\r\n            //   }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = [...this.state.recipes];\r\n                    let index = recipes.indexOf(oldData);\r\n                    recipes.splice(index, 1);\r\n\r\n                    recipes.forEach((recipe, index) => {\r\n                      recipe.step = index + 1;\r\n                    });\r\n\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 200);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'arrow_upward',\r\n              tooltip: 'Move up',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index > 0) {\r\n                  let temp = recipes[index - 1];\r\n                  recipes[index - 1] = recipes[index];\r\n                  recipes[index - 1].step = index - 1;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'arrow_downward',\r\n              tooltip: 'Move down',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index < recipes.length - 1) {\r\n                  let temp = recipes[index + 1];\r\n                  recipes[index + 1] = recipes[index];\r\n                  recipes[index + 1].step = index + 1;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'edit',\r\n              tooltip: 'Edit Recipe',\r\n              onClick: (event, rowData) => {\r\n                this.handleDialogOpen(rowData);\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <MenuDialog\r\n          contentType={'edit'}\r\n          size={'lg'}\r\n          title={'Edit a recipe'}\r\n          recipes={this.state.recipes}\r\n          rowData={this.state.editable}\r\n          isOpen={this.state.dialog}\r\n          handleClose={this.handleDialogClose}\r\n          handleUpdate={this.props.handleUpdate}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import DataTable from './DataTable';\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport MenuDialog from './menus/MenuDialog';\r\n\r\nconst NavContent = React.memo(function NavContent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [size, setSize] = React.useState('xs');\r\n\r\n  const handleDialogOpen = (type, title, size) => {\r\n    setSize(size);\r\n    setTitle(title);\r\n    setType(type);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    props.handleClear();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('about', 'About', 'xs')}>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'About'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen('import', 'Import or export a recipe list', 'sm')\r\n          }>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Import/Export Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'clear',\r\n              'Are you sure you want to clear all recipes?',\r\n              'xs'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <DeleteForeverIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Clear All Recipes'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('add', 'Add a recipe', 'lg')}>\r\n          <ListItemIcon>\r\n            <AddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Add Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'calculator',\r\n              'Calculated requirements for this recipe',\r\n              'lg'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <FunctionsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Calculator'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('settings', 'Settings', 'xs')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Settings'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <MenuDialog\r\n        contentType={type}\r\n        graph={props.graph}\r\n        recipes={props.recipes}\r\n        size={size}\r\n        themeType={props.themeType}\r\n        title={title}\r\n        isOpen={open}\r\n        handleClear={handleClear}\r\n        handleClose={handleDialogClose}\r\n        handleRecipes={props.handleRecipes}\r\n        handleTheme={props.handleTheme}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NavContent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => ({\r\n  header: {\r\n    fontWeight: 700,\r\n    minWidth: 0,\r\n    fontSize: 18,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst HeaderContent = ({ classes }) => (\r\n  <Typography noWrap color={'textPrimary'} className={classes.header}>\r\n    Production Chain\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(HeaderContent);\r\n","import { TierNames, Voltages } from '../../data';\r\n/**\r\n * Adapted from GregTech Community Edition calculateOverclock function.\r\n * https://github.com/GregTechCE/GregTech/blob/master/src/main/java/gregtech/api/capability/impl/AbstractRecipeLogic.java\r\n * Returns object containing { rft: number, time: number }\r\n *\r\n * @export\r\n * @param {Number} EUt - EU per tick\r\n * @param {Number} tierIndex - GregTech machine tier\r\n * @param {Number} duration - Recipe duration in ticks\r\n * @returns\r\n */\r\nfunction Overclock(EUt, tierIndex, duration) {\r\n  let tier = TierNames[tierIndex] - 1;\r\n  let resultEUt = EUt;\r\n  let resultDuration = duration;\r\n  let multiplier = 0;\r\n\r\n  if (Voltages[tier] <= EUt || tier === 0 || tier === -1 || EUt === 0) {\r\n    return {\r\n      eut: resultEUt,\r\n      ticks: resultDuration,\r\n    };\r\n  }\r\n\r\n  if (EUt <= 16) {\r\n    if (EUt <= 8) {\r\n      multiplier = tier;\r\n    } else {\r\n      multiplier = tier - 1;\r\n    }\r\n\r\n    resultEUt = EUt * (1 << multiplier) * (1 << multiplier);\r\n    resultDuration = duration / (1 << multiplier);\r\n\r\n    return {\r\n      eut: resultEUt,\r\n      ticks: resultDuration,\r\n    };\r\n  } else {\r\n    while (resultDuration >= 3 && resultEUt <= Voltages[tierIndex - 1]) {\r\n      resultEUt = resultEUt * 4;\r\n      resultDuration = resultDuration / 2.8;\r\n    }\r\n  }\r\n\r\n  return {\r\n    eut: resultEUt,\r\n    ticks: Math.ceil(resultDuration),\r\n  };\r\n}\r\n\r\nfunction AddOverclock(recipes) {\r\n  recipes.forEach((recipe) => {\r\n    let oc = Overclock(recipe.rft / 4, recipe.machineTier, recipe.time);\r\n\r\n    recipe.rftoc = oc.eut * 4;\r\n    recipe.timeoc = oc.ticks;\r\n  });\r\n\r\n  return recipes;\r\n}\r\n\r\nexport { Overclock, AddOverclock };\r\n","import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Root,\r\n  Header,\r\n  Sidebar,\r\n  CollapseBtn,\r\n  CollapseIcon,\r\n  Content,\r\n  SidebarTrigger,\r\n  SidebarTriggerIcon,\r\n  headerStyles,\r\n} from '@mui-treasury/layout';\r\nimport { DefaultTheme, Recipes } from './data';\r\nimport { GenerateGraph } from './components/utils/graph';\r\nimport DataTable from './components/DataTable';\r\nimport NavContent from './components/NavContent';\r\nimport HeaderContent from './components/HeaderContent';\r\n\r\nimport { AddOverclock } from './components/utils/overclock';\r\n\r\nlet config = {\r\n  sidebar: {\r\n    anchor: 'left',\r\n    width: 256,\r\n    variant: 'permanent',\r\n    collapsible: true,\r\n    collapsedWidth: 64,\r\n  },\r\n  content: { persistentBehavior: 'fit' },\r\n  header: {\r\n    position: 'fixed',\r\n    clipped: false,\r\n    persistentBehavior: 'fit',\r\n    offsetHeight: 64,\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let themeType = window.localStorage.getItem('theme');\r\n    let collapsed = window.localStorage.getItem('collapsed');\r\n    let recipes = AddOverclock(Recipes);\r\n    let graph = GenerateGraph(recipes);\r\n\r\n    if (themeType === null) {\r\n      window.localStorage.setItem('theme', 'dark');\r\n    } else if (themeType === 'light') {\r\n      DefaultTheme.palette.type = 'light';\r\n    } else if (themeType === 'dark') {\r\n      DefaultTheme.palette.type = 'dark';\r\n    }\r\n\r\n    if (collapsed === null) {\r\n      window.localStorage.setItem('collapsed', 'false');\r\n    }\r\n\r\n    this.state = {\r\n      theme: DefaultTheme,\r\n      headers: Headers,\r\n      recipes: recipes,\r\n      collapsed: collapsed === 'true',\r\n      graph: graph,\r\n    };\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let theme = this.state.theme;\r\n\r\n    if (theme.palette.type === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      theme.palette.type = 'dark';\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      theme.palette.type = 'light';\r\n    }\r\n\r\n    this.setState({ theme });\r\n  };\r\n\r\n  handleCollapse = (collapsed) => {\r\n    window.localStorage.setItem('collapsed', !collapsed);\r\n    this.setState({ collapsed: !collapsed });\r\n  };\r\n\r\n  handleClear = () => {\r\n    let recipes = this.state.recipes;\r\n    recipes.length = 0;\r\n\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  handleUpdate = (newRecipes) => {\r\n    let recipes = newRecipes;\r\n    let graph = GenerateGraph(recipes);\r\n    this.setState({ recipes });\r\n    this.setState({ graph });\r\n  };\r\n\r\n  render() {\r\n    let muiTheme = createMuiTheme(this.state.theme);\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <CssBaseline />\r\n        <Root\r\n          theme={muiTheme}\r\n          config={config}\r\n          initialCollapsed={this.state.collapsed}>\r\n          {({ sidebarStyles, collapsed }) => (\r\n            <>\r\n              <Header>\r\n                <Toolbar>\r\n                  <SidebarTrigger className={headerStyles.leftTrigger}>\r\n                    <SidebarTriggerIcon />\r\n                  </SidebarTrigger>\r\n                  <HeaderContent />\r\n                </Toolbar>\r\n              </Header>\r\n              <Sidebar>\r\n                <div className={sidebarStyles.container}>\r\n                  <NavContent\r\n                    graph={this.state.graph}\r\n                    handleTheme={this.toggleDarkTheme}\r\n                    handleRecipes={this.handleUpdate}\r\n                    handleClear={this.handleClear}\r\n                    recipes={this.state.recipes}\r\n                    themeType={this.state.theme.palette.type}\r\n                  />\r\n                </div>\r\n                <CollapseBtn onClick={() => this.handleCollapse(collapsed)}>\r\n                  <CollapseIcon />\r\n                </CollapseBtn>\r\n              </Sidebar>\r\n              <Content>\r\n                <Container maxWidth=\"xl\">\r\n                  <Box my={2}>\r\n                    <DataTable\r\n                      recipes={this.state.recipes}\r\n                      handleUpdate={this.handleUpdate}\r\n                      onChangeOC={this.handleOverclock}\r\n                      onChangeTier={this.handleTier}\r\n                    />\r\n                  </Box>\r\n                </Container>\r\n              </Content>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}