{"version":3,"sources":["data/data.js","components/DataTable/DataTable.js","components/DataTable/index.js","components/menus/Settings.js","components/menus/MenuDialog.js","components/NavContent.js","components/HeaderContent.js","App.js","index.js"],"names":["TierNames","Recipes","step","machineName","machineTier","overclock","rft","time","efficiency","inputs","name","quantity","unit","outputs","targetMachines","DefaultTheme","typography","htmlFontSize","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","type","primary","light","main","dark","contrastText","secondary","DataTableCell","props","Fragment","items","map","item","key","DataTable","state","columns","title","field","readonly","width","editable","lookup","Object","assign","render","rowData","toString","charAt","toUpperCase","slice","editComponent","Switch","checked","onChange","value","inputProps","Button","variant","Paper","my","this","data","recipes","recipe","options","sorting","paging","pageSizeOptions","tableLayout","actionsColumnIndex","maxBodyHeight","showTitle","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","setState","onRowDelete","splice","Component","SettingsDialog","React","memo","useState","themeType","Grid","container","direction","justify","alignItems","Typography","color","event","handleTheme","target","MenuDialog","isOpen","handleClose","size","contentType","confirmation","Dialog","fullWidth","maxWidth","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","NavContent","setOpen","setTitle","setType","handleDialogOpen","List","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","noWrap","Divider","style","margin","clear","handleClear","withStyles","header","fontWeight","minWidth","grow","flexGrow","classes","className","config","sidebar","anchor","collapsible","collapsedWidth","content","persistentBehavior","position","clipped","offsetHeight","App","toggleDarkTheme","theme","window","localStorage","setItem","handleOverclock","handleTier","tier","length","console","log","handleCollapse","collapsed","getItem","headers","Headers","muiTheme","createMuiTheme","CssBaseline","initialCollapsed","sidebarStyles","Toolbar","headerStyles","leftTrigger","Container","Box","onChangeOC","onChangeTier","document","querySelector"],"mappings":"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","file":"static/js/main.fe6dda84.chunk.js","sourcesContent":["const TierNames = [\r\n  'N/A',\r\n  'ULV',\r\n  'LV',\r\n  'MV',\r\n  'HV',\r\n  'EV',\r\n  'IV',\r\n  'LuV',\r\n  'ZPMV',\r\n  'UV',\r\n];\r\n\r\nconst Voltages = [8, 32, 128, 512, 2048, 8192, 32768, 131072, 524288];\r\n\r\nconst Colors = [\r\n  '#3B511A',\r\n  '#51301A',\r\n  '#253192',\r\n  '#7B2FBE',\r\n  '#287697',\r\n  '#434343',\r\n  '#D88198',\r\n  '#41CD34',\r\n  '#DECF2A',\r\n  '#6689D3',\r\n  '#C354CD',\r\n  '#EB8844',\r\n  '#1E1B1B',\r\n  '#B3312C',\r\n];\r\n\r\nconst Recipes = [\r\n  {\r\n    step: 1,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 3.15,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 10,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 48,\r\n    time: 10,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Coal',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 8,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 12,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Diamond Furnace',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 1.28,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 1.3,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 384,\r\n    time: 4,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 5.9,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Diamond Furnace',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 1.28,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Pyrolyse Oven',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 30,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Wood',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Steam',\r\n        quantity: 4000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1500,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Distillery',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 256,\r\n    time: 4,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 20,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 15,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 8,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Air',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 16,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 4,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 17,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 64,\r\n    time: 5,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Iron Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 18,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 19,\r\n    machineName: 'Blast Furnace',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 300,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 32,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Tiny Pile of Gallium Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 20,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 5,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 21,\r\n    machineName: 'Precision Laser Engraver',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 45,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 1,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 22,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 60,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 90,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 23,\r\n    machineName: 'Fluid Solidifier',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 2,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 24,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 25,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 3.15,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 26,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 2000,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Sulfur Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 3000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 27,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 125,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 28,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 4,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Soldering Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 29,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 240,\r\n    time: 10,\r\n    efficiency: 100,\r\n    inputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 72,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Refined Circuit',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst DefaultTheme = {\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff5c8d',\r\n      main: '#d81b60',\r\n      dark: '#a00037',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n};\r\n\r\nexport { TierNames, Voltages, Colors, Recipes, DefaultTheme };\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport MaterialTable from 'material-table';\r\nimport { TierNames, Recipes } from '../../data';\r\n\r\nfunction DataTableCell(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.items.map((item) => (\r\n        <div key={'_' + props.type + item.name + props.step}>\r\n          {item.quantity + item.unit + ' ' + item.name}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: 'Step',\r\n          field: 'step',\r\n          readonly: true,\r\n          width: 50,\r\n          editable: 'never',\r\n        },\r\n        {\r\n          title: 'Machine Name',\r\n          field: 'machineName',\r\n          width: 125,\r\n        },\r\n        {\r\n          title: 'Machine Tier',\r\n          field: 'machineTier',\r\n          lookup: Object.assign({}, TierNames),\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Overclock',\r\n          field: 'overclock',\r\n          width: 75,\r\n          type: 'boolean',\r\n          render: (rowData) =>\r\n            rowData.overclock\r\n              .toString()\r\n              .charAt(0)\r\n              .toUpperCase() + rowData.overclock.toString().slice(1),\r\n          editComponent: (props) => (\r\n            <Switch\r\n              checked={props.overclock}\r\n              onChange={() => null}\r\n              value={props.overclock}\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          title: 'RF/t',\r\n          field: 'rft',\r\n          width: 75,\r\n          type: 'numeric',\r\n        },\r\n        {\r\n          title: 'Time (s)',\r\n          field: 'time',\r\n          width: 75,\r\n          type: 'numeric',\r\n        },\r\n        {\r\n          title: 'Efficiency (%)',\r\n          field: 'efficiency',\r\n          width: 75,\r\n          editable: 'never',\r\n        },\r\n        {\r\n          title: 'Base Inputs',\r\n          field: 'inputs',\r\n          width: 150,\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.inputs}\r\n              step={rowData.step}\r\n              type={'input'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n        },\r\n        {\r\n          title: 'Base Outputs',\r\n          field: 'outputs',\r\n          width: 150,\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.outputs}\r\n              step={rowData.step}\r\n              type={'output'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n        },\r\n        {\r\n          title: 'Target Machines',\r\n          field: 'targetMachines',\r\n          width: 75,\r\n          editable: 'never',\r\n          type: 'numeric',\r\n        },\r\n        {\r\n          title: 'Inputs per Second',\r\n          field: 'targetInputs',\r\n          width: 150,\r\n          editable: 'never',\r\n        },\r\n        {\r\n          title: 'Outputs per Second',\r\n          field: 'targetOutputs',\r\n          width: 150,\r\n          editable: 'never',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" my={2}>\r\n        <MaterialTable\r\n          columns={this.state.columns}\r\n          data={this.props.recipes.map((recipe) => Object.assign({}, recipe))}\r\n          options={{\r\n            sorting: false,\r\n            paging: true,\r\n            pageSizeOptions: [5, 10, 15, 20],\r\n            tableLayout: 'fixed',\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: '77vh',\r\n            showTitle: false,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    const data = [...this.state.data];\r\n                    const index = data.indexOf(oldData);\r\n                    data[index] = newData;\r\n                    this.setState({ data }, () => resolve());\r\n                  }\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let data = [...this.state.data];\r\n                    const index = data.indexOf(oldData);\r\n                    data.splice(index, 1);\r\n                    this.setState({ data }, () => resolve());\r\n                  }\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import DataTable from './DataTable';\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst SettingsDialog = React.memo(function SettingsDialog(props) {\r\n  const [state, setState] = React.useState({\r\n    checked: props.themeType === 'dark' ? true : false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    props.handleTheme();\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      <Typography color={'textPrimary'} variant=\"subtitle1\">\r\n        DARK THEME\r\n      </Typography>\r\n      <Switch checked={state.checked} onChange={handleChange('checked')} />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default SettingsDialog;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Settings from './Settings';\r\n\r\nconst MenuDialog = ({\r\n  isOpen,\r\n  handleClose,\r\n  title,\r\n  size,\r\n  contentType,\r\n  confirmation,\r\n  handleTheme,\r\n  themeType,\r\n}) => {\r\n  return (\r\n    <Dialog fullWidth maxWidth={size} open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        {contentType === 'about' ? (\r\n          <DialogContentText>\r\n            A production chain calculator inspired by the Kirk McDonald factory\r\n            calculator for Factorio.\r\n          </DialogContentText>\r\n        ) : contentType === 'import' ? (\r\n          'Import'\r\n        ) : contentType === 'clear' ? (\r\n          'Clear'\r\n        ) : contentType === 'add' ? (\r\n          'Add'\r\n        ) : contentType === 'settings' ? (\r\n          <Settings handleTheme={handleTheme} themeType={themeType} />\r\n        ) : (\r\n          <DialogContentText>No valid content type selected.</DialogContentText>\r\n        )}\r\n      </DialogContent>\r\n      {confirmation ? (\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose('clear')} color=\"default\">\r\n            Accept\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      ) : (\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MenuDialog;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport MenuDialog from './menus/MenuDialog';\r\n\r\nconst NavContent = React.memo(function NavContent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n\r\n  const handleDialogOpen = (type, title) => {\r\n    setTitle(title);\r\n    setType(type);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = (clear) => {\r\n    props.handleClear(clear);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem button onClick={() => handleDialogOpen('about', 'About')}>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'About'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen('import', 'Import or export a recipe list')\r\n          }>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Import/Export Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'clear',\r\n              'Are you sure you want to clear all recipes?'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <TableChartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Clear Recipes'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('add', 'Add a recipe')}>\r\n          <ListItemIcon>\r\n            <PlaylistAddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Add Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('settings', 'Settings')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Settings'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <MenuDialog\r\n        isOpen={open}\r\n        handleClose={handleDialogClose}\r\n        title={title}\r\n        contentType={type}\r\n        confirmation={type === 'clear'}\r\n        size=\"xs\"\r\n        handleTheme={props.handleTheme}\r\n        themeType={props.themeType}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NavContent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => ({\r\n  header: {\r\n    fontWeight: 700,\r\n    minWidth: 0,\r\n    fontSize: 18,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst HeaderContent = ({ classes }) => (\r\n  <Typography noWrap color={'textPrimary'} className={classes.header}>\r\n    Production Chain\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(HeaderContent);\r\n","import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Root,\r\n  Header,\r\n  Sidebar,\r\n  CollapseBtn,\r\n  CollapseIcon,\r\n  Content,\r\n  SidebarTrigger,\r\n  SidebarTriggerIcon,\r\n  headerStyles,\r\n} from '@mui-treasury/layout';\r\nimport { DefaultTheme, Recipes } from './data';\r\nimport DataTable from './components/DataTable';\r\nimport NavContent from './components/NavContent';\r\nimport HeaderContent from './components/HeaderContent';\r\n\r\nlet config = {\r\n  sidebar: {\r\n    anchor: 'left',\r\n    width: 256,\r\n    variant: 'permanent',\r\n    collapsible: true,\r\n    collapsedWidth: 64,\r\n  },\r\n  content: { persistentBehavior: 'fit' },\r\n  header: {\r\n    position: 'fixed',\r\n    clipped: false,\r\n    persistentBehavior: 'fit',\r\n    offsetHeight: 64,\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let themeType = window.localStorage.getItem('theme');\r\n    let collapsed = window.localStorage.getItem('collapsed');\r\n\r\n    if (themeType === null) {\r\n      window.localStorage.setItem('theme', 'dark');\r\n    } else if (themeType === 'light') {\r\n      DefaultTheme.palette.type = 'light';\r\n    } else if (themeType === 'dark') {\r\n      DefaultTheme.palette.type = 'dark';\r\n    }\r\n\r\n    if (collapsed === null) {\r\n      window.localStorage.setItem('collapsed', 'false');\r\n    }\r\n\r\n    this.state = {\r\n      theme: DefaultTheme,\r\n      headers: Headers,\r\n      recipes: Recipes,\r\n      collapsed: collapsed === 'true',\r\n    };\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let theme = this.state.theme;\r\n\r\n    if (theme.palette.type === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      theme.palette.type = 'dark';\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      theme.palette.type = 'light';\r\n    }\r\n\r\n    this.setState({ theme });\r\n  };\r\n\r\n  handleOverclock = (step) => {\r\n    let recipes = this.state.recipes;\r\n    recipes[step].overclock = !recipes[step].overclock;\r\n\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  handleTier = (step, value) => {\r\n    let recipes = this.state.recipes;\r\n    recipes[step].tier = value;\r\n\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  handleClear = (clear) => {\r\n    if (clear === 'clear') {\r\n      let recipes = this.state.recipes;\r\n      recipes.length = 0;\r\n\r\n      this.setState({ recipes });\r\n      console.log(this.state.recipes);\r\n    }\r\n  };\r\n\r\n  handleCollapse = (collapsed) => {\r\n    window.localStorage.setItem('collapsed', !collapsed);\r\n    this.setState({ collapsed: !collapsed });\r\n  };\r\n\r\n  render() {\r\n    let muiTheme = createMuiTheme(this.state.theme);\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <CssBaseline />\r\n        <Root\r\n          theme={muiTheme}\r\n          config={config}\r\n          initialCollapsed={this.state.collapsed}>\r\n          {({ sidebarStyles, collapsed }) => (\r\n            <>\r\n              <Header>\r\n                <Toolbar>\r\n                  <SidebarTrigger className={headerStyles.leftTrigger}>\r\n                    <SidebarTriggerIcon />\r\n                  </SidebarTrigger>\r\n                  <HeaderContent />\r\n                </Toolbar>\r\n              </Header>\r\n              <Sidebar>\r\n                <div className={sidebarStyles.container}>\r\n                  <NavContent\r\n                    handleTheme={this.toggleDarkTheme}\r\n                    themeType={this.state.theme.palette.type}\r\n                    handleClear={this.handleClear}\r\n                  />\r\n                </div>\r\n                <CollapseBtn onClick={() => this.handleCollapse(collapsed)}>\r\n                  <CollapseIcon />\r\n                </CollapseBtn>\r\n              </Sidebar>\r\n              <Content>\r\n                <Container maxWidth=\"xl\">\r\n                  <Box my={2}>\r\n                    <DataTable\r\n                      recipes={this.state.recipes}\r\n                      onChangeOC={this.handleOverclock}\r\n                      onChangeTier={this.handleTier}\r\n                    />\r\n                  </Box>\r\n                </Container>\r\n              </Content>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}