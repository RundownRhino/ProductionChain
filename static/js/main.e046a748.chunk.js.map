{"version":3,"sources":["data/data.js","components/utils/graph.js","components/DataTable/DataTable.js","components/DataTable/index.js","components/menus/AboutMenu.js","components/menus/ImportExportMenu.js","components/menus/ClearMenu.js","components/menus/RecipeRow.js","components/menus/RecipeMenu.js","components/menus/CalculatorMenu.js","components/menus/SettingsMenu.js","components/menus/MenuDialog.js","components/NavContent.js","components/HeaderContent.js","App.js","index.js"],"names":["TierNames","Recipes","step","machineName","machineTier","overclock","rft","time","inputs","name","quantity","unit","outputs","targetMachines","DefaultTheme","typography","htmlFontSize","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","type","primary","light","main","dark","contrastText","secondary","GenerateGraph","recipes","directedGraph","DirectedGraph","upgradeToMulti","forEach","recipe","addNode","Number","timeoc","visitedCount","edgeGraph","graph","forEachNode","source","sourceAttributes","output","target","targetAttributes","input","addDirectedEdge","inputQuantity","inputTime","outputQuantity","outputTime","GenerateEdges","adjList","edges","node","forEachEdge","edge","attributes","push","Object","values","FindAdjList","cycles","findCircuits","tmpGraph","cycle","dropEdge","FixGraph","RemoveCycles","reverse","MachineRequirements","machineTotals","machineSteps","forEachOutEdge","sort","FindInitialInputs","FindFinalOutputs","tier","machine","Math","ceil","DataTableCell","props","Fragment","items","map","item","key","DataTable","state","columns","title","field","readonly","editable","width","lookup","assign","customFilterAndSearch","search","rowData","toString","toUpperCase","render","editComponent","Button","variant","found","value","includes","Array","from","Paper","my","this","data","options","actionsColumnIndex","maxBodyHeight","paging","pageSizeOptions","showTitle","sorting","tableLayout","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","setState","handleUpdate","onRowDelete","splice","actions","icon","tooltip","onClick","event","temp","length","Component","SettingsMenu","React","memo","DialogTitle","DialogContent","DialogContentText","Link","rel","href","DialogActions","handleClose","color","ImportExportMenu","useState","setData","TextField","multiline","fullWidth","size","rowsMax","onChange","array","split","uint8array","Uint8Array","JSON","parse","decompress","handleRecipes","jString","stringify","compressedData","compress","ClearMenu","handleClear","regAnyNumber","RecipeRow","handleQuantity","handleUpdateItems","id","handleUnit","handleName","unitLabelRef","createRef","unitLabelWidth","current","offsetWidth","FormControl","className","classes","formControlSmall","error","test","label","required","InputLabel","ref","Select","labelWidth","placeholder","MenuItem","formControl","withStyles","theme","margin","spacing","minWidth","maxWidth","useStyles","makeStyles","pushDefault","n","newArray","i","slice","RecipeMenu","isEu","setIsEu","setMachineName","setMachineTier","setRft","setTime","numInputs","setNumInputs","numOutputs","setNumOutputs","setInputs","setOutputs","tierLabel","useRef","tierLabelWidth","setTierLabelWidth","useEffect","handleUpdateInputs","newInputs","handleUpdateOutputs","newOutputs","prevInputs","prevOutputs","FormControlLabel","control","Checkbox","checked","labelPlacement","Divider","style","Grid","container","direction","justify","alignitems","xs","CalculatorMenu","requirements","setRequirements","setTargetMachines","keys","targetItem","setTargetItem","targetQuantity","setTargetQuantity","targetRatio","setTargetRatio","targetOps","setTargetOps","targetLabelWidth","setTargetLabelWidth","targetLabel","alignItems","handleItem","entries","setNodeAttribute","calculatedGraph","copy","CalculateTarget","sourceNode","calculatorTargetMachines","getNodeAttributes","forEachOutNeighbor","targetNode","edgeAttributes","getEdgeAttributes","getNodeAttribute","inDegree","updateNodeAttribute","toFixed","themeType","Typography","Switch","handleTheme","MenuDialog","contentType","isOpen","Dialog","disableBackdropClick","fullScreen","open","onClose","AboutMenu","NavContent","setOpen","setTitle","setType","setSize","handleDialogOpen","List","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","noWrap","header","fontWeight","grow","flexGrow","config","sidebar","anchor","collapsible","collapsedWidth","content","persistentBehavior","position","clipped","offsetHeight","App","toggleDarkTheme","window","localStorage","setItem","handleCollapse","collapsed","newRecipes","getItem","headers","Headers","muiTheme","createMuiTheme","CssBaseline","initialCollapsed","sidebarStyles","Toolbar","headerStyles","leftTrigger","Container","Box","onChangeOC","handleOverclock","onChangeTier","handleTier","document","querySelector"],"mappings":"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","file":"static/js/main.e046a748.chunk.js","sourcesContent":["const TierNames = [\r\n  'N/A',\r\n  'ULV',\r\n  'LV',\r\n  'MV',\r\n  'HV',\r\n  'EV',\r\n  'IV',\r\n  'LuV',\r\n  'ZPMV',\r\n  'UV',\r\n];\r\n\r\nconst Voltages = [8, 32, 128, 512, 2048, 8192, 32768, 131072, 524288];\r\n\r\nconst Colors = [\r\n  '#3B511A',\r\n  '#51301A',\r\n  '#253192',\r\n  '#7B2FBE',\r\n  '#287697',\r\n  '#434343',\r\n  '#D88198',\r\n  '#41CD34',\r\n  '#DECF2A',\r\n  '#6689D3',\r\n  '#C354CD',\r\n  '#EB8844',\r\n  '#1E1B1B',\r\n  '#B3312C',\r\n];\r\nconst Recipes = [\r\n  {\r\n    step: 0,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Cobblestone',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 1,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 60,\r\n    time: 1,\r\n    inputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Water',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Electrolyzer',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 400,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 12,\r\n    inputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Numismatic Dynamo',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 10.32,\r\n    inputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'RF/t',\r\n        quantity: 12500,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst Recipes2 = [\r\n  {\r\n    step: 1,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 3.15,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 48,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Coal',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 8,\r\n    inputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 12,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 1.3,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 384,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 5.9,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Diamond Furnace',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 1.28,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Pyrolyse Oven',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Wood',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Steam',\r\n        quantity: 4000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1500,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Distillery',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 256,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 20,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 8,\r\n    inputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Air',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 15,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 16,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 64,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Iron Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 17,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 18,\r\n    machineName: 'Blast Furnace',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 300,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 32,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Tiny Pile of Gallium Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 19,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 5,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 20,\r\n    machineName: 'Precision Laser Engraver',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 45,\r\n    inputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 1,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 21,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 60,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 90,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 22,\r\n    machineName: 'Fluid Solidifier',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 23,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 24,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 3.15,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 25,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 2000,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Sulfur Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 3000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 26,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 125,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 27,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Soldering Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 28,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 240,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 72,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Refined Circuit',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst DefaultTheme = {\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff5c8d',\r\n      main: '#d81b60',\r\n      dark: '#a00037',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n};\r\n\r\nexport { TierNames, Voltages, Colors, Recipes, DefaultTheme };\r\n","import { DirectedGraph } from 'graphology';\r\nimport { reverse } from 'graphology-operators';\r\nimport findCircuits from 'elementary-circuits-directed-graph';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\n/**\r\n *A directed graph for recipe calculations.\r\n *\r\n * @export\r\n * @param {*} recipes - Input object containing recipes\r\n * @returns\r\n */\r\nfunction GenerateGraph(recipes) {\r\n  let directedGraph = new DirectedGraph();\r\n  directedGraph.upgradeToMulti();\r\n\r\n  recipes.forEach((recipe) => {\r\n    directedGraph.addNode(Number(recipe.step), {\r\n      inputs: recipe.inputs,\r\n      machineName: recipe.machineName,\r\n      machineTier: recipe.machineTier,\r\n      outputs: recipe.outputs,\r\n      targetMachines: 1,\r\n      time: recipe.overclock === 'true' ? recipe.timeoc : recipe.time,\r\n      visitedCount: 0,\r\n    });\r\n  });\r\n\r\n  let edgeGraph = GenerateEdges(directedGraph);\r\n  let reversedGraph = reverse(edgeGraph);\r\n  let acyclicGraph = RemoveCycles(reversedGraph);\r\n\r\n  return acyclicGraph;\r\n}\r\n\r\nfunction GenerateEdges(graph) {\r\n  let edgeGraph = graph;\r\n\r\n  edgeGraph.forEachNode((source, sourceAttributes) => {\r\n    sourceAttributes.outputs.forEach((output) => {\r\n      edgeGraph.forEachNode((target, targetAttributes) => {\r\n        if (source !== target) {\r\n          targetAttributes.inputs.forEach((input) => {\r\n            if (input.name === output.name) {\r\n              edgeGraph.addDirectedEdge(source, target, {\r\n                name: input.name,\r\n                inputQuantity: input.quantity,\r\n                inputTime: targetAttributes.time,\r\n                outputQuantity: output.quantity,\r\n                outputTime: sourceAttributes.time,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return edgeGraph;\r\n}\r\n\r\nfunction RemoveCycles(graph) {\r\n  let adjList = FindAdjList(graph);\r\n  let cycles = findCircuits(adjList);\r\n\r\n  if (cycles) {\r\n    let acyclicGraph = FixGraph(graph, cycles);\r\n    return acyclicGraph;\r\n  } else {\r\n    return graph;\r\n  }\r\n}\r\n\r\nfunction FindAdjList(graph) {\r\n  let edges = [];\r\n\r\n  graph.forEachNode((node) => {\r\n    edges[node] = [];\r\n  });\r\n\r\n  graph.forEachEdge(\r\n    (edge, attributes, source, target, sourceAttributes, targetAttributes) => {\r\n      edges[source].push(Number(target));\r\n    }\r\n  );\r\n  let adjList = Object.values(edges);\r\n\r\n  return adjList;\r\n}\r\n\r\nfunction FixGraph(graph, cycles) {\r\n  let tmpGraph = graph;\r\n\r\n  for (let cycle of cycles) {\r\n    let source = cycle[0];\r\n    let target = cycle[1];\r\n\r\n    let edges = tmpGraph.edges(source, target);\r\n    edges.forEach((edge) => {\r\n      tmpGraph.dropEdge(edge);\r\n    });\r\n  }\r\n\r\n  return tmpGraph;\r\n}\r\n\r\nfunction MachineRequirements(recipes, graph) {\r\n  let machineTotals = [];\r\n  let machineSteps = [];\r\n  let rft = 0;\r\n\r\n  let inputs = FindInitialInputs(graph);\r\n  let outputs = FindFinalOutputs(graph);\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    let tier = TierNames[attributes.machineTier];\r\n    let prefix = tier !== 'N/A' ? tier + ' ' : '';\r\n    let machineName = attributes.machineName;\r\n    let machine = prefix + machineName;\r\n\r\n    if (!(machine in machineTotals)) {\r\n      machineTotals[machine] = Math.ceil(attributes.targetMachines);\r\n    } else {\r\n      machineTotals[machine] =\r\n        machineTotals[machine] + Math.ceil(attributes.targetMachines);\r\n    }\r\n\r\n    machineSteps[node] = machine + ' ' + Math.ceil(attributes.targetMachines);\r\n\r\n    rft = rft + Math.ceil(attributes.targetMachines) * recipes[node].rft;\r\n  });\r\n\r\n  return { machineTotals, machineSteps, rft, inputs, outputs };\r\n}\r\n\r\nfunction FindInitialInputs(graph) {\r\n  let inputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.inputs.forEach((input) => {\r\n      if (!(input.name in inputs)) {\r\n        inputs[input.name] = {\r\n          node: Number(node),\r\n          quantity: input.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in inputs) {\r\n          delete inputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return inputs.sort();\r\n}\r\n\r\nfunction FindFinalOutputs(graph) {\r\n  let outputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.outputs.forEach((output) => {\r\n      if (!(output.name in outputs)) {\r\n        outputs[output.name] = {\r\n          node: Number(node),\r\n          quantity: output.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in outputs) {\r\n          delete outputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return outputs.sort();\r\n}\r\n\r\nfunction CalculateTarget(graph, sourceNode, calculatorTargetMachines) {\r\n  let sourceAttributes = graph.getNodeAttributes(sourceNode);\r\n  if (typeof calculatorTargetMachines !== 'undefined') {\r\n    graph.setNodeAttribute(\r\n      sourceNode,\r\n      'targetMachines',\r\n      calculatorTargetMachines\r\n    );\r\n  }\r\n\r\n  graph.forEachOutNeighbor(sourceNode, (targetNode, targetAttributes) => {\r\n    let edges = graph.edges(sourceNode, targetNode);\r\n\r\n    edges.forEach((edge) => {\r\n      let edgeAttributes = graph.getEdgeAttributes(edge);\r\n      let inBPS =\r\n        (edgeAttributes.inputQuantity / edgeAttributes.inputTime) *\r\n        sourceAttributes.targetMachines;\r\n      let outBPS = edgeAttributes.outputQuantity / edgeAttributes.outputTime;\r\n      let targetMachines = inBPS / outBPS;\r\n\r\n      if (\r\n        graph.getNodeAttribute(targetNode, 'visitedCount') > 0 &&\r\n        graph.inDegree(targetNode) > 1\r\n      ) {\r\n        graph.updateNodeAttribute(\r\n          targetNode,\r\n          'targetMachines',\r\n          (n) => n + targetMachines\r\n        );\r\n        graph.updateNodeAttribute(targetNode, 'visitedCount', (n) => n + 1);\r\n      } else {\r\n        graph.setNodeAttribute(targetNode, 'targetMachines', targetMachines);\r\n        graph.setNodeAttribute(targetNode, 'visitedCount', 1);\r\n      }\r\n    });\r\n\r\n    return CalculateTarget(graph, targetNode);\r\n  });\r\n\r\n  return graph;\r\n}\r\n\r\nexport { GenerateGraph, MachineRequirements, CalculateTarget };\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialTable from 'material-table';\r\nimport { TierNames } from '../../data';\r\n\r\nfunction DataTableCell(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.items.map((item) => (\r\n        <div key={'_' + props.type + item.name + props.step}>\r\n          {item.quantity + item.unit + ' ' + item.name}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: 'Step',\r\n          field: 'step',\r\n          readonly: true,\r\n          editable: 'never',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Machine Name',\r\n          field: 'machineName',\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Machine Tier',\r\n          field: 'machineTier',\r\n          lookup: Object.assign({}, TierNames),\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Overclock',\r\n          field: 'overclock',\r\n          type: 'boolean',\r\n          customFilterAndSearch: (search, rowData) => {\r\n            return (\r\n              rowData.overclock.toString().toUpperCase() ===\r\n              search.toUpperCase()\r\n            );\r\n          },\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'RF/t',\r\n          field: 'rft',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Time (s)',\r\n          field: 'time',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Base Inputs',\r\n          field: 'inputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.inputs}\r\n              step={rowData.step}\r\n              type={'input'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.inputs.forEach((input) => {\r\n              let values = Object.values(input);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n        {\r\n          title: 'Base Outputs',\r\n          field: 'outputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.outputs}\r\n              step={rowData.step}\r\n              type={'output'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.outputs.forEach((output) => {\r\n              let values = Object.values(output);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n      ],\r\n      recipes: Array.from(this.props.recipes),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" my={2}>\r\n        <MaterialTable\r\n          columns={this.state.columns}\r\n          data={Array.from(this.props.recipes)}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: '77vh',\r\n            paging: true,\r\n            pageSizeOptions: [5, 10, 15, 20],\r\n            showTitle: false,\r\n            sorting: false,\r\n            tableLayout: 'auto',\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = this.state.recipes;\r\n                    let index = recipes.indexOf(oldData);\r\n                    recipes[index] = newData;\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = [...this.state.recipes];\r\n                    let index = recipes.indexOf(oldData);\r\n                    recipes.splice(index, 1);\r\n\r\n                    recipes.forEach((recipe, index) => {\r\n                      recipe.step = index + 1;\r\n                    });\r\n\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'arrow_upward',\r\n              tooltip: 'Move up',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index > 0) {\r\n                  let temp = recipes[index - 1];\r\n                  recipes[index - 1] = recipes[index];\r\n                  recipes[index - 1].step = index;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index + 1;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'arrow_downward',\r\n              tooltip: 'Move down',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index < recipes.length - 1) {\r\n                  let temp = recipes[index + 1];\r\n                  recipes[index + 1] = recipes[index];\r\n                  recipes[index] = temp;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import DataTable from './DataTable';\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          A production chain calculator inspired by the{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://kirkmcdonald.github.io/\">\r\n            Kirk McDonald calculator\r\n          </Link>{' '}\r\n          for Factorio. Please ask questions and report bugs at{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://github.com/SimonNguyen/ProductionChain\">\r\n            GitHub\r\n          </Link>\r\n          .\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { compress, decompress } from 'lzutf8';\r\n\r\nconst ImportExportMenu = React.memo(function ImportExportMenu(props) {\r\n  const [data, setData] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    let array = data.split(',');\r\n    let uint8array = Uint8Array.from(array);\r\n    let recipes = JSON.parse(decompress(uint8array));\r\n    props.handleRecipes(recipes);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    let jString = JSON.stringify(props.recipes);\r\n    let compressedData = compress(jString);\r\n    setData(compressedData.toString());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Paste a recipe string below to import a recipe.\r\n        </DialogContentText>\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          size=\"medium\"\r\n          rowsMax=\"10\"\r\n          variant=\"outlined\"\r\n          value={data}\r\n          onChange={handleChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleImport} color=\"default\">\r\n          Import\r\n        </Button>\r\n        <Button onClick={handleExport} color=\"default\">\r\n          Export\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ImportExportMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ClearMenu = React.memo(function ClearMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => props.handleClear()} color=\"default\">\r\n            Accept\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ClearMenu;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n});\r\n\r\nconst regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\nclass RecipeRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.unitLabelRef = React.createRef();\r\n    this.state = {\r\n      unitLabelWidth: 0,\r\n      item: {\r\n        quantity: 1,\r\n        unit: 'b',\r\n        name: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleQuantity = (event) => {\r\n    const value = Number(event.target.value);\r\n    let item = this.state.item;\r\n    item.quantity = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleUnit = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.unit = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleName = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.name = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ unitLabelWidth: this.unitLabelRef.current.offsetWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormControl className={this.props.classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.quantity)}\r\n            label=\"Quantity\"\r\n            required\r\n            type=\"number\"\r\n            value={this.state.item.quantity.toString()}\r\n            variant=\"outlined\"\r\n            onChange={this.handleQuantity}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={this.props.classes.formControlSmall}>\r\n          <InputLabel ref={this.unitLabelRef}>Unit</InputLabel>\r\n          <Select\r\n            labelWidth={this.state.unitLabelWidth}\r\n            label=\"Unit\"\r\n            placeholder=\"b\"\r\n            value={this.state.item.unit}\r\n            onChange={this.handleUnit}>\r\n            <MenuItem value=\"b\">b</MenuItem>\r\n            <MenuItem value=\"mb\">mb</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={this.props.classes.formControl}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.name)}\r\n            label=\"Item Name\"\r\n            required\r\n            type=\"string\"\r\n            value={this.state.item.name}\r\n            variant=\"outlined\"\r\n            onChange={this.handleName}\r\n          />\r\n        </FormControl>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RecipeRow);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nconst RecipeMenu = React.memo(function RecipeMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState('');\r\n  const [machineTier, setMachineTier] = React.useState(0);\r\n  const [rft, setRft] = React.useState(0);\r\n  const [time, setTime] = React.useState(0);\r\n  const [numInputs, setNumInputs] = React.useState(1);\r\n  const [numOutputs, setNumOutputs] = React.useState(1);\r\n\r\n  const [inputs, setInputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n  const [outputs, setOutputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n    }\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n    }\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n  };\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = inputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            {inputs.map((input, index) => (\r\n              <RecipeRow\r\n                key={'input' + index}\r\n                id={index}\r\n                item={input}\r\n                handleUpdateItems={handleUpdateInputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {outputs.map((output, index) => (\r\n              <RecipeRow\r\n                key={'output' + index}\r\n                id={index}\r\n                item={output}\r\n                handleUpdateItems={handleUpdateOutputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Add\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RecipeMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MachineRequirements, CalculateTarget } from '../utils/graph';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CalculatorMenu = React.memo(function CalculatorMenu(props) {\r\n  const classes = useStyles();\r\n  const [requirements, setRequirements] = React.useState(\r\n    MachineRequirements(props.recipes, props.graph)\r\n  );\r\n  const [targetMachines, setTargetMachines] = React.useState(1);\r\n  const [targetItem, setTargetItem] = React.useState(\r\n    Object.keys(requirements.outputs)[0]\r\n  );\r\n  const [targetQuantity, setTargetQuantity] = React.useState(\r\n    requirements.outputs[targetItem].quantity\r\n  );\r\n  const [targetRatio, setTargetRatio] = React.useState(\r\n    targetQuantity / requirements.outputs[targetItem].time\r\n  );\r\n  const [targetOps, setTargetOps] = React.useState(targetRatio);\r\n  const [targetLabelWidth, setTargetLabelWidth] = React.useState(0);\r\n\r\n  const [targets, setTargets] = React.useState(0);\r\n\r\n  const targetLabel = React.useRef(null);\r\n  React.useEffect(() => {\r\n    setTargetLabelWidth(targetLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleOps = (value) => {\r\n    setTargetOps(value);\r\n    setTargetMachines(value / targetRatio);\r\n  };\r\n\r\n  const handleMachines = (value) => {\r\n    setTargetMachines(value);\r\n    setTargetOps(value * targetRatio);\r\n  };\r\n\r\n  const handleItem = (value) => {\r\n    let quantity = requirements.outputs[value].quantity;\r\n    setTargetItem(value);\r\n    setTargetQuantity(quantity);\r\n    setTargetRatio(quantity / requirements.outputs[value].time);\r\n  };\r\n\r\n  const handleTarget = () => {\r\n    props.graph.setNodeAttribute(\r\n      requirements.outputs[targetItem].node,\r\n      'targetMachines',\r\n      targetMachines\r\n    );\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    let calculatedGraph = props.graph.copy();\r\n    Object.entries(requirements.outputs)\r\n      .sort()\r\n      .forEach(([key, value]) => CalculateTarget(calculatedGraph, value.node));\r\n\r\n    setRequirements(MachineRequirements(props.recipes, calculatedGraph));\r\n  };\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          By default, the calculator will consider a target output to be\r\n          produced by 1 machine. The number of machines or outputs per second\r\n          must be set if the default values are not sufficient. Once targets are\r\n          set, the calculate button will determine the requirements of the\r\n          recipe.\r\n        </DialogContentText>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <FormControl className={classes.formControl}>\r\n            <TextField\r\n              error={!regAnyNumber.test(targetOps)}\r\n              label=\"Output per second\"\r\n              placeholder=\"1\"\r\n              required\r\n              type=\"number\"\r\n              value={targetOps}\r\n              variant=\"outlined\"\r\n              onChange={(event) => handleOps(Number(event.target.value))}\r\n            />\r\n          </FormControl>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <TextField\r\n              error={!regAnyNumber.test(targetMachines)}\r\n              label=\"Number of machines\"\r\n              placeholder=\"1\"\r\n              required\r\n              type=\"number\"\r\n              value={targetMachines}\r\n              variant=\"outlined\"\r\n              onChange={(event) => handleMachines(Number(event.target.value))}\r\n            />\r\n          </FormControl>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel ref={targetLabel}>Target Output</InputLabel>\r\n            <Select\r\n              label=\"Target Output\"\r\n              labelWidth={targetLabelWidth}\r\n              value={targetItem}\r\n              onChange={(event) => handleItem(event.target.value)}>\r\n              {Object.entries(requirements.outputs)\r\n                .sort()\r\n                .map(([key, value]) => (\r\n                  <MenuItem key={'select' + key} value={key}>\r\n                    {key}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div>\r\n            <Button\r\n              className={classes.margin}\r\n              onClick={handleTarget}\r\n              color=\"default\"\r\n              variant=\"outlined\">\r\n              Set Target\r\n            </Button>\r\n            <Button\r\n              className={classes.margin}\r\n              onClick={handleCalculate}\r\n              color=\"default\"\r\n              variant=\"outlined\">\r\n              Calculate\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={3}>\r\n            <DialogContentText>Machines per Step</DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <DialogContentText>Machine Totals</DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <DialogContentText>Inputs/s</DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <DialogContentText>Outputs/s</DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <DialogContentText>Power Consumed</DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={3}>\r\n            {Object.entries(requirements.machineSteps).map(([key, value]) => (\r\n              <React.Fragment key={key}>\r\n                Step {key} : {value} <br />\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            {Object.entries(requirements.machineTotals)\r\n              .sort()\r\n              .map(([key, value]) => (\r\n                <React.Fragment key={key}>\r\n                  {key} : {value} <br />\r\n                </React.Fragment>\r\n              ))}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            {Object.entries(requirements.inputs)\r\n              .sort()\r\n              .map(([key, value]) => (\r\n                <React.Fragment key={key}>\r\n                  {key} : {(value.quantity * value.targetMachines).toFixed(2)}\r\n                  <br />\r\n                </React.Fragment>\r\n              ))}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            {Object.entries(requirements.outputs)\r\n              .sort()\r\n              .map(([key, value]) => (\r\n                <React.Fragment key={key}>\r\n                  {key} : {(value.quantity * value.targetMachines).toFixed(2)}\r\n                  <br />\r\n                </React.Fragment>\r\n              ))}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            RF/t: {requirements.rft} <br />\r\n            EU/t: {requirements.rft / 4}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CalculatorMenu;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    checked: props.themeType === 'dark' ? true : false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    props.handleTheme();\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\">\r\n          <Typography color={'textPrimary'} variant=\"subtitle1\">\r\n            DARK THEME\r\n          </Typography>\r\n          <Switch checked={state.checked} onChange={handleChange('checked')} />\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport AboutMenu from './AboutMenu';\r\nimport ImportExportMenu from './ImportExportMenu';\r\nimport ClearMenu from './ClearMenu';\r\nimport RecipeMenu from './RecipeMenu';\r\nimport CalculatorMenu from './CalculatorMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nconst MenuDialog = ({\r\n  contentType,\r\n  graph,\r\n  isOpen,\r\n  recipes,\r\n  size,\r\n  themeType,\r\n  title,\r\n  handleClose,\r\n  handleClear,\r\n  handleRecipes,\r\n  handleTheme,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick={\r\n        contentType === 'add' || contentType === 'calculator'\r\n      }\r\n      fullScreen={contentType === 'chart'}\r\n      fullWidth\r\n      maxWidth={size}\r\n      open={isOpen}\r\n      onClose={handleClose}>\r\n      {contentType === 'about' ? (\r\n        <AboutMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'import' ? (\r\n        <ImportExportMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleRecipes={handleRecipes}\r\n          recipes={recipes}\r\n        />\r\n      ) : contentType === 'clear' ? (\r\n        <ClearMenu\r\n          title={title}\r\n          handleClear={handleClear}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : contentType === 'add' ? (\r\n        <RecipeMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'settings' ? (\r\n        <SettingsMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleTheme={handleTheme}\r\n          themeType={themeType}\r\n        />\r\n      ) : contentType === 'calculator' ? (\r\n        <CalculatorMenu\r\n          title={title}\r\n          graph={graph}\r\n          recipes={recipes}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : (\r\n        <DialogContentText>No valid content type selected.</DialogContentText>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MenuDialog;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport MenuDialog from './menus/MenuDialog';\r\n\r\nconst NavContent = React.memo(function NavContent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [size, setSize] = React.useState('xs');\r\n\r\n  const handleDialogOpen = (type, title, size) => {\r\n    setSize(size);\r\n    setTitle(title);\r\n    setType(type);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    props.handleClear();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('about', 'About', 'xs')}>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'About'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen('import', 'Import or export a recipe list', 'sm')\r\n          }>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Import/Export Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'clear',\r\n              'Are you sure you want to clear all recipes?',\r\n              'xs'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <DeleteForeverIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Clear All Recipes'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('add', 'Add a recipe', 'lg')}>\r\n          <ListItemIcon>\r\n            <AddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Add Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'calculator',\r\n              'Calculated requirements for this recipe',\r\n              'lg'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <FunctionsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Calculator'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'chart',\r\n              'Calculate requirements for this recipe',\r\n              'lg'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <EqualizerIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Charts'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('settings', 'Settings', 'xs')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Settings'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <MenuDialog\r\n        contentType={type}\r\n        graph={props.graph}\r\n        recipes={props.recipes}\r\n        size={size}\r\n        themeType={props.themeType}\r\n        title={title}\r\n        isOpen={open}\r\n        handleClear={handleClear}\r\n        handleClose={handleDialogClose}\r\n        handleRecipes={props.handleRecipes}\r\n        handleTheme={props.handleTheme}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NavContent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => ({\r\n  header: {\r\n    fontWeight: 700,\r\n    minWidth: 0,\r\n    fontSize: 18,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst HeaderContent = ({ classes }) => (\r\n  <Typography noWrap color={'textPrimary'} className={classes.header}>\r\n    Production Chain\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(HeaderContent);\r\n","import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Root,\r\n  Header,\r\n  Sidebar,\r\n  CollapseBtn,\r\n  CollapseIcon,\r\n  Content,\r\n  SidebarTrigger,\r\n  SidebarTriggerIcon,\r\n  headerStyles,\r\n} from '@mui-treasury/layout';\r\nimport { DefaultTheme, Recipes } from './data';\r\nimport { GenerateGraph } from './components/utils/graph';\r\nimport DataTable from './components/DataTable';\r\nimport NavContent from './components/NavContent';\r\nimport HeaderContent from './components/HeaderContent';\r\n\r\nlet config = {\r\n  sidebar: {\r\n    anchor: 'left',\r\n    width: 256,\r\n    variant: 'permanent',\r\n    collapsible: true,\r\n    collapsedWidth: 64,\r\n  },\r\n  content: { persistentBehavior: 'fit' },\r\n  header: {\r\n    position: 'fixed',\r\n    clipped: false,\r\n    persistentBehavior: 'fit',\r\n    offsetHeight: 64,\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let themeType = window.localStorage.getItem('theme');\r\n    let collapsed = window.localStorage.getItem('collapsed');\r\n    let graph = GenerateGraph(Recipes);\r\n\r\n    if (themeType === null) {\r\n      window.localStorage.setItem('theme', 'dark');\r\n    } else if (themeType === 'light') {\r\n      DefaultTheme.palette.type = 'light';\r\n    } else if (themeType === 'dark') {\r\n      DefaultTheme.palette.type = 'dark';\r\n    }\r\n\r\n    if (collapsed === null) {\r\n      window.localStorage.setItem('collapsed', 'false');\r\n    }\r\n\r\n    this.state = {\r\n      theme: DefaultTheme,\r\n      headers: Headers,\r\n      recipes: Recipes,\r\n      collapsed: collapsed === 'true',\r\n      graph: graph,\r\n    };\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let theme = this.state.theme;\r\n\r\n    if (theme.palette.type === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      theme.palette.type = 'dark';\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      theme.palette.type = 'light';\r\n    }\r\n\r\n    this.setState({ theme });\r\n  };\r\n\r\n  handleCollapse = (collapsed) => {\r\n    window.localStorage.setItem('collapsed', !collapsed);\r\n    this.setState({ collapsed: !collapsed });\r\n  };\r\n\r\n  handleClear = () => {\r\n    let recipes = this.state.recipes;\r\n    recipes.length = 0;\r\n\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  handleUpdate = (newRecipes) => {\r\n    let recipes = newRecipes;\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  render() {\r\n    let muiTheme = createMuiTheme(this.state.theme);\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <CssBaseline />\r\n        <Root\r\n          theme={muiTheme}\r\n          config={config}\r\n          initialCollapsed={this.state.collapsed}>\r\n          {({ sidebarStyles, collapsed }) => (\r\n            <>\r\n              <Header>\r\n                <Toolbar>\r\n                  <SidebarTrigger className={headerStyles.leftTrigger}>\r\n                    <SidebarTriggerIcon />\r\n                  </SidebarTrigger>\r\n                  <HeaderContent />\r\n                </Toolbar>\r\n              </Header>\r\n              <Sidebar>\r\n                <div className={sidebarStyles.container}>\r\n                  <NavContent\r\n                    graph={this.state.graph}\r\n                    handleTheme={this.toggleDarkTheme}\r\n                    handleRecipes={this.handleUpdate}\r\n                    handleClear={this.handleClear}\r\n                    recipes={this.state.recipes}\r\n                    themeType={this.state.theme.palette.type}\r\n                  />\r\n                </div>\r\n                <CollapseBtn onClick={() => this.handleCollapse(collapsed)}>\r\n                  <CollapseIcon />\r\n                </CollapseBtn>\r\n              </Sidebar>\r\n              <Content>\r\n                <Container maxWidth=\"xl\">\r\n                  <Box my={2}>\r\n                    <DataTable\r\n                      recipes={this.state.recipes}\r\n                      handleUpdate={this.handleUpdate}\r\n                      onChangeOC={this.handleOverclock}\r\n                      onChangeTier={this.handleTier}\r\n                    />\r\n                  </Box>\r\n                </Container>\r\n              </Content>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}