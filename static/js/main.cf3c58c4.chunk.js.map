{"version":3,"sources":["data/data.js","components/DataTable/DataTable.js","components/DataTable/index.js","components/menus/AboutMenu.js","components/menus/ImportExportMenu.js","components/menus/ClearMenu.js","components/menus/RecipeRow.js","components/menus/RecipeMenu.js","components/menus/SettingsMenu.js","components/menus/MenuDialog.js","components/NavContent.js","components/HeaderContent.js","App.js","index.js"],"names":["TierNames","Recipes","step","machineName","machineTier","overclock","rft","time","inputs","name","quantity","unit","outputs","targetMachines","DefaultTheme","typography","htmlFontSize","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","type","primary","light","main","dark","contrastText","secondary","DataTableCell","props","Fragment","items","map","item","key","DataTable","state","columns","title","field","readonly","editable","width","lookup","Object","assign","customFilterAndSearch","search","rowData","toString","toUpperCase","render","editComponent","Button","variant","found","forEach","input","values","value","includes","output","recipes","Array","from","Paper","my","this","data","options","actionsColumnIndex","maxBodyHeight","paging","pageSizeOptions","showTitle","sorting","tableLayout","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","setState","handleUpdate","onRowDelete","splice","recipe","actions","icon","tooltip","onClick","event","temp","length","Component","SettingsMenu","React","memo","DialogTitle","DialogContent","DialogContentText","Link","rel","target","href","DialogActions","handleClose","color","ImportExportMenu","useState","setData","TextField","multiline","fullWidth","size","rowsMax","onChange","array","split","uint8array","Uint8Array","JSON","parse","decompress","handleRecipes","jString","stringify","compressedData","compress","ClearMenu","handleClear","regAnyNumber","RecipeRow","handleQuantity","Number","handleUpdateItems","id","handleUnit","handleName","unitLabelRef","createRef","unitLabelWidth","current","offsetWidth","FormControl","className","classes","formControlSmall","error","test","label","required","InputLabel","ref","Select","labelWidth","placeholder","MenuItem","formControl","withStyles","theme","margin","spacing","minWidth","maxWidth","useStyles","makeStyles","pushDefault","n","newArray","i","push","slice","RecipeMenu","isEu","setIsEu","setMachineName","setMachineTier","setRft","setTime","numInputs","setNumInputs","numOutputs","setNumOutputs","setInputs","setOutputs","tierLabel","useRef","tierLabelWidth","setTierLabelWidth","useEffect","handleUpdateInputs","newInputs","handleUpdateOutputs","newOutputs","tier","prevInputs","prevOutputs","FormControlLabel","control","Checkbox","checked","labelPlacement","Divider","style","Grid","container","direction","justify","alignitems","xs","themeType","alignItems","Typography","Switch","handleTheme","MenuDialog","contentType","isOpen","Dialog","disableBackdropClick","open","onClose","AboutMenu","NavContent","setOpen","setTitle","setType","setSize","handleDialogOpen","List","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","noWrap","header","fontWeight","grow","flexGrow","config","sidebar","anchor","collapsible","collapsedWidth","content","persistentBehavior","position","clipped","offsetHeight","App","toggleDarkTheme","window","localStorage","setItem","handleCollapse","collapsed","newRecipes","getItem","headers","Headers","muiTheme","createMuiTheme","CssBaseline","initialCollapsed","sidebarStyles","Toolbar","headerStyles","leftTrigger","Container","Box","onChangeOC","handleOverclock","onChangeTier","handleTier","document","querySelector"],"mappings":"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","file":"static/js/main.cf3c58c4.chunk.js","sourcesContent":["const TierNames = [\r\n  'N/A',\r\n  'ULV',\r\n  'LV',\r\n  'MV',\r\n  'HV',\r\n  'EV',\r\n  'IV',\r\n  'LuV',\r\n  'ZPMV',\r\n  'UV',\r\n];\r\n\r\nconst Voltages = [8, 32, 128, 512, 2048, 8192, 32768, 131072, 524288];\r\n\r\nconst Colors = [\r\n  '#3B511A',\r\n  '#51301A',\r\n  '#253192',\r\n  '#7B2FBE',\r\n  '#287697',\r\n  '#434343',\r\n  '#D88198',\r\n  '#41CD34',\r\n  '#DECF2A',\r\n  '#6689D3',\r\n  '#C354CD',\r\n  '#EB8844',\r\n  '#1E1B1B',\r\n  '#B3312C',\r\n];\r\n\r\nconst Recipes = [\r\n  {\r\n    step: 1,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 3.15,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Wire',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 48,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Coal',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 24,\r\n    time: 8,\r\n    inputs: [\r\n      {\r\n        name: 'Fine Copper Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Coal Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 12,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Diamond Furnace',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 1.28,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 1.3,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 384,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Aluminium Foil',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 5.9,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Diamond Furnace',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 1.28,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Pyrolyse Oven',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Wood',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Steam',\r\n        quantity: 4000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1500,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Distillery',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 256,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Wood Gas',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 20,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 15,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 120,\r\n    time: 8,\r\n    inputs: [\r\n      {\r\n        name: 'Ethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Air',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 16,\r\n    machineName: 'Assembler',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Foil',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Silicon Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 17,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 64,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Iron Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 2,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 18,\r\n    machineName: 'Wiremill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    inputs: [\r\n      {\r\n        name: 'Tin Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 19,\r\n    machineName: 'Blast Furnace',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 300,\r\n    inputs: [\r\n      {\r\n        name: 'Silicon Dust',\r\n        quantity: 32,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Tiny Pile of Gallium Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 20,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 20,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 5,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Monocrystalline Silicon Boule',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 16,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 21,\r\n    machineName: 'Precision Laser Engraver',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 480,\r\n    time: 45,\r\n    inputs: [\r\n      {\r\n        name: 'Wafer',\r\n        quantity: 1,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 22,\r\n    machineName: 'Cutting Saw',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 60,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 90,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'CPU Wafer',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 23,\r\n    machineName: 'Fluid Solidifier',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 32,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 24,\r\n    machineName: 'Compressor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 25,\r\n    machineName: 'Cluster Mill',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 3.15,\r\n    inputs: [\r\n      {\r\n        name: 'Copper Plate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 26,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Water',\r\n        quantity: 2000,\r\n        unit: 'mb',\r\n      },\r\n      {\r\n        name: 'Sulfur Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 3000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 27,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 30,\r\n    inputs: [\r\n      {\r\n        name: 'Polyethylene Sheet',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Copper Foil',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Sulfuric Acid',\r\n        quantity: 125,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 8,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 28,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 4,\r\n    inputs: [\r\n      {\r\n        name: 'Soldering Alloy Ingot',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 144,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 29,\r\n    machineName: 'Assembler',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 240,\r\n    time: 10,\r\n    inputs: [\r\n      {\r\n        name: 'Resistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Capacitor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Transistor',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Fine Tin Alloy Wire',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Central Processing Unit',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Plastic Circuit Board',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Soldering Alloy',\r\n        quantity: 72,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Refined Circuit',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst DefaultTheme = {\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff5c8d',\r\n      main: '#d81b60',\r\n      dark: '#a00037',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n};\r\n\r\nexport { TierNames, Voltages, Colors, Recipes, DefaultTheme };\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialTable from 'material-table';\r\nimport { TierNames } from '../../data';\r\n\r\nfunction DataTableCell(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.items.map((item) => (\r\n        <div key={'_' + props.type + item.name + props.step}>\r\n          {item.quantity + item.unit + ' ' + item.name}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: 'Step',\r\n          field: 'step',\r\n          readonly: true,\r\n          editable: 'never',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Machine Name',\r\n          field: 'machineName',\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Machine Tier',\r\n          field: 'machineTier',\r\n          lookup: Object.assign({}, TierNames),\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Overclock',\r\n          field: 'overclock',\r\n          type: 'boolean',\r\n          customFilterAndSearch: (search, rowData) => {\r\n            return (\r\n              rowData.overclock.toString().toUpperCase() ===\r\n              search.toUpperCase()\r\n            );\r\n          },\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'RF/t',\r\n          field: 'rft',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Time (s)',\r\n          field: 'time',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Base Inputs',\r\n          field: 'inputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.inputs}\r\n              step={rowData.step}\r\n              type={'input'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.inputs.forEach((input) => {\r\n              let values = Object.values(input);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n        {\r\n          title: 'Base Outputs',\r\n          field: 'outputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.outputs}\r\n              step={rowData.step}\r\n              type={'output'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.outputs.forEach((output) => {\r\n              let values = Object.values(output);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n      ],\r\n      recipes: Array.from(this.props.recipes),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" my={2}>\r\n        <MaterialTable\r\n          columns={this.state.columns}\r\n          data={Array.from(this.props.recipes)}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: '77vh',\r\n            paging: true,\r\n            pageSizeOptions: [5, 10, 15, 20],\r\n            showTitle: false,\r\n            sorting: false,\r\n            tableLayout: 'auto',\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = this.state.recipes;\r\n                    let index = recipes.indexOf(oldData);\r\n                    recipes[index] = newData;\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = [...this.state.recipes];\r\n                    let index = recipes.indexOf(oldData);\r\n                    recipes.splice(index, 1);\r\n\r\n                    recipes.forEach((recipe, index) => {\r\n                      recipe.step = index + 1;\r\n                    });\r\n\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: 'arrow_upward',\r\n              tooltip: 'Move up',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index > 0) {\r\n                  let temp = recipes[index - 1];\r\n                  recipes[index - 1] = recipes[index];\r\n                  recipes[index] = temp;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'arrow_downward',\r\n              tooltip: 'Move down',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index < recipes.length - 1) {\r\n                  let temp = recipes[index + 1];\r\n                  recipes[index + 1] = recipes[index];\r\n                  recipes[index] = temp;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import DataTable from './DataTable';\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          A production chain calculator inspired by the{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://kirkmcdonald.github.io/\">\r\n            Kirk McDonald calculator\r\n          </Link>{' '}\r\n          for Factorio. Please ask questions and report bugs at{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://github.com/SimonNguyen/ProductionChain\">\r\n            GitHub\r\n          </Link>\r\n          .\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { compress, decompress } from 'lzutf8';\r\n\r\nconst ImportExportMenu = React.memo(function ImportExportMenu(props) {\r\n  const [data, setData] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    let array = data.split(',');\r\n    let uint8array = Uint8Array.from(array);\r\n    let recipes = JSON.parse(decompress(uint8array));\r\n    props.handleRecipes(recipes);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    let jString = JSON.stringify(props.recipes);\r\n    let compressedData = compress(jString);\r\n    setData(compressedData.toString());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Paste a recipe string below to import a recipe.\r\n        </DialogContentText>\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          size=\"medium\"\r\n          rowsMax=\"10\"\r\n          variant=\"outlined\"\r\n          value={data}\r\n          onChange={handleChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleImport} color=\"default\">\r\n          Import\r\n        </Button>\r\n        <Button onClick={handleExport} color=\"default\">\r\n          Export\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ImportExportMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ClearMenu = React.memo(function ClearMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => props.handleClear()} color=\"default\">\r\n            Accept\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ClearMenu;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n});\r\n\r\nconst regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\nclass RecipeRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.unitLabelRef = React.createRef();\r\n    this.state = {\r\n      unitLabelWidth: 0,\r\n      item: {\r\n        quantity: 1,\r\n        unit: 'b',\r\n        name: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleQuantity = (event) => {\r\n    const value = Number(event.target.value);\r\n    let item = this.state.item;\r\n    item.quantity = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleUnit = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.unit = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleName = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.name = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ unitLabelWidth: this.unitLabelRef.current.offsetWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormControl className={this.props.classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.quantity)}\r\n            label=\"Quantity\"\r\n            required\r\n            type=\"number\"\r\n            value={this.state.item.quantity.toString()}\r\n            variant=\"outlined\"\r\n            onChange={this.handleQuantity}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={this.props.classes.formControlSmall}>\r\n          <InputLabel ref={this.unitLabelRef}>Unit</InputLabel>\r\n          <Select\r\n            labelWidth={this.state.unitLabelWidth}\r\n            label=\"Unit\"\r\n            placeholder=\"b\"\r\n            value={this.state.item.unit}\r\n            onChange={this.handleUnit}>\r\n            <MenuItem value=\"b\">b</MenuItem>\r\n            <MenuItem value=\"mb\">mb</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={this.props.classes.formControl}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.name)}\r\n            label=\"Item Name\"\r\n            required\r\n            type=\"string\"\r\n            value={this.state.item.name}\r\n            variant=\"outlined\"\r\n            onChange={this.handleName}\r\n          />\r\n        </FormControl>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RecipeRow);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nconst RecipeMenu = React.memo(function RecipeMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState('');\r\n  const [machineTier, setMachineTier] = React.useState(0);\r\n  const [rft, setRft] = React.useState(0);\r\n  const [time, setTime] = React.useState(0);\r\n  const [numInputs, setNumInputs] = React.useState(1);\r\n  const [numOutputs, setNumOutputs] = React.useState(1);\r\n\r\n  const [inputs, setInputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n  const [outputs, setOutputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n    }\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n    }\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n  };\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = inputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:{' '}\r\n              {outputs.length === 0 ? 'This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            {inputs.map((input, index) => (\r\n              <RecipeRow\r\n                key={'input' + index}\r\n                id={index}\r\n                item={input}\r\n                handleUpdateItems={handleUpdateInputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {outputs.map((output, index) => (\r\n              <RecipeRow\r\n                key={'output' + index}\r\n                id={index}\r\n                item={output}\r\n                handleUpdateItems={handleUpdateOutputs}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Add\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RecipeMenu;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    checked: props.themeType === 'dark' ? true : false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    props.handleTheme();\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\">\r\n          <Typography color={'textPrimary'} variant=\"subtitle1\">\r\n            DARK THEME\r\n          </Typography>\r\n          <Switch checked={state.checked} onChange={handleChange('checked')} />\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport AboutMenu from './AboutMenu';\r\nimport ImportExportMenu from './ImportExportMenu';\r\nimport ClearMenu from './ClearMenu';\r\nimport RecipeMenu from './RecipeMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nconst MenuDialog = ({\r\n  contentType,\r\n  isOpen,\r\n  recipes,\r\n  size,\r\n  themeType,\r\n  title,\r\n  handleClose,\r\n  handleClear,\r\n  handleRecipes,\r\n  handleTheme,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick={contentType === 'add'}\r\n      fullWidth\r\n      maxWidth={size}\r\n      open={isOpen}\r\n      onClose={handleClose}>\r\n      {contentType === 'about' ? (\r\n        <AboutMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'import' ? (\r\n        <ImportExportMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleRecipes={handleRecipes}\r\n          recipes={recipes}\r\n        />\r\n      ) : contentType === 'clear' ? (\r\n        <ClearMenu\r\n          title={title}\r\n          handleClear={handleClear}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : contentType === 'add' ? (\r\n        <RecipeMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'settings' ? (\r\n        <SettingsMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleTheme={handleTheme}\r\n          themeType={themeType}\r\n        />\r\n      ) : (\r\n        <DialogContentText>No valid content type selected.</DialogContentText>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MenuDialog;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport MenuDialog from './menus/MenuDialog';\r\n\r\nconst NavContent = React.memo(function NavContent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [size, setSize] = React.useState('xs');\r\n\r\n  const handleDialogOpen = (type, title, size) => {\r\n    setType(type);\r\n    setTitle(title);\r\n    setSize(size);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    props.handleClear();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('about', 'About', 'xs')}>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'About'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen('import', 'Import or export a recipe list', 'sm')\r\n          }>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Import/Export Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'clear',\r\n              'Are you sure you want to clear all recipes?',\r\n              'xs'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <TableChartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Clear Recipes'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('add', 'Add a recipe', 'lg')}>\r\n          <ListItemIcon>\r\n            <PlaylistAddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Add Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('settings', 'Settings', 'xs')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Settings'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <MenuDialog\r\n        contentType={type}\r\n        isOpen={open}\r\n        recipes={props.recipes}\r\n        size={size}\r\n        themeType={props.themeType}\r\n        title={title}\r\n        handleClear={handleClear}\r\n        handleClose={handleDialogClose}\r\n        handleRecipes={props.handleRecipes}\r\n        handleTheme={props.handleTheme}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NavContent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => ({\r\n  header: {\r\n    fontWeight: 700,\r\n    minWidth: 0,\r\n    fontSize: 18,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst HeaderContent = ({ classes }) => (\r\n  <Typography noWrap color={'textPrimary'} className={classes.header}>\r\n    Production Chain\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(HeaderContent);\r\n","import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Root,\r\n  Header,\r\n  Sidebar,\r\n  CollapseBtn,\r\n  CollapseIcon,\r\n  Content,\r\n  SidebarTrigger,\r\n  SidebarTriggerIcon,\r\n  headerStyles,\r\n} from '@mui-treasury/layout';\r\nimport { DefaultTheme, Recipes } from './data';\r\nimport DataTable from './components/DataTable';\r\nimport NavContent from './components/NavContent';\r\nimport HeaderContent from './components/HeaderContent';\r\n\r\nlet config = {\r\n  sidebar: {\r\n    anchor: 'left',\r\n    width: 256,\r\n    variant: 'permanent',\r\n    collapsible: true,\r\n    collapsedWidth: 64,\r\n  },\r\n  content: { persistentBehavior: 'fit' },\r\n  header: {\r\n    position: 'fixed',\r\n    clipped: false,\r\n    persistentBehavior: 'fit',\r\n    offsetHeight: 64,\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let themeType = window.localStorage.getItem('theme');\r\n    let collapsed = window.localStorage.getItem('collapsed');\r\n\r\n    if (themeType === null) {\r\n      window.localStorage.setItem('theme', 'dark');\r\n    } else if (themeType === 'light') {\r\n      DefaultTheme.palette.type = 'light';\r\n    } else if (themeType === 'dark') {\r\n      DefaultTheme.palette.type = 'dark';\r\n    }\r\n\r\n    if (collapsed === null) {\r\n      window.localStorage.setItem('collapsed', 'false');\r\n    }\r\n\r\n    this.state = {\r\n      theme: DefaultTheme,\r\n      headers: Headers,\r\n      recipes: Recipes,\r\n      collapsed: collapsed === 'true',\r\n    };\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let theme = this.state.theme;\r\n\r\n    if (theme.palette.type === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      theme.palette.type = 'dark';\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      theme.palette.type = 'light';\r\n    }\r\n\r\n    this.setState({ theme });\r\n  };\r\n\r\n  handleCollapse = (collapsed) => {\r\n    window.localStorage.setItem('collapsed', !collapsed);\r\n    this.setState({ collapsed: !collapsed });\r\n  };\r\n\r\n  handleClear = () => {\r\n    let recipes = this.state.recipes;\r\n    recipes.length = 0;\r\n\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  handleUpdate = (newRecipes) => {\r\n    let recipes = newRecipes;\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  render() {\r\n    let muiTheme = createMuiTheme(this.state.theme);\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <CssBaseline />\r\n        <Root\r\n          theme={muiTheme}\r\n          config={config}\r\n          initialCollapsed={this.state.collapsed}>\r\n          {({ sidebarStyles, collapsed }) => (\r\n            <>\r\n              <Header>\r\n                <Toolbar>\r\n                  <SidebarTrigger className={headerStyles.leftTrigger}>\r\n                    <SidebarTriggerIcon />\r\n                  </SidebarTrigger>\r\n                  <HeaderContent />\r\n                </Toolbar>\r\n              </Header>\r\n              <Sidebar>\r\n                <div className={sidebarStyles.container}>\r\n                  <NavContent\r\n                    handleTheme={this.toggleDarkTheme}\r\n                    handleRecipes={this.handleUpdate}\r\n                    handleClear={this.handleClear}\r\n                    recipes={this.state.recipes}\r\n                    themeType={this.state.theme.palette.type}\r\n                  />\r\n                </div>\r\n                <CollapseBtn onClick={() => this.handleCollapse(collapsed)}>\r\n                  <CollapseIcon />\r\n                </CollapseBtn>\r\n              </Sidebar>\r\n              <Content>\r\n                <Container maxWidth=\"xl\">\r\n                  <Box my={2}>\r\n                    <DataTable\r\n                      recipes={this.state.recipes}\r\n                      handleUpdate={this.handleUpdate}\r\n                      onChangeOC={this.handleOverclock}\r\n                      onChangeTier={this.handleTier}\r\n                    />\r\n                  </Box>\r\n                </Container>\r\n              </Content>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}