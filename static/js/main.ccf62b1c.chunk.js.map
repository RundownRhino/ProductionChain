{"version":3,"sources":["data/data.js","components/utils/graph.js","components/menus/AboutMenu.js","components/menus/ImportExportMenu.js","components/menus/ClearMenu.js","components/menus/RecipeRow.js","components/menus/RecipeMenu.js","components/menus/CalculatorMenu.js","components/menus/EditMenu.js","components/menus/SettingsMenu.js","components/menus/MenuDialog.js","components/DataTable/DataTable.js","components/DataTable/index.js","components/NavContent.js","components/HeaderContent.js","components/utils/overclock.js","App.js","index.js"],"names":["TierNames","Voltages","Recipes","step","machineName","machineTier","overclock","rft","time","inputs","name","quantity","unit","outputs","targetMachines","DefaultTheme","typography","htmlFontSize","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","type","primary","light","main","dark","contrastText","secondary","GenerateGraph","recipes","directedGraph","DirectedGraph","upgradeToMulti","forEach","recipe","addNode","Number","timeoc","visitedCount","edgeGraph","graph","forEachNode","source","sourceAttributes","output","target","targetAttributes","input","addDirectedEdge","inputQuantity","inputTime","outputQuantity","outputTime","GenerateEdges","adjList","edges","node","forEachEdge","edge","attributes","push","Object","values","FindAdjList","cycles","findCircuits","tmpGraph","cycle","dropEdge","FixGraph","RemoveCycles","reverse","MachineRequirements","machineTotals","machineSteps","length","forEachOutEdge","sort","FindInitialInputs","FindFinalOutputs","tier","machine","recipeRft","rftoc","Math","ceil","SettingsMenu","React","memo","props","DialogTitle","title","DialogContent","DialogContentText","Link","rel","href","DialogActions","Button","onClick","handleClose","color","ImportExportMenu","useState","data","setData","handleUpdate","variant","TextField","multiline","fullWidth","size","rowsMax","value","onChange","event","array","split","uint8array","Uint8Array","from","JSON","parse","decompress","jString","stringify","compressedData","compress","toString","ClearMenu","handleClear","regAnyNumber","regWholeNumber","RecipeRow","handleQuantity","test","item","state","setState","handleUpdateItems","id","handleUnit","handleName","unitLabelRef","createRef","unitLabelWidth","this","current","offsetWidth","FormControl","className","classes","formControlSmall","error","label","required","InputLabel","ref","Select","labelWidth","placeholder","MenuItem","formControl","Component","withStyles","theme","margin","spacing","minWidth","maxWidth","useStyles","makeStyles","pushDefault","n","newArray","i","slice","RecipeMenu","isEu","setIsEu","setMachineName","setMachineTier","setOverclock","setRft","setTime","numInputs","setNumInputs","numOutputs","setNumOutputs","valid","setValid","setInputs","setOutputs","tierLabel","useRef","tierLabelWidth","setTierLabelWidth","useEffect","handleUpdateInputs","newInputs","handleUpdateOutputs","newOutputs","map","index","key","FormControlLabel","control","Checkbox","checked","labelPlacement","prevInputs","prevOutputs","Divider","style","Grid","container","direction","justify","alignitems","xs","containerHeight","window","innerHeight","elementHeight","newRecipe","disabled","CalculatorMenu","requirements","setRequirements","setTargetMachines","keys","targetItem","setTargetItem","targetQuantity","setTargetQuantity","targetRatio","setTargetRatio","targetOps","setTargetOps","targetLabelWidth","setTargetLabelWidth","targetLabel","alignItems","handleItem","entries","setNodeAttribute","calculatedGraph","copy","CalculateTarget","sourceNode","calculatorTargetMachines","getNodeAttributes","forEachOutNeighbor","targetNode","edgeAttributes","getEdgeAttributes","getNodeAttribute","inDegree","updateNodeAttribute","Fragment","toFixed","EditMenu","rowData","indexOf","updatedRecipe","themeType","Typography","Switch","handleTheme","MenuDialog","contentType","isOpen","Dialog","disableBackdropClick","fullScreen","open","onClose","AboutMenu","handleEdit","DataTableCell","items","DataTable","handleDialogOpen","editable","dialog","handleDialogClose","columns","field","readonly","width","lookup","assign","customFilterAndSearch","search","toUpperCase","render","editComponent","found","includes","Array","Paper","my","actions","icon","tooltip","temp","onRowDelete","oldData","Promise","resolve","reject","setTimeout","splice","localization","body","emptyDataSourceMessage","options","actionsColumnIndex","maxBodyHeight","paging","pageSizeOptions","showTitle","sorting","tableLayout","NavContent","setOpen","setTitle","setType","setSize","List","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","noWrap","header","fontWeight","grow","flexGrow","AddOverclock","oc","EUt","tierIndex","duration","resultEUt","resultDuration","multiplier","eut","ticks","Overclock","config","sidebar","anchor","collapsible","collapsedWidth","content","persistentBehavior","position","clipped","offsetHeight","App","toggleDarkTheme","localStorage","setItem","handleCollapse","collapsed","newRecipes","getItem","storedRecipes","headers","Headers","muiTheme","createMuiTheme","CssBaseline","initialCollapsed","sidebarStyles","Toolbar","headerStyles","leftTrigger","Container","Box","onChangeOC","handleOverclock","onChangeTier","handleTier","document","querySelector"],"mappings":"mVAAMA,EAAY,CAChB,MACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,OACA,MAGIC,EAAW,CAAC,EAAG,GAAI,IAAK,IAAK,KAAM,KAAM,MAAO,OAAQ,QAmBxDC,EAAU,CACd,CACEC,KAAM,EACNC,YAAa,YACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,GACNC,OAAQ,CACN,CACEC,KAAM,cACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,SACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,YACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,GACNC,OAAQ,CACN,CACEC,KAAM,SACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,OACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,YACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,GACNC,OAAQ,CACN,CACEC,KAAM,OACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,OACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,UACbC,YAAa,EACbC,WAAW,EACXC,IAAK,IACLC,KAAM,IACNC,OAAQ,CACN,CACEC,KAAM,OACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,QACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,mBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,EACNC,OAAQ,CACN,CACEC,KAAM,OACNC,SAAU,EACVC,KAAM,KAER,CACEF,KAAM,QACNC,SAAU,IACVC,KAAM,OAGVC,QAAS,CACP,CACEH,KAAM,OACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,eACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,EACNC,OAAQ,CACN,CACEC,KAAM,QACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,SACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,kBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,IACLC,KAAM,EACNC,OAAQ,CACN,CACEC,KAAM,cACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,iBACNC,SAAU,IACVC,KAAM,OAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,mBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,IACLC,KAAM,EACNC,OAAQ,CACN,CACEC,KAAM,SACNC,SAAU,EACVC,KAAM,KAER,CACEF,KAAM,iBACNC,SAAU,IACVC,KAAM,OAGVC,QAAS,CACP,CACEH,KAAM,qBACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,UACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,IACNC,OAAQ,CACN,CACEC,KAAM,qBACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,iBACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,EACNC,YAAa,gBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,GACLC,KAAM,GACNC,OAAQ,CACN,CACEC,KAAM,iBACNC,SAAU,EACVC,KAAM,KAER,CACEF,KAAM,OACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,eACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,GACNC,YAAa,qBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,KACLC,KAAM,GACNC,OAAQ,CACN,CACEC,KAAM,eACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,iBACNC,SAAU,GACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,GACNC,YAAa,qBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,KACLC,KAAM,GACNC,OAAQ,CACN,CACEC,KAAM,eACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,mBACNC,SAAU,GACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,GACNC,YAAa,kBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,EACLC,KAAM,IACNC,OAAQ,CACN,CACEC,KAAM,iBACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,cACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,GACNC,YAAa,kBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,EACLC,KAAM,IACNC,OAAQ,CACN,CACEC,KAAM,mBACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,UACNC,SAAU,EACVC,KAAM,MAGVE,eAAgB,GAElB,CACEX,KAAM,GACNC,YAAa,oBACbC,YAAa,EACbC,WAAW,EACXC,IAAK,EACLC,KAAM,MACNC,OAAQ,CACN,CACEC,KAAM,UACNC,SAAU,EACVC,KAAM,MAGVC,QAAS,CACP,CACEH,KAAM,OACNC,SAAU,MACVC,KAAM,MAGVE,eAAgB,IAIdC,EAAe,CACnBC,WAAY,CACVC,aAAc,GACdC,SAAU,GACVC,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,IAClBC,eAAgB,KAElBC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,U,oCCnZpB,SAASE,EAAcC,GACrB,IAAIC,EAAgB,IAAIC,gBACxBD,EAAcE,iBAEdH,EAAQI,SAAQ,SAACC,GACfJ,EAAcK,QAAQC,OAAOF,EAAOlC,MAAO,CACzCM,OAAQ4B,EAAO5B,OACfL,YAAaiC,EAAOjC,YACpBC,YAAagC,EAAOhC,YACpBQ,QAASwB,EAAOxB,QAChBC,eAAgB,EAChBN,KAAM6B,EAAO/B,UAAY+B,EAAOG,OAASH,EAAO7B,KAChDiC,aAAc,OAIlB,IAAIC,EAON,SAAuBC,GACrB,IAAID,EAAYC,EAsBhB,OApBAD,EAAUE,aAAY,SAACC,EAAQC,GAC7BA,EAAiBjC,QAAQuB,SAAQ,SAACW,GAChCL,EAAUE,aAAY,SAACI,EAAQC,GACzBJ,IAAWG,GACbC,EAAiBxC,OAAO2B,SAAQ,SAACc,GAC3BA,EAAMxC,OAASqC,EAAOrC,MACxBgC,EAAUS,gBAAgBN,EAAQG,EAAQ,CACxCtC,KAAMwC,EAAMxC,KACZ0C,cAAeF,EAAMvC,SACrB0C,UAAWJ,EAAiBzC,KAC5B8C,eAAgBP,EAAOpC,SACvB4C,WAAYT,EAAiBtC,mBASpCkC,EA9BSc,CAAcvB,GAI9B,OA6BF,SAAsBU,GACpB,IAAIc,EAWN,SAAqBd,GACnB,IAAIe,EAAQ,GAaZ,OAXAf,EAAMC,aAAY,SAACe,GACjBD,EAAMC,GAAQ,MAGhBhB,EAAMiB,aACJ,SAACC,EAAMC,EAAYjB,EAAQG,EAAQF,EAAkBG,GACnDS,EAAMb,GAAQkB,KAAKxB,OAAOS,OAGhBgB,OAAOC,OAAOP,GAvBdQ,CAAYvB,GACtBwB,EAASC,IAAaX,GAE1B,OAAIU,EAyBN,SAAkBxB,EAAOwB,GACvB,IAAIE,EAAW1B,EADgB,uBAG/B,YAAkBwB,EAAlB,+CAA0B,CAAC,IAAlBG,EAAiB,QACpBzB,EAASyB,EAAM,GACftB,EAASsB,EAAM,GAEPD,EAASX,MAAMb,EAAQG,GAC7BZ,SAAQ,SAACyB,GACbQ,EAASE,SAASV,OATS,kFAa/B,OAAOQ,EArCcG,CAAS7B,EAAOwB,GAG5BxB,EAvCU8B,CADCC,kBAAQhC,IA6E9B,SAASiC,EAAoB3C,EAASW,GACpC,IAAIiC,EAAgB,GAChBC,EAAe,GACftE,EAAM,EACNE,EAAS,GACTI,EAAU,GAEd,MAAuB,qBAAZmB,GAA8C,IAAnBA,EAAQ8C,SAI9CrE,EA0BF,SAA2BkC,GACzB,IAAIlC,EAAS,GA8Bb,OA5BAkC,EAAMC,aAAY,SAACe,EAAMG,GACvBA,EAAWrD,OAAO2B,SAAQ,SAACc,GACnBA,EAAMxC,QAAQD,IAClBA,EAAOyC,EAAMxC,MAAQ,CACnBiD,KAAMpB,OAAOoB,GACbhD,SAAUuC,EAAMvC,SAChBH,KAAMsD,EAAWtD,KACjBM,eAAgBgD,EAAWhD,oBAKjC6B,EAAMoC,gBACJ,SACElB,EACAC,EACAjB,EACAG,EACAF,EACAG,GAEIa,EAAWpD,QAAQD,UACdA,EAAOqD,EAAWpD,YAM1BD,EAAOuE,OAzDLC,CAAkBtC,GAC3B9B,EA2DF,SAA0B8B,GACxB,IAAI9B,EAAU,GA8Bd,OA5BA8B,EAAMC,aAAY,SAACe,EAAMG,GACvBA,EAAWjD,QAAQuB,SAAQ,SAACW,GACpBA,EAAOrC,QAAQG,IACnBA,EAAQkC,EAAOrC,MAAQ,CACrBiD,KAAMpB,OAAOoB,GACbhD,SAAUoC,EAAOpC,SACjBH,KAAMsD,EAAWtD,KACjBM,eAAgBgD,EAAWhD,oBAKjC6B,EAAMoC,gBACJ,SACElB,EACAC,EACAjB,EACAG,EACAF,EACAG,GAEIa,EAAWpD,QAAQG,UACdA,EAAQiD,EAAWpD,YAM3BG,EAAQmE,OA1FLE,CAAiBvC,GAE3BA,EAAMC,aAAY,SAACe,EAAMG,GACvB,IAAIqB,EAAOnF,EAAU8D,EAAWzD,aAG5B+E,GAFkB,QAATD,EAAiBA,EAAO,IAAM,IACzBrB,EAAW1D,YAEzBiC,EAASL,EAAQ2B,GACjB0B,EAAYhD,EAAO/B,UAAY+B,EAAOiD,MAAQjD,EAAO9B,IAKvDqE,EAAcQ,GAHVA,KAAWR,EAIbA,EAAcQ,GAAWG,KAAKC,KAAK1B,EAAWhD,gBAHvByE,KAAKC,KAAK1B,EAAWhD,gBAMhD+D,EAAalB,GAAQyB,EAAU,IAAMG,KAAKC,KAAK1B,EAAWhD,gBAE1DP,GAAYgF,KAAKC,KAAK1B,EAAWhD,gBAAkBuE,MAvB5C,CAAET,gBAAeC,eAActE,MAAKE,SAAQI,W,sGCvExC4E,EApCMC,IAAMC,MAAK,SAAsBC,GACpD,OACE,oCACE,kBAACC,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qDACgD,IAC9C,kBAACC,EAAA,EAAD,CACEC,IAAI,sBACJlD,OAAO,SACPmD,KAAK,mCAHP,4BAKQ,IAPV,wDAQwD,IACtD,kBAACF,EAAA,EAAD,CACEC,IAAI,sBACJlD,OAAO,SACPmD,KAAK,kDAHP,UATF,IAgBE,6BACA,6BAjBF,cAkBa,6BACX,qCAnBF,0BAsBF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,c,0BC0COC,EApEUf,IAAMC,MAAK,SAA0BC,GAAQ,IAAD,EAC3CF,IAAMgB,SAAS,IAD4B,mBAC5DC,EAD4D,KACtDC,EADsD,KAyBnE,OACE,oCACE,kBAACf,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uDAEE,6BACA,6BAHF,kDAMA,kBAACK,EAAA,EAAD,CACEC,QAhBoB,WAC1B,IAAItE,EAAU9B,EACd0F,EAAMiB,aAAa7E,IAebwE,MAAM,UACNM,QAAQ,YAHV,yBAMA,6BACA,6BACA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,WAAS,EACTC,KAAK,SACLC,QAAQ,KACRL,QAAQ,WACRM,MAAOT,EACPU,SA/Ca,SAACC,GACpBV,EAAQU,EAAMtE,OAAOoE,WAiDnB,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,SAGA,kBAACH,EAAA,EAAD,CAAQC,QAlDO,WACnB,IAAIiB,EAAQZ,EAAKa,MAAM,KACnBC,EAAaC,WAAWC,KAAKJ,GAC7BvF,EAAU4F,KAAKC,MAAMC,qBAAWL,IACpC7B,EAAMiB,aAAa7E,IA8CgBwE,MAAM,WAArC,UAGA,kBAACH,EAAA,EAAD,CAAQC,QA9CO,WACnB,IAAIyB,EAAUH,KAAKI,UAAUpC,EAAM5D,SAC/BiG,EAAiBC,mBAASH,GAC9BnB,EAAQqB,EAAeE,aA2CY3B,MAAM,WAArC,eC1CO4B,EArBG1C,IAAMC,MAAK,SAAmBC,GAC9C,OACE,oCACE,kBAACC,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uCAEF,kBAACI,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,UAGA,kBAACH,EAAA,EAAD,CAAQC,QAAS,kBAAMV,EAAMyC,eAAe7B,MAAM,WAAlD,gB,8GCAJ8B,GAAe,gBACfC,GAAiB,QAEjBC,G,YACJ,WAAY5C,GAAQ,IAAD,8BACjB,4CAAMA,KASR6C,eAAiB,SAACnB,GAChB,IAAMF,EAAQ7E,OAAO+E,EAAMtE,OAAOoE,OAClC,GAAIA,GAAS,GAAKmB,GAAeG,KAAKtB,GAAQ,CAC5C,IAAIuB,EAAO,EAAKC,MAAMD,KACtBA,EAAKhI,SAAWyG,EAChB,EAAKyB,SAAS,CAAEF,SAChB,EAAK/C,MAAMkD,kBAAkB,EAAKlD,MAAMmD,GAAI,EAAKH,MAAMD,QAhBxC,EAoBnBK,WAAa,SAAC1B,GACZ,IAAMF,EAAQE,EAAMtE,OAAOoE,MACvBuB,EAAO,EAAKC,MAAMD,KACtBA,EAAK/H,KAAOwG,EACZ,EAAKyB,SAAS,CAAEF,SAChB,EAAK/C,MAAMkD,kBAAkB,EAAKlD,MAAMmD,GAAI,EAAKH,MAAMD,OAzBtC,EA4BnBM,WAAa,SAAC3B,GACZ,IAAMF,EAAQE,EAAMtE,OAAOoE,MACvBuB,EAAO,EAAKC,MAAMD,KACtBA,EAAKjI,KAAO0G,EACZ,EAAKyB,SAAS,CAAEF,SAChB,EAAK/C,MAAMkD,kBAAkB,EAAKlD,MAAMmD,GAAI,EAAKH,MAAMD,OA9BvD,EAAKO,aAAexD,IAAMyD,YAC1B,EAAKP,MAAQ,CACXQ,eAAgB,EAChBT,KAAM,EAAK/C,MAAM+C,MANF,E,iFAqCjBU,KAAKR,SAAS,CAAEO,eAAgBC,KAAKH,aAAaI,QAAQC,gB,+BAI1D,OACE,oCACE,kBAACC,EAAA,EAAD,CAAaC,UAAWJ,KAAKzD,MAAM8D,QAAQC,kBACzC,kBAAC5C,EAAA,EAAD,CACE6C,OAAQtB,GAAaI,KAAKW,KAAKzD,MAAM+C,KAAKhI,UAC1CkJ,MAAM,WACNC,UAAQ,EACRtI,KAAK,SACL4F,MAAOiC,KAAKT,MAAMD,KAAKhI,SAASwH,WAChCrB,QAAQ,WACRO,SAAUgC,KAAKZ,kBAGnB,kBAACe,EAAA,EAAD,CACE1C,QAAQ,WACR2C,UAAWJ,KAAKzD,MAAM8D,QAAQC,kBAC9B,kBAACI,EAAA,EAAD,CAAYC,IAAKX,KAAKH,cAAtB,QACA,kBAACe,EAAA,EAAD,CACEC,WAAYb,KAAKT,MAAMQ,eACvBS,MAAM,OACNM,YAAY,IACZ/C,MAAOiC,KAAKT,MAAMD,KAAK/H,KACvByG,SAAUgC,KAAKL,YACf,kBAACoB,EAAA,EAAD,CAAUhD,MAAM,KAAhB,KACA,kBAACgD,EAAA,EAAD,CAAUhD,MAAM,MAAhB,QAGJ,kBAACoC,EAAA,EAAD,CAAaC,UAAWJ,KAAKzD,MAAM8D,QAAQW,aACzC,kBAACtD,EAAA,EAAD,CACE6C,MAAuC,IAAhCP,KAAKzD,MAAM+C,KAAKjI,KAAKoE,OAC5B+E,MAAM,YACNC,UAAQ,EACRtI,KAAK,SACL4F,MAAOiC,KAAKT,MAAMD,KAAKjI,KACvBoG,QAAQ,WACRO,SAAUgC,KAAKJ,cAGnB,kC,GAhFgBqB,aAsFTC,iBApGA,SAACC,GAAD,MAAY,CACzBH,YAAa,CACXI,OAAQD,EAAME,QAAQ,GACtBC,SAAU,KAEZhB,iBAAkB,CAChBc,OAAQD,EAAME,QAAQ,GACtBE,SAAU,QA6FCL,CAAmB/B,ICvF5BqC,GAAYC,aAAW,SAACN,GAAD,MAAY,CACvCH,YAAa,CACXI,OAAQD,EAAME,QAAQ,GACtBC,SAAU,KAEZhB,iBAAkB,CAChBc,OAAQD,EAAME,QAAQ,GACtBE,SAAU,SAId,SAASG,GAAYxD,EAAOyD,GAC1B,IAAIC,EAAW1D,EACf,GAAIA,EAAMzC,OAASkG,EACjB,IAAK,IAAIE,EAAI3D,EAAMzC,OAAQoG,EAAIF,EAAGE,IAChCD,EAASlH,KAAK,CAAErD,KAAM,GAAIC,SAAU,EAAGC,KAAM,WAG/CqK,EAAWA,EAASE,MAAM,EAAGH,GAG/B,OAAOC,EA6BT,IA2SeG,GA3SI1F,IAAMC,MAAK,SAAoBC,GAChD,IAAM8D,EAAUmB,KADuC,EAE/BnF,IAAMgB,UAAS,GAFgB,mBAEhD2E,EAFgD,KAE1CC,EAF0C,OAGjB5F,IAAMgB,SAAS,IAHE,mBAGhDtG,EAHgD,KAGnCmL,EAHmC,OAIjB7F,IAAMgB,SAAS,GAJE,mBAIhDrG,EAJgD,KAInCmL,EAJmC,OAKrB9F,IAAMgB,UAAS,GALM,mBAKhDpG,EALgD,KAKrCmL,EALqC,OAMjC/F,IAAMgB,SAAS,GANkB,mBAMhDnG,EANgD,KAM3CmL,EAN2C,OAO/BhG,IAAMgB,SAAS,GAPgB,mBAOhDlG,EAPgD,KAO1CmL,EAP0C,OAQrBjG,IAAMgB,SAAS,GARM,mBAQhDkF,EARgD,KAQrCC,EARqC,OASnBnG,IAAMgB,SAAS,GATI,mBAShDoF,EATgD,KASpCC,EAToC,OAU7BrG,IAAMgB,UAAS,GAVc,mBAUhDsF,EAVgD,KAUzCC,GAVyC,QAY3BvG,IAAMgB,SAAS,CACzC,CAAEhG,KAAM,GAAIC,SAAU,EAAGC,KAAM,OAbsB,qBAYhDH,GAZgD,MAYxCyL,GAZwC,SAezBxG,IAAMgB,SAAS,CAC3C,CAAEhG,KAAM,GAAIC,SAAU,EAAGC,KAAM,OAhBsB,qBAehDC,GAfgD,MAevCsL,GAfuC,MAmBjD7D,GAAe,gBACfC,GAAiB,QAEjB6D,GAAY1G,IAAM2G,OAAO,MAtBwB,GAuBX3G,IAAMgB,SAAS,GAvBJ,qBAuBhD4F,GAvBgD,MAuBhCC,GAvBgC,MAyBvD7G,IAAM8G,WAAU,WACdD,GAAkBH,GAAU9C,QAAQC,eACnC,IAEH,IAsCMkD,GAAqB,SAAC1D,EAAIJ,GAC9B,IAAI+D,EAAYjM,GAChBiM,EAAU3D,GAAMJ,EAChBuD,GAAUQ,GAEV,IAAIV,GAAQ,EACZU,EAAUtK,SAAQ,SAACc,GACS,IAAtBA,EAAMxC,KAAKoE,SACbkH,EAAQA,IAAS,MAIrBC,GAASD,IAGLW,GAAsB,SAAC5D,EAAIJ,GAC/B,IAAIiE,EAAa/L,GACjB+L,EAAW7D,GAAMJ,EACjBwD,GAAWS,GAEX,IAAIZ,GAAQ,EACZY,EAAWxK,SAAQ,SAACW,GACS,IAAvBA,EAAOrC,KAAKoE,SACdkH,EAAQA,IAAS,MAIrBC,GAASD,IAyBX,OACE,oCACE,kBAACnG,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,4BACA,kBAACwD,EAAA,EAAD,CAAaC,UAAWC,EAAQW,aAC9B,kBAACtD,EAAA,EAAD,CACE8C,MAAM,eACND,MAA8B,IAAvBxJ,EAAY0E,OACnBqF,YAAY,YACZL,UAAQ,EACR1C,MAAOhH,EACP0G,QAAQ,WACRO,SAAU,SAACC,GAAD,OA3EaF,EA2EsBE,EAAMtE,OAAOoE,MA1ElEmE,EAAenE,QAEM,IAAjBA,EAAMtC,OACRmH,IAAS,GAETA,IAAS,IANmB,IAAC7E,MA8E3B,kBAACoC,EAAA,EAAD,CAAa1C,QAAQ,WAAW2C,UAAWC,EAAQW,aACjD,kBAACN,EAAA,EAAD,CAAYC,IAAKoC,IAAjB,gBACA,kBAACnC,EAAA,EAAD,CACEJ,MAAM,eACNK,WAAYoC,GACZlF,MAAO/G,EACPgH,SAAU,SAACC,GAAD,OAAWkE,EAAelE,EAAMtE,OAAOoE,SAChDpH,EAAU6M,KAAI,SAAC1H,EAAM2H,GAAP,OACb,kBAAC1C,EAAA,EAAD,CAAU2C,IAAKD,EAAO1F,MAAO0F,GAC1B3H,QAKT,kBAAC6H,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,SAAuB,IAAd7M,EACT+G,SAAU,kBAAMoE,GAAcnL,IAC9B8G,MAAO9G,EACPkG,MAAM,YAGVqD,MAAM,YACNuD,eAAe,QAEjB,kBAAC5D,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQtB,GAAaI,KAAKnI,GAC1BsJ,MAAOwB,EAAO,OAAS,OACvBlB,YAAa5J,EAAI4H,WACjB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAO7G,EACPuG,QAAQ,WACRO,SAAU,SAACC,GA7IA,IAACF,KA6IsB7E,OAAO+E,EAAMtE,OAAOoE,SA5IjD,GACXsE,EAAOtE,OA8IL,kBAAC4F,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,SAAkB,IAAT9B,EACThE,SAAU,kBAAMiE,GAASD,IACzBjE,MAAOiE,EACP7E,MAAM,YAGVqD,MAAM,WACNuD,eAAe,QAEjB,kBAAC5D,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQtB,GAAaI,KAAKlI,GAC1BqJ,MAAM,WACNM,YAAa3J,EAAK2H,WAClB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAO5G,EACPsG,QAAQ,WACRO,SAAU,SAACC,GA/JC,IAACF,KA+JsB7E,OAAO+E,EAAMtE,OAAOoE,SA9JlD,GACXuE,EAAQvE,OAgKN,kBAACoC,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQrB,GAAeG,KAAKkD,GAC5B/B,MAAM,WACNM,YAAayB,EAAUzD,WACvB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAOwE,EACP9E,QAAQ,WACRO,SAAU,SAACC,GArKG,IAACF,KAqKsB7E,OAAO+E,EAAMtE,OAAOoE,SApKpD,GAAKmB,GAAeG,KAAKtB,KACpCyE,EAAazE,GACb8E,IAAU,SAACmB,GAAD,OAAgBtC,GAAYsC,EAAYjG,MAClD6E,IAAS,QAoKP,kBAACzC,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQrB,GAAeG,KAAKoD,GAC5BjC,MAAM,YACNM,YAAa2B,EAAW3D,WACxB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAO0E,EACPhF,QAAQ,WACRO,SAAU,SAACC,GAzKI,IAACF,KAyKsB7E,OAAO+E,EAAMtE,OAAOoE,SAxKrD,GAAKmB,GAAeG,KAAKtB,KACpC2E,EAAc3E,GACd+E,IAAW,SAACmB,GAAD,OAAiBvC,GAAYuC,EAAalG,MACrD6E,IAAS,QAyKP,kBAACsB,EAAA,EAAD,CAASC,MAAO,CAAE/C,OAAQ,YAC1B,kBAACgD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UACX,kBAACJ,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,gBAC6B,IAAlBvF,GAAOqE,OAAe,6BAA+B,KAGlE,kBAAC2I,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,gBAEsB,IAAnBnF,GAAQiE,OAAe,+BAAiC,MAI/D,kBAAC2I,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UACX,kBAACJ,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC,KAAD,CACEC,gBACkB,GAAhBtN,GAAOqE,OAAoC,EAArBkJ,OAAOC,YAAmB,EACtB,EAArBD,OAAOC,YAAmB,EACT,IAAlBxN,GAAOqE,OACP,GACgB,GAAhBrE,GAAOqE,OAEboJ,cAAe,IACdzN,GAAOoM,KAAI,SAAC3J,EAAO4J,GAAR,OACV,kBAAC,GAAD,CACEC,IAAK,QAAUD,EACf/D,GAAI+D,EACJnE,KAAMzF,EACN4F,kBAAmB2D,UAK3B,kBAACgB,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC,KAAD,CACEC,gBACmB,GAAjBlN,GAAQiE,OAAoC,EAArBkJ,OAAOC,YAAmB,EACvB,EAArBD,OAAOC,YAAmB,EACR,IAAnBpN,GAAQiE,OACR,GACiB,GAAjBjE,GAAQiE,OAEdoJ,cAAe,IACdrN,GAAQgM,KAAI,SAAC9J,EAAQ+J,GAAT,OACX,kBAAC,GAAD,CACEC,IAAK,SAAWD,EAChB/D,GAAI+D,EACJnE,KAAM5F,EACN+F,kBAAmB6D,YAO/B,kBAACvG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QA/Lc,WAC1B,IAAItE,EAAU4D,EAAM5D,QAChB8K,EAAQ9K,EAAQ8C,OAEpB9C,EAAQ+B,KA/HZ,SACEsH,EACAlL,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAI,GAcA,MAZa,CACXV,KAAMA,EACNC,YAAaA,EACbC,YAAaA,EACbC,UAAWA,EACXC,IAAK8K,EAAa,EAAN9K,EAAUA,EACtBC,KAAMA,EACNC,OAAQA,EACRI,QAASA,EACTC,eAAgB,GA4GdqN,CACE9C,EACAyB,EACA1M,EACAC,EACAC,EACAC,EACAC,EACAC,GACAI,KAIJ+E,EAAMiB,aAAa7E,GACnB4D,EAAMW,eA4KoCC,MAAM,UAAU4H,UAAWpC,GAAjE,OAGA,kBAAC3F,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,cC1VFqE,GAAYC,aAAW,SAACN,GAAD,MAAY,CACvCH,YAAa,CACXI,OAAQD,EAAME,QAAQ,GACtBC,SAAU,KAEZhB,iBAAkB,CAChBc,OAAQD,EAAME,QAAQ,GACtBE,SAAU,KAEZH,OAAQ,CACNA,OAAQD,EAAME,QAAQ,QA0OX2D,GAtOQ3I,IAAMC,MAAK,SAAwBC,GACxD,IAAM8D,EAAUmB,KAD+C,EAEvBnF,IAAMgB,SAC5C/B,EAAoBiB,EAAM5D,QAAS4D,EAAMjD,QAHoB,mBAExD2L,EAFwD,KAE1CC,EAF0C,OAKnB7I,IAAMgB,SAAS,GALI,mBAKxD5F,EALwD,KAKxC0N,EALwC,OAM3B9I,IAAMgB,SACR,IAAhC4H,EAAazN,QAAQiE,OAAed,OAAOyK,KAAKH,EAAazN,SAAS,GAAK,GAPd,mBAMxD6N,EANwD,KAM5CC,EAN4C,OASnBjJ,IAAMgB,SAChB,IAAhC4H,EAAazN,QAAQiE,OACjBwJ,EAAazN,QAAQ6N,GAAY/N,SACjC,GAZyD,mBASxDiO,EATwD,KASxCC,EATwC,OAczBnJ,IAAMgB,SACV,IAAhC4H,EAAazN,QAAQiE,OACjB8J,EAAiBN,EAAazN,QAAQ6N,GAAYlO,KAClD,GAjByD,mBAcxDsO,EAdwD,KAc3CC,EAd2C,OAmB7BrJ,IAAMgB,SAASoI,GAnBc,mBAmBxDE,EAnBwD,KAmB7CC,EAnB6C,OAoBfvJ,IAAMgB,SAAS,GApBA,mBAoBxDwI,EApBwD,KAoBtCC,EApBsC,KAsBzDC,EAAc1J,IAAM2G,OAAO,MACjC3G,IAAM8G,WAAU,WACe,IAAzB5G,EAAM5D,QAAQ8C,QAChBqK,EAAoBC,EAAY9F,QAAQC,eAEzC,CAAC3D,EAAM5D,QAAQ8C,SAElB,IAkCMwD,EAAe,gBAErB,OACE,oCACE,kBAACzC,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KAC4B,IAAzBH,EAAM5D,QAAQ8C,OACb,oCACE,kBAACkB,EAAA,EAAD,+RAOA,kBAACyH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAM0B,WAAW,UACzC,kBAAC7F,EAAA,EAAD,CAAaC,UAAWC,EAAQW,aAC9B,kBAACtD,EAAA,EAAD,CACE6C,OAAQtB,EAAaI,KAAKsG,GAC1BnF,MAAM,oBACNM,YAAY,IACZL,UAAQ,EACRtI,KAAK,SACL4F,MAAO4H,EACPlI,QAAQ,WACRO,SAAU,SAACC,GAAD,OA3DPF,EA2D4B7E,OAAO+E,EAAMtE,OAAOoE,OA1DjE6H,EAAa7H,QACboH,EAAkBpH,EAAQ0H,GAFV,IAAC1H,MA8DP,kBAACoC,EAAA,EAAD,CAAa1C,QAAQ,WAAW2C,UAAWC,EAAQW,aACjD,kBAACtD,EAAA,EAAD,CACE6C,OAAQtB,EAAaI,KAAK5H,GAC1B+I,MAAM,qBACNM,YAAY,IACZL,UAAQ,EACRtI,KAAK,SACL4F,MAAOtG,EACPgG,QAAQ,WACRO,SAAU,SAACC,GAAD,OAlEFF,EAmES7E,OAAO+E,EAAMtE,OAAOoE,OAlEnDoH,EAAkBpH,QAClB6H,EAAa7H,EAAQ0H,GAFA,IAAC1H,MAuEZ,kBAACoC,EAAA,EAAD,CAAa1C,QAAQ,WAAW2C,UAAWC,EAAQW,aACjD,kBAACN,EAAA,EAAD,CAAYC,IAAKoF,GAAjB,iBACA,kBAACnF,EAAA,EAAD,CACEJ,MAAM,gBACNK,WAAYgF,EACZ9H,MAAOsH,EACPrH,SAAU,SAACC,GAAD,OAxEP,SAACF,GAClB,IAAIzG,EAAW2N,EAAazN,QAAQuG,GAAOzG,SAC3CgO,EAAcvH,GACdyH,EAAkBlO,GAClBoO,EAAepO,EAAW2N,EAAazN,QAAQuG,GAAO5G,MAoEnB8O,CAAWhI,EAAMtE,OAAOoE,SAC5CpD,OAAOuL,QAAQjB,EAAazN,SAC1BmE,OACA6H,KAAI,mCAAEE,EAAF,iBACH,kBAAC3C,EAAA,EAAD,CAAU2C,IAAK,SAAWA,EAAK3F,MAAO2F,GACnCA,QAKX,6BACE,kBAAC1G,EAAA,EAAD,CACEoD,UAAWC,EAAQe,OACnBnE,QA9EK,WACnBV,EAAMjD,MAAM6M,iBACVlB,EAAazN,QAAQ6N,GAAY/K,KACjC,iBACA7C,IA2EY0F,MAAM,UACNM,QAAQ,YAJV,cAOA,kBAACT,EAAA,EAAD,CACEoD,UAAWC,EAAQe,OACnBnE,QA7EQ,WACtB,IAAImJ,EAAkB7J,EAAMjD,MAAM+M,OAClC1L,OAAOuL,QAAQjB,EAAazN,SACzBmE,OACA5C,SAAQ,mCAAOgF,GAAP,kBN4Hf,SAASuI,EAAgBhN,EAAOiN,EAAYC,GAC1C,IAAI/M,EAAmBH,EAAMmN,kBAAkBF,GAuC/C,MAtCwC,qBAA7BC,GACTlN,EAAM6M,iBACJI,EACA,iBACAC,GAIJlN,EAAMoN,mBAAmBH,GAAY,SAACI,EAAY/M,GA2BhD,OA1BYN,EAAMe,MAAMkM,EAAYI,GAE9B5N,SAAQ,SAACyB,GACb,IAAIoM,EAAiBtN,EAAMuN,kBAAkBrM,GAKzC/C,EAHDmP,EAAe7M,cAAgB6M,EAAe5M,UAC/CP,EAAiBhC,gBACNmP,EAAe3M,eAAiB2M,EAAe1M,YAI1DZ,EAAMwN,iBAAiBH,EAAY,gBAAkB,GACrDrN,EAAMyN,SAASJ,GAAc,GAE7BrN,EAAM0N,oBACJL,EACA,kBACA,SAAChF,GAAD,OAAOA,EAAIlK,KAEb6B,EAAM0N,oBAAoBL,EAAY,gBAAgB,SAAChF,GAAD,OAAOA,EAAI,OAEjErI,EAAM6M,iBAAiBQ,EAAY,iBAAkBlP,GACrD6B,EAAM6M,iBAAiBQ,EAAY,eAAgB,OAIhDL,EAAgBhN,EAAOqN,MAGzBrN,EMpKwBgN,CAAgBF,EAAiBrI,EAAMzD,SAEpE4K,EAAgB5J,EAAoBiB,EAAM5D,QAASyN,KAwErCjJ,MAAM,UACNM,QAAQ,YAJV,eASJ,kBAACyG,EAAA,EAAD,CAASC,MAAO,CAAE/C,OAAQ,YAC1B,kBAACgD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UACX,kBAACJ,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,2BAEF,kBAACyH,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,wBAEF,kBAACyH,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,kBAEF,kBAACyH,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,mBAEF,kBAACyH,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,yBAGJ,kBAACyH,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UACX,kBAACJ,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACZ9J,OAAOuL,QAAQjB,EAAazJ,cAAcgI,KACzC,mCAAEE,EAAF,KAAO3F,EAAP,YACE,kBAAC,IAAMkJ,SAAP,CAAgBvD,IAAKA,GAArB,QACQA,EADR,MACgB3F,EADhB,IACuB,kCAK7B,kBAACqG,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACZ9J,OAAOuL,QAAQjB,EAAa1J,eAC1BI,OACA6H,KAAI,mCAAEE,EAAF,KAAO3F,EAAP,YACH,kBAAC,IAAMkJ,SAAP,CAAgBvD,IAAKA,GAClBA,EADH,MACW3F,EADX,IACkB,kCAIxB,kBAACqG,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACZ9J,OAAOuL,QAAQjB,EAAa7N,QAC1BuE,OACA6H,KAAI,mCAAEE,EAAF,KAAO3F,EAAP,YACH,kBAAC,IAAMkJ,SAAP,CAAgBvD,IAAKA,GAClBA,EADH,KACU,KAEL3F,EAAMzG,SAAWyG,EAAM5G,KACxB4G,EAAMtG,gBACNyP,QAAQ,GACV,kCAIR,kBAAC9C,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACZ9J,OAAOuL,QAAQjB,EAAazN,SAC1BmE,OACA6H,KAAI,mCAAEE,EAAF,KAAO3F,EAAP,YACH,kBAAC,IAAMkJ,SAAP,CAAgBvD,IAAKA,GAClBA,EADH,KACU,KAEL3F,EAAMzG,SAAWyG,EAAM5G,KACxB4G,EAAMtG,gBACNyP,QAAQ,GACV,kCAIR,kBAAC9C,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GAAf,SACSQ,EAAa/N,IADtB,IAC2B,6BAD3B,SAES+N,EAAa/N,IAAM,KAKhC,kBAACyF,EAAA,EAAD,gCAGJ,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,cCvOFqE,GAAYC,aAAW,SAACN,GAAD,MAAY,CACvCH,YAAa,CACXI,OAAQD,EAAME,QAAQ,GACtBC,SAAU,KAEZhB,iBAAkB,CAChBc,OAAQD,EAAME,QAAQ,GACtBE,SAAU,SAId,SAASG,GAAYxD,EAAOyD,GAC1B,IAAIC,EAAW1D,EACf,GAAIA,EAAMzC,OAASkG,EACjB,IAAK,IAAIE,EAAI3D,EAAMzC,OAAQoG,EAAIF,EAAGE,IAChCD,EAASlH,KAAK,CAAErD,KAAM,GAAIC,SAAU,EAAGC,KAAM,WAG/CqK,EAAWA,EAASE,MAAM,EAAGH,GAG/B,OAAOC,EA6BT,IAgTeuF,GAhTE9K,IAAMC,MAAK,SAAkBC,GAC5C,IAAM8D,EAAUmB,KADmC,EAE3BnF,IAAMgB,UAAS,GAFY,mBAE5C2E,EAF4C,KAEtCC,EAFsC,OAGb5F,IAAMgB,SAC1Cd,EAAM6K,QAAQrQ,aAJmC,mBAG5CA,EAH4C,KAG/BmL,EAH+B,OAMb7F,IAAMgB,SAC1Cd,EAAM6K,QAAQpQ,aAPmC,mBAM5CA,EAN4C,KAM/BmL,EAN+B,OASjB9F,IAAMgB,SAASd,EAAM6K,QAAQnQ,WATZ,mBAS5CA,EAT4C,KASjCmL,EATiC,OAU7B/F,IAAMgB,SAASd,EAAM6K,QAAQlQ,KAVA,mBAU5CA,EAV4C,KAUvCmL,EAVuC,OAW3BhG,IAAMgB,SAASd,EAAM6K,QAAQjQ,MAXF,mBAW5CA,EAX4C,KAWtCmL,EAXsC,OAYjBjG,IAAMgB,SAASd,EAAM6K,QAAQhQ,OAAOqE,QAZnB,mBAY5C8G,EAZ4C,KAYjCC,EAZiC,OAafnG,IAAMgB,SACxCd,EAAM6K,QAAQ5P,QAAQiE,QAd2B,mBAa5CgH,EAb4C,KAahCC,EAbgC,OAgBvBrG,IAAMgB,SAChCd,EAAM6K,QAAQhQ,OAAO0K,MAAM,EAAGvF,EAAM6K,QAAQhQ,OAAOqE,SAjBF,mBAgB5CrE,EAhB4C,KAgBpCyL,GAhBoC,QAmBrBxG,IAAMgB,SAClCd,EAAM6K,QAAQ5P,QAAQsK,MAAM,EAAGvF,EAAM6K,QAAQ5P,QAAQiE,SApBJ,qBAmB5CjE,GAnB4C,MAmBnCsL,GAnBmC,SAsBzBzG,IAAMgB,UAAS,GAtBU,qBAsB5CsF,GAtB4C,MAsBrCC,GAtBqC,MAwB7C3D,GAAe,gBACfC,GAAiB,QAEjB6D,GAAY1G,IAAM2G,OAAO,MA3BoB,GA4BP3G,IAAMgB,SAAS,GA5BR,qBA4B5C4F,GA5B4C,MA4B5BC,GA5B4B,MA8BnD7G,IAAM8G,WAAU,WACdD,GAAkBH,GAAU9C,QAAQC,eACnC,IAEH,IAsCMkD,GAAqB,SAAC1D,EAAIJ,GAC9B,IAAI+D,EAAYjM,EAChBiM,EAAU3D,GAAMJ,EAChBuD,GAAUQ,GAEV,IAAIV,GAAQ,EACZU,EAAUtK,SAAQ,SAACc,GACS,IAAtBA,EAAMxC,KAAKoE,SACbkH,EAAQA,IAAS,MAIrBC,GAASD,IAGLW,GAAsB,SAAC5D,EAAIJ,GAC/B,IAAIiE,EAAa/L,GACjB+L,EAAW7D,GAAMJ,EACjBwD,GAAWS,GAEX,IAAIZ,GAAQ,EACZY,EAAWxK,SAAQ,SAACW,GACS,IAAvBA,EAAOrC,KAAKoE,SACdkH,EAAQA,IAAS,MAIrBC,GAASD,IAwBX,OACE,oCACE,kBAACnG,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,4BACA,kBAACwD,EAAA,EAAD,CAAaC,UAAWC,EAAQW,aAC9B,kBAACtD,EAAA,EAAD,CACE8C,MAAM,eACND,MAA8B,IAAvBxJ,EAAY0E,OACnBqF,YAAY,YACZL,UAAQ,EACR1C,MAAOhH,EACP0G,QAAQ,WACRO,SAAU,SAACC,GAAD,OA1EaF,EA0EsBE,EAAMtE,OAAOoE,MAzElEmE,EAAenE,QAEM,IAAjBA,EAAMtC,OACRmH,IAAS,GAETA,IAAS,IANmB,IAAC7E,MA6E3B,kBAACoC,EAAA,EAAD,CAAa1C,QAAQ,WAAW2C,UAAWC,EAAQW,aACjD,kBAACN,EAAA,EAAD,CAAYC,IAAKoC,IAAjB,gBACA,kBAACnC,EAAA,EAAD,CACEJ,MAAM,eACNK,WAAYoC,GACZlF,MAAO/G,EACPgH,SAAU,SAACC,GAAD,OAAWkE,EAAelE,EAAMtE,OAAOoE,SAChDpH,EAAU6M,KAAI,SAAC1H,EAAM2H,GAAP,OACb,kBAAC1C,EAAA,EAAD,CAAU2C,IAAKD,EAAO1F,MAAO0F,GAC1B3H,QAKT,kBAAC6H,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,SAAuB,IAAd7M,EACT+G,SAAU,kBAAMoE,GAAcnL,IAC9B8G,MAAO9G,EACPkG,MAAM,YAGVqD,MAAM,YACNuD,eAAe,QAEjB,kBAAC5D,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQtB,GAAaI,KAAKnI,GAC1BsJ,MAAOwB,EAAO,OAAS,OACvBlB,YAAa5J,EAAI4H,WACjB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAO7G,EACPuG,QAAQ,WACRO,SAAU,SAACC,GA5IA,IAACF,KA4IsB7E,OAAO+E,EAAMtE,OAAOoE,SA3IjD,GACXsE,EAAOtE,OA6IL,kBAAC4F,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,SAAkB,IAAT9B,EACThE,SAAU,kBAAMiE,GAASD,IACzBjE,MAAOiE,EACP7E,MAAM,YAGVqD,MAAM,WACNuD,eAAe,QAEjB,kBAAC5D,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQtB,GAAaI,KAAKlI,GAC1BqJ,MAAM,WACNM,YAAa3J,EAAK2H,WAClB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAO5G,EACPsG,QAAQ,WACRO,SAAU,SAACC,GA9JC,IAACF,KA8JsB7E,OAAO+E,EAAMtE,OAAOoE,SA7JlD,GACXuE,EAAQvE,OA+JN,kBAACoC,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQrB,GAAeG,KAAKkD,GAC5B/B,MAAM,WACNM,YAAayB,EAAUzD,WACvB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAOwE,EACP9E,QAAQ,WACRO,SAAU,SAACC,GApKG,IAACF,KAoKsB7E,OAAO+E,EAAMtE,OAAOoE,SAnKpD,GAAKA,GAAS,KAAOmB,GAAeG,KAAKtB,KACpDyE,EAAazE,GACb8E,IAAU,SAACmB,GAAD,OAAgBtC,GAAYsC,EAAYjG,MAClD6E,IAAS,QAmKP,kBAACzC,EAAA,EAAD,CAAaC,UAAWC,EAAQC,kBAC9B,kBAAC5C,EAAA,EAAD,CACE6C,OAAQrB,GAAeG,KAAKoD,GAC5BjC,MAAM,YACNM,YAAa2B,EAAW3D,WACxB2B,UAAQ,EACRtI,KAAK,SACL4F,MAAO0E,EACPhF,QAAQ,WACRO,SAAU,SAACC,GAxKI,IAACF,KAwKsB7E,OAAO+E,EAAMtE,OAAOoE,SAvKrD,GAAKA,GAAS,KAAOmB,GAAeG,KAAKtB,KACpD2E,EAAc3E,GACd+E,IAAW,SAACmB,GAAD,OAAiBvC,GAAYuC,EAAalG,MACrD6E,IAAS,QAwKP,kBAACsB,EAAA,EAAD,CAASC,MAAO,CAAE/C,OAAQ,YAE1B,kBAACgD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UACX,kBAACJ,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,gBAC6B,IAAlBvF,EAAOqE,OAAe,6BAA+B,KAGlE,kBAAC2I,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC9H,EAAA,EAAD,gBAEsB,IAAnBnF,GAAQiE,OAAe,+BAAiC,MAI/D,kBAAC2I,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UACX,kBAACJ,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC,KAAD,CACEC,gBACkB,GAAhBtN,EAAOqE,OAAoC,EAArBkJ,OAAOC,YAAmB,EACtB,EAArBD,OAAOC,YAAmB,EACT,IAAlBxN,EAAOqE,OACP,GACgB,GAAhBrE,EAAOqE,OAEboJ,cAAe,IACdzN,EAAOoM,KAAI,SAAC3J,EAAO4J,GAAR,OACV,kBAAC,GAAD,CACEC,IAAK,QAAUD,EACf/D,GAAI+D,EACJnE,KAAMzF,EACN4F,kBAAmB2D,UAK3B,kBAACgB,EAAA,EAAD,CAAM9E,MAAI,EAACmF,GAAI,GACb,kBAAC,KAAD,CACEC,gBACmB,GAAjBlN,GAAQiE,OAAoC,EAArBkJ,OAAOC,YAAmB,EACvB,EAArBD,OAAOC,YAAmB,EACR,IAAnBpN,GAAQiE,OACR,GACiB,GAAjBjE,GAAQiE,OAEdoJ,cAAe,IACdrN,GAAQgM,KAAI,SAAC9J,EAAQ+J,GAAT,OACX,kBAAC,GAAD,CACEC,IAAK,SAAWD,EAChB/D,GAAI+D,EACJnE,KAAM5F,EACN+F,kBAAmB6D,YAO/B,kBAACvG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QA/Lc,WAC1B,IAAItE,EAAU4D,EAAM5D,QAChB8K,EAAQ9K,EAAQ0O,QAAQ9K,EAAM6K,SAE9BzE,KACFhK,EAAQ8K,GArId,SACEzB,EACAlL,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAI,GAcA,MAZa,CACXV,KAAMA,EACNC,YAAaA,EACbC,YAAaA,EACbC,UAAWA,EACXC,IAAK8K,EAAa,EAAN9K,EAAUA,EACtBC,KAAMA,EACNC,OAAQA,EACRI,QAASA,EACTC,eAAgB,GAiHG6P,CACftF,EACAzF,EAAM6K,QAAQtQ,KACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAI,IAEF+E,EAAMiB,aAAa7E,GACnB4D,EAAMW,gBA8KkCC,MAAM,UAAU4H,UAAWpC,IAAjE,QAGA,kBAAC3F,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,c,qCCpUOf,GAlCMC,IAAMC,MAAK,SAAsBC,GAAQ,IAKtClF,EALqC,EACjCgF,IAAMgB,SAAS,CACvCyG,QAA6B,SAApBvH,EAAMgL,YAF0C,mBACpDhI,EADoD,KAC7CC,EAD6C,KAU3D,OACE,oCACE,kBAAChD,EAAA,EAAD,KAAcD,EAAME,OACpB,kBAACC,EAAA,EAAD,KACE,kBAAC0H,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRyB,WAAW,UACX,kBAACwB,GAAA,EAAD,CAAYrK,MAAO,cAAeM,QAAQ,aAA1C,cAGA,kBAACgK,GAAA,EAAD,CAAQ3D,QAASvE,EAAMuE,QAAS9F,UAjBlB3G,EAiByC,UAjBhC,SAAC4G,GAC9B1B,EAAMmL,cACNlI,EAAS,gBAAKD,EAAN,gBAAclI,EAAO4G,EAAMtE,OAAOmK,iBAkBxC,kBAAC/G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASV,EAAMW,YAAaC,MAAM,WAA1C,cCsDOwK,GA7EI,SAAC,GAab,IAZLC,EAYI,EAZJA,YACAtO,EAWI,EAXJA,MACAuO,EAUI,EAVJA,OACAlP,EASI,EATJA,QACAyO,EAQI,EARJA,QACAvJ,EAOI,EAPJA,KACA0J,EAMI,EANJA,UACA9K,EAKI,EALJA,MACAS,EAII,EAJJA,YACA8B,EAGI,EAHJA,YACA0I,EAEI,EAFJA,YACAlK,EACI,EADJA,aAEA,OACE,kBAACsK,EAAA,EAAD,CACEC,qBACkB,QAAhBH,GAAyC,eAAhBA,EAE3BI,WAA4B,UAAhBJ,EACZhK,WAAS,EACT2D,SAAU1D,EACVoK,KAAMJ,EACNK,QAAShL,GACQ,UAAhB0K,EACC,kBAACO,EAAD,CAAW1L,MAAOA,EAAOS,YAAaA,IACpB,WAAhB0K,EACF,kBAAC,EAAD,CACEnL,MAAOA,EACPS,YAAaA,EACbM,aAAcA,EACd7E,QAASA,IAEO,UAAhBiP,EACF,kBAAC,EAAD,CACEnL,MAAOA,EACPuC,YAAaA,EACb9B,YAAaA,IAEG,QAAhB0K,EACF,kBAAC,GAAD,CACEnL,MAAOA,EACP9D,QAASA,EACTuE,YAAaA,EACbM,aAAcA,IAEE,aAAhBoK,EACF,kBAAC,GAAD,CACEnL,MAAOA,EACPS,YAAaA,EACbwK,YAAaA,EACbH,UAAWA,IAEK,eAAhBK,EACF,kBAAC,GAAD,CACEnL,MAAOA,EACPnD,MAAOA,EACPX,QAASA,EACTuE,YAAaA,EACbM,aAAcA,IAEE,SAAhBoK,EACF,kBAAC,GAAD,CACEnL,MAAOA,EACP9D,QAASA,EACTyO,QAASA,EACTgB,WAAYlL,EACZA,YAAaA,EACbM,aAAcA,IAGhB,kBAACb,EAAA,EAAD,0CC5ER,SAAS0L,GAAc9L,GACrB,OACE,kBAAC,IAAM0K,SAAP,KACG1K,EAAM+L,MAAM9E,KAAI,SAAClE,GAAD,OACf,yBAAKoE,IAAK,IAAMnH,EAAMpE,KAAOmH,EAAKjI,KAAOkF,EAAMzF,MAC5CwI,EAAKhI,SAAWgI,EAAK/H,KAAO,IAAM+H,EAAKjI,U,ICVnCkR,G,YDkBb,WAAYhM,GAAQ,IAAD,8BACjB,4CAAMA,KAgHRiM,iBAAmB,SAACpB,GAClB,EAAK5H,SAAS,CAAEiJ,SAAUrB,IAC1B,EAAK5H,SAAS,CAAEkJ,QAAQ,KAnHP,EAsHnBC,kBAAoB,WAClB,EAAKnJ,SAAS,CAAEkJ,QAAQ,KArHxB,EAAKnJ,MAAQ,CACXqJ,QAAS,CACP,CACEnM,MAAO,OACPoM,MAAO,OACPC,UAAU,EACVL,SAAU,QACVM,MAAO,KAET,CACEtM,MAAO,eACPoM,MAAO,cACPE,MAAO,KAET,CACEtM,MAAO,eACPoM,MAAO,cACPG,OAAQrO,OAAOsO,OAAO,GAAItS,GAC1BoS,MAAO,KAET,CACEtM,MAAO,YACPoM,MAAO,YACP1Q,KAAM,UACN+Q,sBAAuB,SAACC,EAAQ/B,GAC9B,OACEA,EAAQnQ,UAAU6H,WAAWsK,gBAC7BD,EAAOC,eAGXL,MAAO,KAET,CACEtM,MAAO,OACPoM,MAAO,MACP1Q,KAAM,UACN4Q,MAAO,KAET,CACEtM,MAAO,WACPoM,MAAO,OACP1Q,KAAM,UACN4Q,MAAO,KAET,CACEtM,MAAO,cACPoM,MAAO,SACPQ,OAAQ,SAACjC,GAAD,OACN,kBAACiB,GAAD,CACEC,MAAOlB,EAAQhQ,OACfN,KAAMsQ,EAAQtQ,KACdqB,KAAM,WAGVmR,cAAe,kBAAM,kBAACtM,EAAA,EAAD,CAAQS,QAAQ,YAAhB,WACrByL,sBAAuB,SAACC,EAAQ/B,GAC9B,IAAImC,GAAQ,EAeZ,OAdAnC,EAAQhQ,OAAO2B,SAAQ,SAACc,GACTc,OAAOC,OAAOf,GACpBd,SAAQ,SAACgF,GAEZA,EACGe,WACAsK,cACAI,SAASL,EAAOC,iBAEnBG,EAAQA,IAAS,SAKhBA,IAGX,CACE9M,MAAO,eACPoM,MAAO,UACPQ,OAAQ,SAACjC,GAAD,OACN,kBAACiB,GAAD,CACEC,MAAOlB,EAAQ5P,QACfV,KAAMsQ,EAAQtQ,KACdqB,KAAM,YAGVmR,cAAe,kBAAM,kBAACtM,EAAA,EAAD,CAAQS,QAAQ,YAAhB,WACrByL,sBAAuB,SAACC,EAAQ/B,GAC9B,IAAImC,GAAQ,EAeZ,OAdAnC,EAAQ5P,QAAQuB,SAAQ,SAACW,GACViB,OAAOC,OAAOlB,GACpBX,SAAQ,SAACgF,GAEZA,EACGe,WACAsK,cACAI,SAASL,EAAOC,iBAEnBG,EAAQA,IAAS,SAKhBA,KAIb5Q,QAAS8Q,MAAMnL,KAAK,EAAK/B,MAAM5D,SAC/B+P,QAAQ,EACRD,SAAU,IA7GK,E,sEA0HT,IAAD,OACP,OACE,kBAACiB,EAAA,EAAD,CAAOjM,QAAQ,WAAWkM,GAAI,GAC5B,kBAAC,IAAD,CACEC,QAAS,CACP,CACEC,KAAM,eACNC,QAAS,UACT7M,QAAS,SAACgB,EAAOmJ,GACf,IAAIzO,EAAO,YAAO,EAAK4G,MAAM5G,SACzB8K,EAAQ9K,EAAQ0O,QAAQD,GAE5B,GAAI3D,EAAQ,EAAG,CACb,IAAIsG,EAAOpR,EAAQ8K,EAAQ,GAC3B9K,EAAQ8K,EAAQ,GAAK9K,EAAQ8K,GAC7B9K,EAAQ8K,EAAQ,GAAG3M,KAAO2M,EAAQ,EAClC9K,EAAQ8K,GAASsG,EACjBpR,EAAQ8K,GAAO3M,KAAO2M,EAGxB,EAAKjE,SAAS,CAAE7G,YAChB,EAAK4D,MAAMiB,aAAa7E,KAG5B,CACEkR,KAAM,iBACNC,QAAS,YACT7M,QAAS,SAACgB,EAAOmJ,GACf,IAAIzO,EAAO,YAAO,EAAK4G,MAAM5G,SACzB8K,EAAQ9K,EAAQ0O,QAAQD,GAE5B,GAAI3D,EAAQ9K,EAAQ8C,OAAS,EAAG,CAC9B,IAAIsO,EAAOpR,EAAQ8K,EAAQ,GAC3B9K,EAAQ8K,EAAQ,GAAK9K,EAAQ8K,GAC7B9K,EAAQ8K,EAAQ,GAAG3M,KAAO2M,EAAQ,EAClC9K,EAAQ8K,GAASsG,EACjBpR,EAAQ8K,GAAO3M,KAAO2M,EAGxB,EAAKjE,SAAS,CAAE7G,YAChB,EAAK4D,MAAMiB,aAAa7E,KAG5B,CACEkR,KAAM,OACNC,QAAS,cACT7M,QAAS,SAACgB,EAAOmJ,GACf,EAAKoB,iBAAiBpB,MAI5BwB,QAAS5I,KAAKT,MAAMqJ,QACpBtL,KAAMmM,MAAMnL,KAAK0B,KAAKzD,MAAM5D,SAC5B8P,SAAU,CACRuB,YAAa,SAACC,GAAD,OACX,IAAIC,SAAQ,SAACC,EAASC,GACpBC,YAAW,WAEP,IAAI1R,EAAO,YAAO,EAAK4G,MAAM5G,SACzB8K,EAAQ9K,EAAQ0O,QAAQ4C,GAC5BtR,EAAQ2R,OAAO7G,EAAO,GAEtB9K,EAAQI,SAAQ,SAACC,EAAQyK,GACvBzK,EAAOlC,KAAO2M,EAAQ,KAGxB,EAAKjE,SAAS,CAAE7G,YAAW,kBAAMwR,OACjC,EAAK5N,MAAMiB,aAAa7E,GAE1BwR,MACC,UAGTI,aAAc,CACZC,KAAM,CAAEC,uBAAwB,0BAElCC,QAAS,CACPC,oBAAqB,EACrBC,cAAe,OACfC,QAAQ,EACRC,gBAAiB,CAAC,EAAG,GAAI,GAAI,IAC7BC,WAAW,EACXC,SAAS,EACTC,YAAa,UAGjB,kBAAC,GAAD,CACErD,YAAa,OACb/J,KAAM,KACNpB,MAAO,gBACP9D,QAASqH,KAAKT,MAAM5G,QACpByO,QAASpH,KAAKT,MAAMkJ,SACpBZ,OAAQ7H,KAAKT,MAAMmJ,OACnBxL,YAAa8C,KAAK2I,kBAClBnL,aAAcwC,KAAKzD,MAAMiB,oB,GAzNXyD,a,sKEuHTiK,GA5HI7O,IAAMC,MAAK,SAAoBC,GAAQ,IAAD,EAC/BF,IAAMgB,UAAS,GADgB,mBAChD4K,EADgD,KAC1CkD,EAD0C,OAE7B9O,IAAMgB,SAAS,IAFc,mBAEhDZ,EAFgD,KAEzC2O,EAFyC,OAG/B/O,IAAMgB,SAAS,IAHgB,mBAGhDlF,EAHgD,KAG1CkT,EAH0C,OAI/BhP,IAAMgB,SAAS,MAJgB,mBAIhDQ,EAJgD,KAI1CyN,EAJ0C,KAMjD9C,EAAmB,SAACrQ,EAAMsE,EAAOoB,GACrCyN,EAAQzN,GACRuN,EAAS3O,GACT4O,EAAQlT,GACRgT,GAAQ,IAYV,OACE,oCACE,kBAACI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAM,EACNxO,QAAS,kBAAMuL,EAAiB,QAAS,QAAS,QAClD,kBAACkD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACEvT,QAAS,QACTwT,uBAAwB,CAAEC,QAAQ,MAGtC,kBAACL,GAAA,EAAD,CACEC,QAAM,EACNxO,QAAS,kBACPuL,EAAiB,SAAU,iCAAkC,QAE/D,kBAACkD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACEvT,QAAS,uBACTwT,uBAAwB,CAAEC,QAAQ,MAGtC,kBAACL,GAAA,EAAD,CACEC,QAAM,EACNxO,QAAS,kBACPuL,EACE,QACA,8CACA,QAGJ,kBAACkD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACEvT,QAAS,oBACTwT,uBAAwB,CAAEC,QAAQ,MAGtC,kBAACL,GAAA,EAAD,CACEC,QAAM,EACNxO,QAAS,kBAAMuL,EAAiB,MAAO,eAAgB,QACvD,kBAACkD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACEvT,QAAS,aACTwT,uBAAwB,CAAEC,QAAQ,MAGtC,kBAACL,GAAA,EAAD,CACEC,QAAM,EACNxO,QAAS,kBACPuL,EACE,aACA,0CACA,QAGJ,kBAACkD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACEvT,QAAS,aACTwT,uBAAwB,CAAEC,QAAQ,MAGtC,kBAAC3H,EAAA,EAAD,CAASC,MAAO,CAAE/C,OAAQ,YAC1B,kBAACoK,GAAA,EAAD,CACEC,QAAM,EACNxO,QAAS,kBAAMuL,EAAiB,WAAY,WAAY,QACxD,kBAACkD,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CACEvT,QAAS,WACTwT,uBAAwB,CAAEC,QAAQ,OAIxC,kBAAC,GAAD,CACEjE,YAAazP,EACbmB,MAAOiD,EAAMjD,MACbX,QAAS4D,EAAM5D,QACfkF,KAAMA,EACN0J,UAAWhL,EAAMgL,UACjB9K,MAAOA,EACPoL,OAAQI,EACRjJ,YAlGc,WAClBzC,EAAMyC,cACNmM,GAAQ,IAiGJjO,YAvGoB,WACxBiO,GAAQ,IAuGJ3N,aAAcjB,EAAMiB,aACpBkK,YAAanL,EAAMmL,kBC/GZxG,iBAjBA,iBAAO,CACpB4K,OAAQ,CACNC,WAAY,IACZzK,SAAU,EACVzJ,SAAU,IAEZmU,KAAM,CACJC,SAAU,MAUC/K,EANO,SAAC,GAAD,IAAGb,EAAH,EAAGA,QAAH,OACpB,kBAACmH,GAAA,EAAD,CAAYqE,QAAM,EAAC1O,MAAO,cAAeiD,UAAWC,EAAQyL,QAA5D,uBCoCF,SAASI,GAAavT,GAQpB,OAPAA,EAAQI,SAAQ,SAACC,GACf,IAAImT,EA1CR,SAAmBC,EAAKC,EAAWC,GACjC,IAAIxQ,EAAOnF,EAAU0Q,QAAQ1Q,EAAU0V,IAAc,EACjDE,EAAYH,EACZI,EAAiBF,EACjBG,EAAa,EAEjB,GAAI7V,EAASkF,IAASsQ,GAAgB,IAATtQ,IAAwB,IAAVA,GAAuB,IAARsQ,EACxD,MAAO,CACLM,IAAKH,EACLI,MAAOH,GAIX,GAAIJ,GAAO,GAUT,MAAO,CACLM,IAJFH,EAAYH,GAAO,IALjBK,EADEL,GAAO,EACItQ,EAEAA,EAAO,KAGiB,GAAK2Q,GAK1CE,MAJFH,EAAiBF,GAAY,GAAKG,IAOlC,KAAOD,GAAkB,GAAKD,GAAa3V,EAASyV,EAAY,IAC9DE,GAAwB,EACxBC,GAAkC,IAItC,MAAO,CACLE,IAAKH,EACLI,MAAOzQ,KAAKC,KAAKqQ,IAMRI,CAAU5T,EAAO9B,IAAM,EAAG8B,EAAOhC,YAAagC,EAAO7B,MAE9D6B,EAAOiD,MAAiB,EAATkQ,EAAGO,IAClB1T,EAAOG,OAASgT,EAAGQ,SAGdhU,ECnCT,IAAIkU,GAAS,CACXC,QAAS,CACPC,OAAQ,OACRhE,MAAO,IACPtL,QAAS,YACTuP,aAAa,EACbC,eAAgB,IAElBC,QAAS,CAAEC,mBAAoB,OAC/BrB,OAAQ,CACNsB,SAAU,QACVC,SAAS,EACTF,mBAAoB,MACpBG,aAAc,KAkIHC,G,YA7Hb,WAAYhR,GAAQ,IAAD,uBACjB,4CAAMA,KAmCRiR,gBAAkB,WAChB,IAAIrM,EAAQ,EAAK5B,MAAM4B,MAEI,UAAvBA,EAAMjJ,QAAQC,MAChBwM,OAAO8I,aAAaC,QAAQ,QAAS,QACrCvM,EAAMjJ,QAAQC,KAAO,SAErBwM,OAAO8I,aAAaC,QAAQ,QAAS,SACrCvM,EAAMjJ,QAAQC,KAAO,SAGvB,EAAKqH,SAAS,CAAE2B,WA/CC,EAkDnBwM,eAAiB,SAACC,GAChBjJ,OAAO8I,aAAaC,QAAQ,aAAcE,GAC1C,EAAKpO,SAAS,CAAEoO,WAAYA,KApDX,EAuDnB5O,YAAc,WACZ,IAAIrG,EAAU,EAAK4G,MAAM5G,QACzBA,EAAQ8C,OAAS,EAEjB,EAAK+D,SAAS,CAAE7G,YAChBgM,OAAO8I,aAAaC,QAAQ,UAAWnP,KAAKI,UAAUhG,KA5DrC,EA+DnB6E,aAAe,SAACqQ,GACd,IAAIlV,EAAUkV,EACVvU,EAAQZ,EAAcC,GAC1B,EAAK6G,SAAS,CAAE7G,YAChB,EAAK6G,SAAS,CAAElG,UAChBqL,OAAO8I,aAAaC,QAAQ,UAAWnP,KAAKI,UAAUhG,KAjEtD,IAAI4O,EAAY5C,OAAO8I,aAAaK,QAAQ,SACxCF,EAAYjJ,OAAO8I,aAAaK,QAAQ,aACxCC,EAAgBxP,KAAKC,MAAMmG,OAAO8I,aAAaK,QAAQ,YAEzC,OAAdvG,EACF5C,OAAO8I,aAAaC,QAAQ,QAAS,QACd,UAAdnG,EACT7P,EAAaQ,QAAQC,KAAO,QACL,SAAdoP,IACT7P,EAAaQ,QAAQC,KAAO,QAGZ,OAAdyV,GACFjJ,OAAO8I,aAAaC,QAAQ,YAAa,SAGrB,OAAlBK,IACFpJ,OAAO8I,aAAaC,QAAQ,UAAW,MACvCK,EAAgB,IAGlB,IAAIpV,EAAUuT,GAAa6B,EAAcjM,MAAM,EAAGiM,EAActS,SAC5DnC,EAAQZ,EAAcC,GAzBT,OA2BjB,EAAK4G,MAAQ,CACX4B,MAAOzJ,EACPsW,QAASC,QACTtV,QAASA,EACTiV,UAAyB,SAAdA,EACXtU,MAAOA,GAhCQ,E,sEAuET,IAAD,OACH4U,EAAWC,YAAenO,KAAKT,MAAM4B,OACzC,OACE,kBAAC,IAAD,CAAkBA,MAAO+M,GACvB,kBAACE,EAAA,EAAD,MACA,kBAAC,IAAD,CACEjN,MAAO+M,EACPrB,OAAQA,GACRwB,iBAAkBrO,KAAKT,MAAMqO,YAC5B,gBAAGU,EAAH,EAAGA,cAAeV,EAAlB,EAAkBA,UAAlB,OACC,oCACE,kBAAC,IAAD,KACE,kBAACW,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgBnO,UAAWoO,IAAaC,aACtC,kBAAC,IAAD,OAEF,kBAAC,GAAD,QAGJ,kBAAC,IAAD,KACE,yBAAKrO,UAAWkO,EAAcjK,WAC5B,kBAAC,GAAD,CACE/K,MAAO,EAAKiG,MAAMjG,MAClBoO,YAAa,EAAK8F,gBAClBxO,YAAa,EAAKA,YAClBrG,QAAS,EAAK4G,MAAM5G,QACpB6E,aAAc,EAAKA,aACnB+J,UAAW,EAAKhI,MAAM4B,MAAMjJ,QAAQC,QAGxC,kBAAC,IAAD,CAAa8E,QAAS,kBAAM,EAAK0Q,eAAeC,KAC9C,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAACc,EAAA,EAAD,CAAWnN,SAAS,MAClB,kBAACoN,EAAA,EAAD,CAAKhF,GAAI,GACP,kBAAC,GAAD,CACEhR,QAAS,EAAK4G,MAAM5G,QACpB6E,aAAc,EAAKA,aACnBoR,WAAY,EAAKC,gBACjBC,aAAc,EAAKC,yB,GAjHvB9N,aCtClBoI,iBACE,kBAAC,IAAMpC,SAAP,KACE,kBAAC,GAAD,OAEF+H,SAASC,cAAc,Y","file":"static/js/main.ccf62b1c.chunk.js","sourcesContent":["const TierNames = [\r\n  'N/A',\r\n  'ULV',\r\n  'LV',\r\n  'MV',\r\n  'HV',\r\n  'EV',\r\n  'IV',\r\n  'LuV',\r\n  'ZPMV',\r\n  'UV',\r\n];\r\n\r\nconst Voltages = [8, 32, 128, 512, 2048, 8192, 32768, 131072, 524288];\r\n\r\nconst Colors = [\r\n  '#3B511A',\r\n  '#51301A',\r\n  '#253192',\r\n  '#7B2FBE',\r\n  '#287697',\r\n  '#434343',\r\n  '#D88198',\r\n  '#41CD34',\r\n  '#DECF2A',\r\n  '#6689D3',\r\n  '#C354CD',\r\n  '#EB8844',\r\n  '#1E1B1B',\r\n  '#B3312C',\r\n];\r\n\r\nconst Recipes = [\r\n  {\r\n    step: 0,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Cobblestone',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 1,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 60,\r\n    time: 1,\r\n    inputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Water',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Electrolyzer',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 400,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 12,\r\n    inputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Numismatic Dynamo',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 10.32,\r\n    inputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'RF/t',\r\n        quantity: 12500,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst DefaultTheme = {\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff5c8d',\r\n      main: '#d81b60',\r\n      dark: '#a00037',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n};\r\n\r\nexport { TierNames, Voltages, Colors, Recipes, DefaultTheme };\r\n","import { DirectedGraph } from 'graphology';\r\nimport { reverse } from 'graphology-operators';\r\nimport findCircuits from 'elementary-circuits-directed-graph';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\n/**\r\n *A directed graph for recipe calculations.\r\n *\r\n * @export\r\n * @param {*} recipes - Input object containing recipes\r\n * @returns\r\n */\r\nfunction GenerateGraph(recipes) {\r\n  let directedGraph = new DirectedGraph();\r\n  directedGraph.upgradeToMulti();\r\n\r\n  recipes.forEach((recipe) => {\r\n    directedGraph.addNode(Number(recipe.step), {\r\n      inputs: recipe.inputs,\r\n      machineName: recipe.machineName,\r\n      machineTier: recipe.machineTier,\r\n      outputs: recipe.outputs,\r\n      targetMachines: 1,\r\n      time: recipe.overclock ? recipe.timeoc : recipe.time,\r\n      visitedCount: 0,\r\n    });\r\n  });\r\n\r\n  let edgeGraph = GenerateEdges(directedGraph);\r\n  let reversedGraph = reverse(edgeGraph);\r\n  let acyclicGraph = RemoveCycles(reversedGraph);\r\n\r\n  return acyclicGraph;\r\n}\r\n\r\nfunction GenerateEdges(graph) {\r\n  let edgeGraph = graph;\r\n\r\n  edgeGraph.forEachNode((source, sourceAttributes) => {\r\n    sourceAttributes.outputs.forEach((output) => {\r\n      edgeGraph.forEachNode((target, targetAttributes) => {\r\n        if (source !== target) {\r\n          targetAttributes.inputs.forEach((input) => {\r\n            if (input.name === output.name) {\r\n              edgeGraph.addDirectedEdge(source, target, {\r\n                name: input.name,\r\n                inputQuantity: input.quantity,\r\n                inputTime: targetAttributes.time,\r\n                outputQuantity: output.quantity,\r\n                outputTime: sourceAttributes.time,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return edgeGraph;\r\n}\r\n\r\nfunction RemoveCycles(graph) {\r\n  let adjList = FindAdjList(graph);\r\n  let cycles = findCircuits(adjList);\r\n\r\n  if (cycles) {\r\n    let acyclicGraph = FixGraph(graph, cycles);\r\n    return acyclicGraph;\r\n  } else {\r\n    return graph;\r\n  }\r\n}\r\n\r\nfunction FindAdjList(graph) {\r\n  let edges = [];\r\n\r\n  graph.forEachNode((node) => {\r\n    edges[node] = [];\r\n  });\r\n\r\n  graph.forEachEdge(\r\n    (edge, attributes, source, target, sourceAttributes, targetAttributes) => {\r\n      edges[source].push(Number(target));\r\n    }\r\n  );\r\n  let adjList = Object.values(edges);\r\n\r\n  return adjList;\r\n}\r\n\r\nfunction FixGraph(graph, cycles) {\r\n  let tmpGraph = graph;\r\n\r\n  for (let cycle of cycles) {\r\n    let source = cycle[0];\r\n    let target = cycle[1];\r\n\r\n    let edges = tmpGraph.edges(source, target);\r\n    edges.forEach((edge) => {\r\n      tmpGraph.dropEdge(edge);\r\n    });\r\n  }\r\n\r\n  return tmpGraph;\r\n}\r\n\r\nfunction MachineRequirements(recipes, graph) {\r\n  let machineTotals = [];\r\n  let machineSteps = [];\r\n  let rft = 0;\r\n  let inputs = [];\r\n  let outputs = [];\r\n\r\n  if (typeof recipes === 'undefined' || recipes.length === 0) {\r\n    return { machineTotals, machineSteps, rft, inputs, outputs };\r\n  }\r\n\r\n  inputs = FindInitialInputs(graph);\r\n  outputs = FindFinalOutputs(graph);\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    let tier = TierNames[attributes.machineTier];\r\n    let prefix = tier !== 'N/A' ? tier + ' ' : '';\r\n    let machineName = attributes.machineName;\r\n    let machine = prefix + machineName;\r\n    let recipe = recipes[node];\r\n    let recipeRft = recipe.overclock ? recipe.rftoc : recipe.rft;\r\n\r\n    if (!(machine in machineTotals)) {\r\n      machineTotals[machine] = Math.ceil(attributes.targetMachines);\r\n    } else {\r\n      machineTotals[machine] =\r\n        machineTotals[machine] + Math.ceil(attributes.targetMachines);\r\n    }\r\n\r\n    machineSteps[node] = machine + ' ' + Math.ceil(attributes.targetMachines);\r\n\r\n    rft = rft + Math.ceil(attributes.targetMachines) * recipeRft;\r\n  });\r\n\r\n  return { machineTotals, machineSteps, rft, inputs, outputs };\r\n}\r\n\r\nfunction FindInitialInputs(graph) {\r\n  let inputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.inputs.forEach((input) => {\r\n      if (!(input.name in inputs)) {\r\n        inputs[input.name] = {\r\n          node: Number(node),\r\n          quantity: input.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in inputs) {\r\n          delete inputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return inputs.sort();\r\n}\r\n\r\nfunction FindFinalOutputs(graph) {\r\n  let outputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.outputs.forEach((output) => {\r\n      if (!(output.name in outputs)) {\r\n        outputs[output.name] = {\r\n          node: Number(node),\r\n          quantity: output.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in outputs) {\r\n          delete outputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return outputs.sort();\r\n}\r\n\r\nfunction CalculateTarget(graph, sourceNode, calculatorTargetMachines) {\r\n  let sourceAttributes = graph.getNodeAttributes(sourceNode);\r\n  if (typeof calculatorTargetMachines !== 'undefined') {\r\n    graph.setNodeAttribute(\r\n      sourceNode,\r\n      'targetMachines',\r\n      calculatorTargetMachines\r\n    );\r\n  }\r\n\r\n  graph.forEachOutNeighbor(sourceNode, (targetNode, targetAttributes) => {\r\n    let edges = graph.edges(sourceNode, targetNode);\r\n\r\n    edges.forEach((edge) => {\r\n      let edgeAttributes = graph.getEdgeAttributes(edge);\r\n      let inBPS =\r\n        (edgeAttributes.inputQuantity / edgeAttributes.inputTime) *\r\n        sourceAttributes.targetMachines;\r\n      let outBPS = edgeAttributes.outputQuantity / edgeAttributes.outputTime;\r\n      let targetMachines = inBPS / outBPS;\r\n\r\n      if (\r\n        graph.getNodeAttribute(targetNode, 'visitedCount') > 0 &&\r\n        graph.inDegree(targetNode) > 1\r\n      ) {\r\n        graph.updateNodeAttribute(\r\n          targetNode,\r\n          'targetMachines',\r\n          (n) => n + targetMachines\r\n        );\r\n        graph.updateNodeAttribute(targetNode, 'visitedCount', (n) => n + 1);\r\n      } else {\r\n        graph.setNodeAttribute(targetNode, 'targetMachines', targetMachines);\r\n        graph.setNodeAttribute(targetNode, 'visitedCount', 1);\r\n      }\r\n    });\r\n\r\n    return CalculateTarget(graph, targetNode);\r\n  });\r\n\r\n  return graph;\r\n}\r\n\r\nexport { GenerateGraph, MachineRequirements, CalculateTarget };\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          A production chain calculator inspired by the{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://kirkmcdonald.github.io/\">\r\n            Kirk McDonald calculator\r\n          </Link>{' '}\r\n          for Factorio. Please ask questions and report bugs at{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://github.com/SimonNguyen/ProductionChain\">\r\n            GitHub\r\n          </Link>\r\n          .\r\n          <br />\r\n          <br />\r\n          Shortcuts: <br />\r\n          <code>ESC</code> closes dialog menus.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { compress, decompress } from 'lzutf8';\r\nimport { Recipes } from '../../data';\r\n\r\nconst ImportExportMenu = React.memo(function ImportExportMenu(props) {\r\n  const [data, setData] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    let array = data.split(',');\r\n    let uint8array = Uint8Array.from(array);\r\n    let recipes = JSON.parse(decompress(uint8array));\r\n    props.handleUpdate(recipes);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    let jString = JSON.stringify(props.recipes);\r\n    let compressedData = compress(jString);\r\n    setData(compressedData.toString());\r\n  };\r\n\r\n  const handleDefaultImport = () => {\r\n    let recipes = Recipes;\r\n    props.handleUpdate(recipes);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Paste a recipe string below to import a recipe.\r\n          <br />\r\n          <br />\r\n          Alternatively, you may import a sample recipe:\r\n        </DialogContentText>\r\n        <Button\r\n          onClick={handleDefaultImport}\r\n          color=\"default\"\r\n          variant=\"outlined\">\r\n          Numismatic Generators\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          size=\"medium\"\r\n          rowsMax=\"10\"\r\n          variant=\"outlined\"\r\n          value={data}\r\n          onChange={handleChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleImport} color=\"default\">\r\n          Import\r\n        </Button>\r\n        <Button onClick={handleExport} color=\"default\">\r\n          Export\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ImportExportMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ClearMenu = React.memo(function ClearMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => props.handleClear()} color=\"default\">\r\n            Accept\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ClearMenu;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n});\r\n\r\nconst regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\nconst regWholeNumber = /^\\d+$/;\r\n\r\nclass RecipeRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.unitLabelRef = React.createRef();\r\n    this.state = {\r\n      unitLabelWidth: 0,\r\n      item: this.props.item,\r\n    };\r\n  }\r\n\r\n  handleQuantity = (event) => {\r\n    const value = Number(event.target.value);\r\n    if (value >= 1 && regWholeNumber.test(value)) {\r\n      let item = this.state.item;\r\n      item.quantity = value;\r\n      this.setState({ item });\r\n      this.props.handleUpdateItems(this.props.id, this.state.item);\r\n    }\r\n  };\r\n\r\n  handleUnit = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.unit = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleName = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.name = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ unitLabelWidth: this.unitLabelRef.current.offsetWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormControl className={this.props.classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.quantity)}\r\n            label=\"Quantity\"\r\n            required\r\n            type=\"number\"\r\n            value={this.state.item.quantity.toString()}\r\n            variant=\"outlined\"\r\n            onChange={this.handleQuantity}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={this.props.classes.formControlSmall}>\r\n          <InputLabel ref={this.unitLabelRef}>Unit</InputLabel>\r\n          <Select\r\n            labelWidth={this.state.unitLabelWidth}\r\n            label=\"Unit\"\r\n            placeholder=\"b\"\r\n            value={this.state.item.unit}\r\n            onChange={this.handleUnit}>\r\n            <MenuItem value=\"b\">b</MenuItem>\r\n            <MenuItem value=\"mb\">mb</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={this.props.classes.formControl}>\r\n          <TextField\r\n            error={this.props.item.name.length === 0}\r\n            label=\"Item Name\"\r\n            required\r\n            type=\"string\"\r\n            value={this.state.item.name}\r\n            variant=\"outlined\"\r\n            onChange={this.handleName}\r\n          />\r\n        </FormControl>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RecipeRow);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Infinite from 'react-infinite';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nfunction newRecipe(\r\n  isEu,\r\n  step,\r\n  machineName,\r\n  machineTier,\r\n  overclock,\r\n  rft,\r\n  time,\r\n  inputs,\r\n  outputs\r\n) {\r\n  let recipe = {\r\n    step: step,\r\n    machineName: machineName,\r\n    machineTier: machineTier,\r\n    overclock: overclock,\r\n    rft: isEu ? rft * 4 : rft,\r\n    time: time,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    targetMachines: 1,\r\n  };\r\n\r\n  return recipe;\r\n}\r\n\r\nconst RecipeMenu = React.memo(function RecipeMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState('');\r\n  const [machineTier, setMachineTier] = React.useState(0);\r\n  const [overclock, setOverclock] = React.useState(false);\r\n  const [rft, setRft] = React.useState(0);\r\n  const [time, setTime] = React.useState(0);\r\n  const [numInputs, setNumInputs] = React.useState(1);\r\n  const [numOutputs, setNumOutputs] = React.useState(1);\r\n  const [valid, setValid] = React.useState(false);\r\n\r\n  const [inputs, setInputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n  const [outputs, setOutputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n  const regWholeNumber = /^\\d+$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumRft = (value) => {\r\n    if (value >= 0) {\r\n      setRft(value);\r\n    }\r\n  };\r\n\r\n  const handleNumTime = (value) => {\r\n    if (value >= 0) {\r\n      setTime(value);\r\n    }\r\n  };\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateMachineName = (value) => {\r\n    setMachineName(value);\r\n\r\n    if (value.length === 0) {\r\n      setValid(false);\r\n    } else {\r\n      setValid(true);\r\n    }\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n\r\n    let valid = true;\r\n    newInputs.forEach((input) => {\r\n      if (input.name.length === 0) {\r\n        valid = valid && false;\r\n      }\r\n    });\r\n\r\n    setValid(valid);\r\n  };\r\n\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = outputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n\r\n    let valid = true;\r\n    newOutputs.forEach((output) => {\r\n      if (output.name.length === 0) {\r\n        valid = valid && false;\r\n      }\r\n    });\r\n\r\n    setValid(valid);\r\n  };\r\n\r\n  const handleUpdateRecipes = () => {\r\n    let recipes = props.recipes;\r\n    let index = recipes.length;\r\n\r\n    recipes.push(\r\n      newRecipe(\r\n        isEu,\r\n        index,\r\n        machineName,\r\n        machineTier,\r\n        overclock,\r\n        rft,\r\n        time,\r\n        inputs,\r\n        outputs\r\n      )\r\n    );\r\n\r\n    props.handleUpdate(recipes);\r\n    props.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleUpdateMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={overclock === true}\r\n              onChange={() => setOverclock(!overclock)}\r\n              value={overclock}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Overclock\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                inputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : inputs.length === 0\r\n                  ? 72\r\n                  : inputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {inputs.map((input, index) => (\r\n                <RecipeRow\r\n                  key={'input' + index}\r\n                  id={index}\r\n                  item={input}\r\n                  handleUpdateItems={handleUpdateInputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                outputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : outputs.length === 0\r\n                  ? 72\r\n                  : outputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {outputs.map((output, index) => (\r\n                <RecipeRow\r\n                  key={'output' + index}\r\n                  id={index}\r\n                  item={output}\r\n                  handleUpdateItems={handleUpdateOutputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleUpdateRecipes} color=\"default\" disabled={!valid}>\r\n          Add\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RecipeMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MachineRequirements, CalculateTarget } from '../utils/graph';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CalculatorMenu = React.memo(function CalculatorMenu(props) {\r\n  const classes = useStyles();\r\n  const [requirements, setRequirements] = React.useState(\r\n    MachineRequirements(props.recipes, props.graph)\r\n  );\r\n  const [targetMachines, setTargetMachines] = React.useState(1);\r\n  const [targetItem, setTargetItem] = React.useState(\r\n    requirements.outputs.length !== 0 ? Object.keys(requirements.outputs)[0] : 0\r\n  );\r\n  const [targetQuantity, setTargetQuantity] = React.useState(\r\n    requirements.outputs.length !== 0\r\n      ? requirements.outputs[targetItem].quantity\r\n      : 0\r\n  );\r\n  const [targetRatio, setTargetRatio] = React.useState(\r\n    requirements.outputs.length !== 0\r\n      ? targetQuantity / requirements.outputs[targetItem].time\r\n      : 0\r\n  );\r\n  const [targetOps, setTargetOps] = React.useState(targetRatio);\r\n  const [targetLabelWidth, setTargetLabelWidth] = React.useState(0);\r\n\r\n  const targetLabel = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (props.recipes.length !== 0) {\r\n      setTargetLabelWidth(targetLabel.current.offsetWidth);\r\n    }\r\n  }, [props.recipes.length]);\r\n\r\n  const handleOps = (value) => {\r\n    setTargetOps(value);\r\n    setTargetMachines(value / targetRatio);\r\n  };\r\n\r\n  const handleMachines = (value) => {\r\n    setTargetMachines(value);\r\n    setTargetOps(value * targetRatio);\r\n  };\r\n\r\n  const handleItem = (value) => {\r\n    let quantity = requirements.outputs[value].quantity;\r\n    setTargetItem(value);\r\n    setTargetQuantity(quantity);\r\n    setTargetRatio(quantity / requirements.outputs[value].time);\r\n  };\r\n\r\n  const handleTarget = () => {\r\n    props.graph.setNodeAttribute(\r\n      requirements.outputs[targetItem].node,\r\n      'targetMachines',\r\n      targetMachines\r\n    );\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    let calculatedGraph = props.graph.copy();\r\n    Object.entries(requirements.outputs)\r\n      .sort()\r\n      .forEach(([key, value]) => CalculateTarget(calculatedGraph, value.node));\r\n\r\n    setRequirements(MachineRequirements(props.recipes, calculatedGraph));\r\n  };\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        {props.recipes.length !== 0 ? (\r\n          <>\r\n            <DialogContentText>\r\n              The default setting for the calculator is a single machine\r\n              producing the final product. If you require more or less product,\r\n              adjust the machines or outputs per second. Once you have set\r\n              custom targets, press the 'calculate' button to redetermine the\r\n              requirements for the recipe.\r\n            </DialogContentText>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  error={!regAnyNumber.test(targetOps)}\r\n                  label=\"Output per second\"\r\n                  placeholder=\"1\"\r\n                  required\r\n                  type=\"number\"\r\n                  value={targetOps}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => handleOps(Number(event.target.value))}\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <TextField\r\n                  error={!regAnyNumber.test(targetMachines)}\r\n                  label=\"Number of machines\"\r\n                  placeholder=\"1\"\r\n                  required\r\n                  type=\"number\"\r\n                  value={targetMachines}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) =>\r\n                    handleMachines(Number(event.target.value))\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel ref={targetLabel}>Target Output</InputLabel>\r\n                <Select\r\n                  label=\"Target Output\"\r\n                  labelWidth={targetLabelWidth}\r\n                  value={targetItem}\r\n                  onChange={(event) => handleItem(event.target.value)}>\r\n                  {Object.entries(requirements.outputs)\r\n                    .sort()\r\n                    .map(([key, value]) => (\r\n                      <MenuItem key={'select' + key} value={key}>\r\n                        {key}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <div>\r\n                <Button\r\n                  className={classes.margin}\r\n                  onClick={handleTarget}\r\n                  color=\"default\"\r\n                  variant=\"outlined\">\r\n                  Set Target\r\n                </Button>\r\n                <Button\r\n                  className={classes.margin}\r\n                  onClick={handleCalculate}\r\n                  color=\"default\"\r\n                  variant=\"outlined\">\r\n                  Calculate\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <Divider style={{ margin: '12px 0' }} />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignitems=\"center\">\r\n              <Grid item xs={3}>\r\n                <DialogContentText>Machines per Step</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <DialogContentText>Machine Totals</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Inputs/s</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Outputs/s</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Power Consumed</DialogContentText>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignitems=\"center\">\r\n              <Grid item xs={3}>\r\n                {Object.entries(requirements.machineSteps).map(\r\n                  ([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      Step {key} : {value} <br />\r\n                    </React.Fragment>\r\n                  )\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {Object.entries(requirements.machineTotals)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} : {value} <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {Object.entries(requirements.inputs)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} :{' '}\r\n                      {(\r\n                        (value.quantity / value.time) *\r\n                        value.targetMachines\r\n                      ).toFixed(2)}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {Object.entries(requirements.outputs)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} :{' '}\r\n                      {(\r\n                        (value.quantity / value.time) *\r\n                        value.targetMachines\r\n                      ).toFixed(2)}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                RF/t: {requirements.rft} <br />\r\n                EU/t: {requirements.rft / 4}\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <DialogContentText>No recipe information.</DialogContentText>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CalculatorMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Infinite from 'react-infinite';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nfunction updatedRecipe(\r\n  isEu,\r\n  step,\r\n  machineName,\r\n  machineTier,\r\n  overclock,\r\n  rft,\r\n  time,\r\n  inputs,\r\n  outputs\r\n) {\r\n  let recipe = {\r\n    step: step,\r\n    machineName: machineName,\r\n    machineTier: machineTier,\r\n    overclock: overclock,\r\n    rft: isEu ? rft * 4 : rft,\r\n    time: time,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    targetMachines: 1,\r\n  };\r\n\r\n  return recipe;\r\n}\r\n\r\nconst EditMenu = React.memo(function EditMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState(\r\n    props.rowData.machineName\r\n  );\r\n  const [machineTier, setMachineTier] = React.useState(\r\n    props.rowData.machineTier\r\n  );\r\n  const [overclock, setOverclock] = React.useState(props.rowData.overclock);\r\n  const [rft, setRft] = React.useState(props.rowData.rft);\r\n  const [time, setTime] = React.useState(props.rowData.time);\r\n  const [numInputs, setNumInputs] = React.useState(props.rowData.inputs.length);\r\n  const [numOutputs, setNumOutputs] = React.useState(\r\n    props.rowData.outputs.length\r\n  );\r\n  const [inputs, setInputs] = React.useState(\r\n    props.rowData.inputs.slice(0, props.rowData.inputs.length)\r\n  );\r\n  const [outputs, setOutputs] = React.useState(\r\n    props.rowData.outputs.slice(0, props.rowData.outputs.length)\r\n  );\r\n  const [valid, setValid] = React.useState(true);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n  const regWholeNumber = /^\\d+$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumRft = (value) => {\r\n    if (value >= 0) {\r\n      setRft(value);\r\n    }\r\n  };\r\n\r\n  const handleNumTime = (value) => {\r\n    if (value >= 0) {\r\n      setTime(value);\r\n    }\r\n  };\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0 && value <= 100 && regWholeNumber.test(value)) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0 && value <= 100 && regWholeNumber.test(value)) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateMachineName = (value) => {\r\n    setMachineName(value);\r\n\r\n    if (value.length === 0) {\r\n      setValid(false);\r\n    } else {\r\n      setValid(true);\r\n    }\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n\r\n    let valid = true;\r\n    newInputs.forEach((input) => {\r\n      if (input.name.length === 0) {\r\n        valid = valid && false;\r\n      }\r\n    });\r\n\r\n    setValid(valid);\r\n  };\r\n\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = outputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n\r\n    let valid = true;\r\n    newOutputs.forEach((output) => {\r\n      if (output.name.length === 0) {\r\n        valid = valid && false;\r\n      }\r\n    });\r\n\r\n    setValid(valid);\r\n  };\r\n\r\n  const handleUpdateRecipes = () => {\r\n    let recipes = props.recipes;\r\n    let index = recipes.indexOf(props.rowData);\r\n\r\n    if (valid) {\r\n      recipes[index] = updatedRecipe(\r\n        isEu,\r\n        props.rowData.step,\r\n        machineName,\r\n        machineTier,\r\n        overclock,\r\n        rft,\r\n        time,\r\n        inputs,\r\n        outputs\r\n      );\r\n      props.handleUpdate(recipes);\r\n      props.handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleUpdateMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={overclock === true}\r\n              onChange={() => setOverclock(!overclock)}\r\n              value={overclock}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Overclock\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                inputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : inputs.length === 0\r\n                  ? 72\r\n                  : inputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {inputs.map((input, index) => (\r\n                <RecipeRow\r\n                  key={'input' + index}\r\n                  id={index}\r\n                  item={input}\r\n                  handleUpdateItems={handleUpdateInputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                outputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : outputs.length === 0\r\n                  ? 72\r\n                  : outputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {outputs.map((output, index) => (\r\n                <RecipeRow\r\n                  key={'output' + index}\r\n                  id={index}\r\n                  item={output}\r\n                  handleUpdateItems={handleUpdateOutputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleUpdateRecipes} color=\"default\" disabled={!valid}>\r\n          Save\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EditMenu;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    checked: props.themeType === 'dark' ? true : false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    props.handleTheme();\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\">\r\n          <Typography color={'textPrimary'} variant=\"subtitle1\">\r\n            Dark Theme\r\n          </Typography>\r\n          <Switch checked={state.checked} onChange={handleChange('checked')} />\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport AboutMenu from './AboutMenu';\r\nimport ImportExportMenu from './ImportExportMenu';\r\nimport ClearMenu from './ClearMenu';\r\nimport RecipeMenu from './RecipeMenu';\r\nimport CalculatorMenu from './CalculatorMenu';\r\nimport EditMenu from './EditMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nconst MenuDialog = ({\r\n  contentType,\r\n  graph,\r\n  isOpen,\r\n  recipes,\r\n  rowData,\r\n  size,\r\n  themeType,\r\n  title,\r\n  handleClose,\r\n  handleClear,\r\n  handleTheme,\r\n  handleUpdate,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick={\r\n        contentType === 'add' || contentType === 'calculator'\r\n      }\r\n      fullScreen={contentType === 'chart'}\r\n      fullWidth\r\n      maxWidth={size}\r\n      open={isOpen}\r\n      onClose={handleClose}>\r\n      {contentType === 'about' ? (\r\n        <AboutMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'import' ? (\r\n        <ImportExportMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n          recipes={recipes}\r\n        />\r\n      ) : contentType === 'clear' ? (\r\n        <ClearMenu\r\n          title={title}\r\n          handleClear={handleClear}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : contentType === 'add' ? (\r\n        <RecipeMenu\r\n          title={title}\r\n          recipes={recipes}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : contentType === 'settings' ? (\r\n        <SettingsMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleTheme={handleTheme}\r\n          themeType={themeType}\r\n        />\r\n      ) : contentType === 'calculator' ? (\r\n        <CalculatorMenu\r\n          title={title}\r\n          graph={graph}\r\n          recipes={recipes}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : contentType === 'edit' ? (\r\n        <EditMenu\r\n          title={title}\r\n          recipes={recipes}\r\n          rowData={rowData}\r\n          handleEdit={handleClose}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : (\r\n        <DialogContentText>No valid content type selected.</DialogContentText>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MenuDialog;\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialTable from 'material-table';\r\nimport { TierNames } from '../../data';\r\nimport MenuDialog from '../menus/MenuDialog';\r\n\r\nfunction DataTableCell(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.items.map((item) => (\r\n        <div key={'_' + props.type + item.name + props.step}>\r\n          {item.quantity + item.unit + ' ' + item.name}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: 'Step',\r\n          field: 'step',\r\n          readonly: true,\r\n          editable: 'never',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Machine Name',\r\n          field: 'machineName',\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Machine Tier',\r\n          field: 'machineTier',\r\n          lookup: Object.assign({}, TierNames),\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Overclock',\r\n          field: 'overclock',\r\n          type: 'boolean',\r\n          customFilterAndSearch: (search, rowData) => {\r\n            return (\r\n              rowData.overclock.toString().toUpperCase() ===\r\n              search.toUpperCase()\r\n            );\r\n          },\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'RF/t',\r\n          field: 'rft',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Time (s)',\r\n          field: 'time',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Base Inputs',\r\n          field: 'inputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.inputs}\r\n              step={rowData.step}\r\n              type={'input'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.inputs.forEach((input) => {\r\n              let values = Object.values(input);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n        {\r\n          title: 'Base Outputs',\r\n          field: 'outputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.outputs}\r\n              step={rowData.step}\r\n              type={'output'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.outputs.forEach((output) => {\r\n              let values = Object.values(output);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n      ],\r\n      recipes: Array.from(this.props.recipes),\r\n      dialog: false,\r\n      editable: [],\r\n    };\r\n  }\r\n\r\n  handleDialogOpen = (rowData) => {\r\n    this.setState({ editable: rowData });\r\n    this.setState({ dialog: true });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ dialog: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" my={2}>\r\n        <MaterialTable\r\n          actions={[\r\n            {\r\n              icon: 'arrow_upward',\r\n              tooltip: 'Move up',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index > 0) {\r\n                  let temp = recipes[index - 1];\r\n                  recipes[index - 1] = recipes[index];\r\n                  recipes[index - 1].step = index - 1;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'arrow_downward',\r\n              tooltip: 'Move down',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index < recipes.length - 1) {\r\n                  let temp = recipes[index + 1];\r\n                  recipes[index + 1] = recipes[index];\r\n                  recipes[index + 1].step = index + 1;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'edit',\r\n              tooltip: 'Edit Recipe',\r\n              onClick: (event, rowData) => {\r\n                this.handleDialogOpen(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          columns={this.state.columns}\r\n          data={Array.from(this.props.recipes)}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = [...this.state.recipes];\r\n                    let index = recipes.indexOf(oldData);\r\n                    recipes.splice(index, 1);\r\n\r\n                    recipes.forEach((recipe, index) => {\r\n                      recipe.step = index + 1;\r\n                    });\r\n\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 200);\r\n              }),\r\n          }}\r\n          localization={{\r\n            body: { emptyDataSourceMessage: 'No recipes to display' },\r\n          }}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: '77vh',\r\n            paging: true,\r\n            pageSizeOptions: [5, 10, 15, 20],\r\n            showTitle: false,\r\n            sorting: false,\r\n            tableLayout: 'auto',\r\n          }}\r\n        />\r\n        <MenuDialog\r\n          contentType={'edit'}\r\n          size={'lg'}\r\n          title={'Edit a recipe'}\r\n          recipes={this.state.recipes}\r\n          rowData={this.state.editable}\r\n          isOpen={this.state.dialog}\r\n          handleClose={this.handleDialogClose}\r\n          handleUpdate={this.props.handleUpdate}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import DataTable from './DataTable';\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport MenuDialog from './menus/MenuDialog';\r\n\r\nconst NavContent = React.memo(function NavContent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [size, setSize] = React.useState('xs');\r\n\r\n  const handleDialogOpen = (type, title, size) => {\r\n    setSize(size);\r\n    setTitle(title);\r\n    setType(type);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    props.handleClear();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('about', 'About', 'xs')}>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'About'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen('import', 'Import or export a recipe list', 'sm')\r\n          }>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Import/Export Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'clear',\r\n              'Are you sure you want to clear all recipes?',\r\n              'xs'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <DeleteForeverIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Clear All Recipes'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('add', 'Add a recipe', 'lg')}>\r\n          <ListItemIcon>\r\n            <AddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Add Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'calculator',\r\n              'Calculated requirements for this recipe',\r\n              'lg'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <FunctionsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Calculator'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('settings', 'Settings', 'xs')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Settings'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <MenuDialog\r\n        contentType={type}\r\n        graph={props.graph}\r\n        recipes={props.recipes}\r\n        size={size}\r\n        themeType={props.themeType}\r\n        title={title}\r\n        isOpen={open}\r\n        handleClear={handleClear}\r\n        handleClose={handleDialogClose}\r\n        handleUpdate={props.handleUpdate}\r\n        handleTheme={props.handleTheme}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NavContent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => ({\r\n  header: {\r\n    fontWeight: 700,\r\n    minWidth: 0,\r\n    fontSize: 18,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst HeaderContent = ({ classes }) => (\r\n  <Typography noWrap color={'textPrimary'} className={classes.header}>\r\n    Production Chain\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(HeaderContent);\r\n","import { TierNames, Voltages } from '../../data';\r\n/**\r\n * Adapted from GregTech Community Edition calculateOverclock function.\r\n * https://github.com/GregTechCE/GregTech/blob/master/src/main/java/gregtech/api/capability/impl/AbstractRecipeLogic.java\r\n * Returns object containing { rft: number, time: number }\r\n *\r\n * @export\r\n * @param {Number} EUt - EU per tick\r\n * @param {Number} tierIndex - GregTech machine tier\r\n * @param {Number} duration - Recipe duration in ticks\r\n * @returns\r\n */\r\nfunction Overclock(EUt, tierIndex, duration) {\r\n  let tier = TierNames.indexOf(TierNames[tierIndex]) - 1;\r\n  let resultEUt = EUt;\r\n  let resultDuration = duration;\r\n  let multiplier = 0;\r\n\r\n  if (Voltages[tier] <= EUt || tier === 0 || tier === -1 || EUt === 0) {\r\n    return {\r\n      eut: resultEUt,\r\n      ticks: resultDuration,\r\n    };\r\n  }\r\n\r\n  if (EUt <= 16) {\r\n    if (EUt <= 8) {\r\n      multiplier = tier;\r\n    } else {\r\n      multiplier = tier - 1;\r\n    }\r\n\r\n    resultEUt = EUt * (1 << multiplier) * (1 << multiplier);\r\n    resultDuration = duration / (1 << multiplier);\r\n\r\n    return {\r\n      eut: resultEUt,\r\n      ticks: resultDuration,\r\n    };\r\n  } else {\r\n    while (resultDuration >= 3 && resultEUt <= Voltages[tierIndex - 1]) {\r\n      resultEUt = resultEUt * 4;\r\n      resultDuration = resultDuration / 2.8;\r\n    }\r\n  }\r\n\r\n  return {\r\n    eut: resultEUt,\r\n    ticks: Math.ceil(resultDuration),\r\n  };\r\n}\r\n\r\nfunction AddOverclock(recipes) {\r\n  recipes.forEach((recipe) => {\r\n    let oc = Overclock(recipe.rft / 4, recipe.machineTier, recipe.time);\r\n\r\n    recipe.rftoc = oc.eut * 4;\r\n    recipe.timeoc = oc.ticks;\r\n  });\r\n\r\n  return recipes;\r\n}\r\n\r\nexport { Overclock, AddOverclock };\r\n","import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Root,\r\n  Header,\r\n  Sidebar,\r\n  CollapseBtn,\r\n  CollapseIcon,\r\n  Content,\r\n  SidebarTrigger,\r\n  SidebarTriggerIcon,\r\n  headerStyles,\r\n} from '@mui-treasury/layout';\r\nimport { DefaultTheme, Recipes } from './data';\r\nimport { GenerateGraph } from './components/utils/graph';\r\nimport DataTable from './components/DataTable';\r\nimport NavContent from './components/NavContent';\r\nimport HeaderContent from './components/HeaderContent';\r\n\r\nimport { AddOverclock } from './components/utils/overclock';\r\n\r\nlet config = {\r\n  sidebar: {\r\n    anchor: 'left',\r\n    width: 256,\r\n    variant: 'permanent',\r\n    collapsible: true,\r\n    collapsedWidth: 64,\r\n  },\r\n  content: { persistentBehavior: 'fit' },\r\n  header: {\r\n    position: 'fixed',\r\n    clipped: false,\r\n    persistentBehavior: 'fit',\r\n    offsetHeight: 64,\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let themeType = window.localStorage.getItem('theme');\r\n    let collapsed = window.localStorage.getItem('collapsed');\r\n    let storedRecipes = JSON.parse(window.localStorage.getItem('recipes'));\r\n\r\n    if (themeType === null) {\r\n      window.localStorage.setItem('theme', 'dark');\r\n    } else if (themeType === 'light') {\r\n      DefaultTheme.palette.type = 'light';\r\n    } else if (themeType === 'dark') {\r\n      DefaultTheme.palette.type = 'dark';\r\n    }\r\n\r\n    if (collapsed === null) {\r\n      window.localStorage.setItem('collapsed', 'false');\r\n    }\r\n\r\n    if (storedRecipes === null) {\r\n      window.localStorage.setItem('recipes', '[]');\r\n      storedRecipes = [];\r\n    }\r\n\r\n    let recipes = AddOverclock(storedRecipes.slice(0, storedRecipes.length));\r\n    let graph = GenerateGraph(recipes);\r\n\r\n    this.state = {\r\n      theme: DefaultTheme,\r\n      headers: Headers,\r\n      recipes: recipes,\r\n      collapsed: collapsed === 'true',\r\n      graph: graph,\r\n    };\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let theme = this.state.theme;\r\n\r\n    if (theme.palette.type === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      theme.palette.type = 'dark';\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      theme.palette.type = 'light';\r\n    }\r\n\r\n    this.setState({ theme });\r\n  };\r\n\r\n  handleCollapse = (collapsed) => {\r\n    window.localStorage.setItem('collapsed', !collapsed);\r\n    this.setState({ collapsed: !collapsed });\r\n  };\r\n\r\n  handleClear = () => {\r\n    let recipes = this.state.recipes;\r\n    recipes.length = 0;\r\n\r\n    this.setState({ recipes });\r\n    window.localStorage.setItem('recipes', JSON.stringify(recipes));\r\n  };\r\n\r\n  handleUpdate = (newRecipes) => {\r\n    let recipes = newRecipes;\r\n    let graph = GenerateGraph(recipes);\r\n    this.setState({ recipes });\r\n    this.setState({ graph });\r\n    window.localStorage.setItem('recipes', JSON.stringify(recipes));\r\n  };\r\n\r\n  render() {\r\n    let muiTheme = createMuiTheme(this.state.theme);\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <CssBaseline />\r\n        <Root\r\n          theme={muiTheme}\r\n          config={config}\r\n          initialCollapsed={this.state.collapsed}>\r\n          {({ sidebarStyles, collapsed }) => (\r\n            <>\r\n              <Header>\r\n                <Toolbar>\r\n                  <SidebarTrigger className={headerStyles.leftTrigger}>\r\n                    <SidebarTriggerIcon />\r\n                  </SidebarTrigger>\r\n                  <HeaderContent />\r\n                </Toolbar>\r\n              </Header>\r\n              <Sidebar>\r\n                <div className={sidebarStyles.container}>\r\n                  <NavContent\r\n                    graph={this.state.graph}\r\n                    handleTheme={this.toggleDarkTheme}\r\n                    handleClear={this.handleClear}\r\n                    recipes={this.state.recipes}\r\n                    handleUpdate={this.handleUpdate}\r\n                    themeType={this.state.theme.palette.type}\r\n                  />\r\n                </div>\r\n                <CollapseBtn onClick={() => this.handleCollapse(collapsed)}>\r\n                  <CollapseIcon />\r\n                </CollapseBtn>\r\n              </Sidebar>\r\n              <Content>\r\n                <Container maxWidth=\"xl\">\r\n                  <Box my={2}>\r\n                    <DataTable\r\n                      recipes={this.state.recipes}\r\n                      handleUpdate={this.handleUpdate}\r\n                      onChangeOC={this.handleOverclock}\r\n                      onChangeTier={this.handleTier}\r\n                    />\r\n                  </Box>\r\n                </Container>\r\n              </Content>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}